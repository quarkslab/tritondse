Search.setIndex({"alltitles": {"0. Multiple input sources": [[18, "multiple-input-sources"]], "1. Non standard input": [[18, "non-standard-input"]], "2. Symbolic read": [[18, "symbolic-read"]], "3. Symbolic read & write": [[18, "symbolic-read-write"]], "4. String length": [[18, "string-length"]], "5. Off-by-One example": [[18, "off-by-one-example"]], "CLE Loader": [[20, "CLE-Loader"]], "Callback Mechanism": [[0, "callback-mechanism"]], "Callback signatures": [[0, "callback-signatures"]], "CallbackManager": [[0, "callbackmanager"]], "CleLoader": [[6, "cleloader"]], "Configuration": [[1, "configuration"]], "Context": [[7, "context"]], "Coverage": [[2, "module-tritondse.coverage"]], "CpuState": [[7, "cpustate"]], "Crackme": [[16, "crackme"]], "Creating a new Loader": [[6, "creating-a-new-loader"]], "Difference with Triton": [[15, "difference-with-triton"]], "Exception": [[3, "exception"]], "Existing strategies": [[14, "existing-strategies"]], "Firmware Loading": [[20, "Firmware-Loading"]], "Getting Started": [[15, null], [23, "Getting-Started"]], "Hackcon-2016-angry-reverser": [[16, "hackcon-2016-angry-reverser"]], "Hackover-ctf-2015-r150": [[16, "hackover-ctf-2015-r150"]], "HeapAllocator": [[7, "heapallocator"]], "How to inject arbitrary variables": [[22, "How-to-inject-arbitrary-variables"]], "I. Instruction hooking": [[19, "I.-Instruction-hooking"]], "I. Program": [[23, "I.-Program"]], "II. Address/Function hooking": [[19, "II.-Address/Function-hooking"]], "II. Single Execution": [[23, "II.-Single-Execution"]], "III. Concrete State Manipulation": [[23, "III.-Concrete-State-Manipulation"]], "III. Solving queries": [[19, "III.-Solving-queries"]], "IV. Hooking exploration events": [[19, "IV.-Hooking-exploration-events"]], "IV. Manipulating symbolic state": [[23, "IV.-Manipulating-symbolic-state"]], "Initial Corpus": [[22, "Initial-Corpus"]], "Installation": [[15, "installation"]], "Introduction": [[17, "introduction"]], "JSON Parser": [[17, "json-parser"]], "Linux": [[13, "module-tritondse.routines"]], "Linux ELF loader": [[20, "Linux-ELF-loader"]], "Loaders": [[6, "loaders"], [20, "Loaders"]], "Managing Seeds": [[22, "Managing-Seeds"]], "Managing generated corpus": [[22, "Managing-generated-corpus"]], "Memory": [[7, "memory"]], "MonolithicLoader": [[6, "monolithicloader"]], "Objectives": [[17, "objectives"]], "Playing with Hooks": [[19, "Playing-with-Hooks"]], "Practical information": [[17, "practical-information"]], "Probe Interface": [[0, "probe-interface"]], "Probe mechanism": [[21, "Probe-mechanism"]], "ProcessState": [[7, "processstate"]], "Program": [[6, "program"]], "QuokkaProgram": [[6, "quokkaprogram"]], "Sanitizers": [[8, "sanitizers"]], "Sanitizers & Probes": [[21, "Sanitizers-&-Probes"]], "Seed": [[9, "module-tritondse.seed"]], "Seed Scheduling": [[14, "seed-scheduling"]], "SeedManager": [[5, "seedmanager"]], "Setting seed status": [[22, "Setting-seed-status"]], "Supported Routines": [[13, "supported-routines"]], "SymbolicExecutor": [[4, "symbolicexecutor"]], "SymbolicExplorator": [[5, "symbolicexplorator"]], "ThreadContext": [[7, "threadcontext"]], "Tips": [[17, "tips"]], "Todo": [[0, "id1"], [13, "id2"]], "Toy Example": [[18, "toy-example"]], "Trace": [[10, "trace"]], "TritonDSE": [[15, "tritondse"]], "Types": [[11, "module-tritondse.types"]], "Using built-in sanitizers": [[21, "Using-built-in-sanitizers"]], "V. Configuration": [[23, "V.-Configuration"]], "VI. Exploration": [[23, "VI.-Exploration"]], "VII. Workspace & Corpus": [[23, "VII.-Workspace-&-Corpus"]], "Windows": [[13, "windows"]], "Workspace": [[12, "workspace"]], "Writing a Loader": [[20, "Writing-a-Loader"]], "Writing a sanitizer": [[21, "Writing-a-sanitizer"]], "a. Reading, writing registers (function API)": [[23, "a.-Reading,-writing-registers-(function-API)"]], "b. Reading, writing registers (Pythonic API)": [[23, "b.-Reading,-writing-registers-(Pythonic-API)"]], "c. Reading, writing memory": [[23, "c.-Reading,-writing-memory"]]}, "docnames": ["api/callbacks", "api/configuration", "api/coverage", "api/exception", "api/executor", "api/explorator", "api/loaders", "api/process", "api/sanitizers", "api/seeds", "api/tracing", "api/types", "api/workspace", "dev_doc/routines", "dev_doc/seedscheduling", "index", "practicals/crackme/crackme", "practicals/json_parser/json_parser", "practicals/toy_example/toy_example", "tutos/hooks", "tutos/loaders", "tutos/sanitizers", "tutos/seeds", "tutos/starting"], "envversion": {"nbsphinx": 4, "sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api/callbacks.rst", "api/configuration.rst", "api/coverage.rst", "api/exception.rst", "api/executor.rst", "api/explorator.rst", "api/loaders.rst", "api/process.rst", "api/sanitizers.rst", "api/seeds.rst", "api/tracing.rst", "api/types.rst", "api/workspace.rst", "dev_doc/routines.rst", "dev_doc/seedscheduling.rst", "index.rst", "practicals/crackme/crackme.rst", "practicals/json_parser/json_parser.rst", "practicals/toy_example/toy_example.rst", "tutos/hooks.ipynb", "tutos/loaders.ipynb", "tutos/sanitizers.ipynb", "tutos/seeds.ipynb", "tutos/starting.ipynb"], "indexentries": {"__annotations__ (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.__annotations__", false]], "__bytes__() (tritondse.seed.compositedata method)": [[9, "tritondse.seed.CompositeData.__bytes__", false]], "__bytes__() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.__bytes__", false]], "__dataclass_fields__ (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.__dataclass_fields__", false]], "__dataclass_params__ (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.__dataclass_params__", false]], "__delattr__() (tritondse.seed.compositedata method)": [[9, "tritondse.seed.CompositeData.__delattr__", false]], "__dict__ (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.__dict__", false]], "__dict__ (tritondse.seed.seed attribute)": [[9, "tritondse.seed.Seed.__dict__", false]], "__eq__() (tritondse.seed.compositedata method)": [[9, "tritondse.seed.CompositeData.__eq__", false]], "__eq__() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.__eq__", false]], "__hash__() (tritondse.seed.compositedata method)": [[9, "tritondse.seed.CompositeData.__hash__", false]], "__hash__() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.__hash__", false]], "__init__() (tritondse.seed.compositedata method)": [[9, "tritondse.seed.CompositeData.__init__", false]], "__init__() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.__init__", false]], "__len__() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.__len__", false]], "__match_args__ (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.__match_args__", false]], "__module__ (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.__module__", false]], "__module__ (tritondse.seed.seed attribute)": [[9, "tritondse.seed.Seed.__module__", false]], "__module__ (tritondse.seed.seedformat attribute)": [[9, "tritondse.seed.SeedFormat.__module__", false]], "__module__ (tritondse.seed.seedstatus attribute)": [[9, "tritondse.seed.SeedStatus.__module__", false]], "__repr__() (tritondse.seed.compositedata method)": [[9, "tritondse.seed.CompositeData.__repr__", false]], "__setattr__() (tritondse.seed.compositedata method)": [[9, "tritondse.seed.CompositeData.__setattr__", false]], "__weakref__ (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.__weakref__", false]], "__weakref__ (tritondse.seed.seed attribute)": [[9, "tritondse.seed.Seed.__weakref__", false]], "aarch64 (tritondse.types.architecture attribute)": [[11, "tritondse.types.Architecture.AARCH64", false]], "add_covered_address() (tritondse.coverage.coveragesinglerun method)": [[2, "tritondse.coverage.CoverageSingleRun.add_covered_address", false]], "add_covered_address() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.add_covered_address", false]], "add_covered_branch() (tritondse.coverage.coveragesinglerun method)": [[2, "tritondse.coverage.CoverageSingleRun.add_covered_branch", false]], "add_covered_branch() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.add_covered_branch", false]], "add_covered_dynamic_branch() (tritondse.coverage.coveragesinglerun method)": [[2, "tritondse.coverage.CoverageSingleRun.add_covered_dynamic_branch", false]], "add_covered_dynamic_branch() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.add_covered_dynamic_branch", false]], "addr (in module tritondse.types)": [[11, "tritondse.types.Addr", false]], "all_not_covered (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.ALL_NOT_COVERED", false]], "android (tritondse.types.platform attribute)": [[11, "tritondse.types.Platform.ANDROID", false]], "argv (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.argv", false]], "arm32 (tritondse.types.architecture attribute)": [[11, "tritondse.types.Architecture.ARM32", false]], "as_integer_ratio() (tritondse.coverage.branchsolvingstrategy method)": [[2, "tritondse.coverage.BranchSolvingStrategy.as_integer_ratio", false]], "astnode (class in tritondse.types)": [[11, "tritondse.types.AstNode", false]], "base_pointer (tritondse.arch.cpustate property)": [[7, "tritondse.arch.CpuState.base_pointer", false]], "big (tritondse.types.endian attribute)": [[11, "tritondse.types.Endian.BIG", false]], "bit_count() (tritondse.coverage.branchsolvingstrategy method)": [[2, "tritondse.coverage.BranchSolvingStrategy.bit_count", false]], "bit_length() (tritondse.coverage.branchsolvingstrategy method)": [[2, "tritondse.coverage.BranchSolvingStrategy.bit_length", false]], "bitsize (in module tritondse.types)": [[11, "tritondse.types.BitSize", false]], "bitwuzla (tritondse.types.smtsolver attribute)": [[11, "tritondse.types.SmtSolver.BITWUZLA", false]], "block (tritondse.coverage.coveragestrategy attribute)": [[2, "tritondse.coverage.CoverageStrategy.BLOCK", false]], "bytes() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.bytes", false]], "bytesize (in module tritondse.types)": [[11, "tritondse.types.ByteSize", false]], "can_cover_symbolic_pointers() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.can_cover_symbolic_pointers", false]], "can_improve_coverage() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.can_improve_coverage", false]], "capitalize() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.capitalize", false]], "casefold() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.casefold", false]], "center() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.center", false]], "clone() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.clone", false]], "composite (tritondse.seed.seedformat attribute)": [[9, "tritondse.seed.SeedFormat.COMPOSITE", false]], "compositedata (class in tritondse.seed)": [[9, "tritondse.seed.CompositeData", false]], "conditional_jmp (tritondse.types.symextype attribute)": [[11, "tritondse.types.SymExType.CONDITIONAL_JMP", false]], "conjugate() (tritondse.coverage.branchsolvingstrategy method)": [[2, "tritondse.coverage.BranchSolvingStrategy.conjugate", false]], "constraint (tritondse.types.pathbranch attribute)": [[11, "tritondse.types.PathBranch.constraint", false]], "count() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.count", false]], "cover_sym_dynjump (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.COVER_SYM_DYNJUMP", false]], "cover_sym_read (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.COVER_SYM_READ", false]], "cover_sym_write (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.COVER_SYM_WRITE", false]], "coverage_file (tritondse.coverage.globalcoverage attribute)": [[2, "tritondse.coverage.GlobalCoverage.COVERAGE_FILE", false]], "coveragesinglerun (class in tritondse.coverage)": [[2, "tritondse.coverage.CoverageSingleRun", false]], "covered_instructions (tritondse.coverage.coveragesinglerun attribute)": [[2, "tritondse.coverage.CoverageSingleRun.covered_instructions", false]], "covered_instructions (tritondse.coverage.globalcoverage attribute)": [[2, "tritondse.coverage.GlobalCoverage.covered_instructions", false]], "covered_items (tritondse.coverage.coveragesinglerun attribute)": [[2, "tritondse.coverage.CoverageSingleRun.covered_items", false]], "covered_items (tritondse.coverage.globalcoverage attribute)": [[2, "tritondse.coverage.GlobalCoverage.covered_items", false]], "covered_symbolic_pointers (tritondse.coverage.globalcoverage attribute)": [[2, "tritondse.coverage.GlobalCoverage.covered_symbolic_pointers", false]], "covitem (in module tritondse.coverage)": [[2, "tritondse.coverage.CovItem", false]], "cpustate (class in tritondse.arch)": [[7, "tritondse.arch.CpuState", false]], "crash (tritondse.seed.seedstatus attribute)": [[9, "tritondse.seed.SeedStatus.CRASH", false]], "denominator (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.denominator", false]], "difference() (tritondse.coverage.coveragesinglerun method)": [[2, "tritondse.coverage.CoverageSingleRun.difference", false]], "difference() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.difference", false]], "dstaddr (tritondse.types.pathbranch attribute)": [[11, "tritondse.types.PathBranch.dstAddr", false]], "dynamic_jmp (tritondse.types.symextype attribute)": [[11, "tritondse.types.SymExType.DYNAMIC_JMP", false]], "edge (in module tritondse.types)": [[11, "tritondse.types.Edge", false]], "edge (tritondse.coverage.coveragestrategy attribute)": [[2, "tritondse.coverage.CoverageStrategy.EDGE", false]], "encode() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.encode", false]], "endswith() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.endswith", false]], "expandtabs() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.expandtabs", false]], "expression (class in tritondse.types)": [[11, "tritondse.types.Expression", false]], "fail (tritondse.seed.seedstatus attribute)": [[9, "tritondse.seed.SeedStatus.FAIL", false]], "fd (tritondse.types.filedesc attribute)": [[11, "tritondse.types.FileDesc.fd", false]], "fgets() (tritondse.types.filedesc method)": [[11, "tritondse.types.FileDesc.fgets", false]], "filedesc (class in tritondse.types)": [[11, "tritondse.types.FileDesc", false]], "filename (tritondse.seed.seed property)": [[9, "tritondse.seed.Seed.filename", false]], "files (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.files", false]], "find() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.find", false]], "first_last_not_covered (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.FIRST_LAST_NOT_COVERED", false]], "format (tritondse.seed.seed property)": [[9, "tritondse.seed.Seed.format", false]], "format() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.format", false]], "format_map() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.format_map", false]], "from_bytes() (tritondse.coverage.branchsolvingstrategy method)": [[2, "tritondse.coverage.BranchSolvingStrategy.from_bytes", false]], "from_bytes() (tritondse.seed.seed static method)": [[9, "tritondse.seed.Seed.from_bytes", false]], "from_dict() (tritondse.seed.compositedata static method)": [[9, "tritondse.seed.CompositeData.from_dict", false]], "from_file() (tritondse.coverage.globalcoverage static method)": [[2, "tritondse.coverage.GlobalCoverage.from_file", false]], "from_file() (tritondse.seed.seed static method)": [[9, "tritondse.seed.Seed.from_file", false]], "get_file_input() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.get_file_input", false]], "globalcoverage (class in tritondse.coverage)": [[2, "tritondse.coverage.GlobalCoverage", false]], "hang (tritondse.seed.seedstatus attribute)": [[9, "tritondse.seed.SeedStatus.HANG", false]], "hash (tritondse.seed.seed property)": [[9, "tritondse.seed.Seed.hash", false]], "id (tritondse.types.filedesc attribute)": [[11, "tritondse.types.FileDesc.id", false]], "imag (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.imag", false]], "improve_coverage() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.improve_coverage", false]], "index() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.index", false]], "input (in module tritondse.types)": [[11, "tritondse.types.Input", false]], "ios (tritondse.types.platform attribute)": [[11, "tritondse.types.Platform.IOS", false]], "is_bootstrap_seed() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.is_bootstrap_seed", false]], "is_composite() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.is_composite", false]], "is_covered() (tritondse.coverage.coveragesinglerun method)": [[2, "tritondse.coverage.CoverageSingleRun.is_covered", false]], "is_covered() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.is_covered", false]], "is_file_defined() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.is_file_defined", false]], "is_fresh() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.is_fresh", false]], "is_input_fd() (tritondse.types.filedesc method)": [[11, "tritondse.types.FileDesc.is_input_fd", false]], "is_raw() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.is_raw", false]], "is_real_fd() (tritondse.types.filedesc method)": [[11, "tritondse.types.FileDesc.is_real_fd", false]], "is_status_set() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.is_status_set", false]], "isalnum() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.isalnum", false]], "isalpha() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.isalpha", false]], "isascii() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.isascii", false]], "isdecimal() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.isdecimal", false]], "isdigit() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.isdigit", false]], "isidentifier() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.isidentifier", false]], "islower() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.islower", false]], "isnumeric() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.isnumeric", false]], "isprintable() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.isprintable", false]], "isspace() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.isspace", false]], "istaken (tritondse.types.pathbranch attribute)": [[11, "tritondse.types.PathBranch.isTaken", false]], "istitle() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.istitle", false]], "isupper() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.isupper", false]], "iter_new_paths() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.iter_new_paths", false]], "join() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.join", false]], "linux (tritondse.types.platform attribute)": [[11, "tritondse.types.Platform.LINUX", false]], "little (tritondse.types.endian attribute)": [[11, "tritondse.types.Endian.LITTLE", false]], "ljust() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.ljust", false]], "lower() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.lower", false]], "lstrip() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.lstrip", false]], "macos (tritondse.types.platform attribute)": [[11, "tritondse.types.Platform.MACOS", false]], "maketrans() (tritondse.coverage.coveragestrategy static method)": [[2, "tritondse.coverage.CoverageStrategy.maketrans", false]], "manual (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.MANUAL", false]], "merge() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.merge", false]], "model (class in tritondse.types)": [[11, "tritondse.types.Model", false]], "module": [[2, "module-tritondse.coverage", false], [9, "module-tritondse.seed", false], [11, "module-tritondse.types", false], [13, "module-tritondse.routines", false]], "name (tritondse.types.filedesc attribute)": [[11, "tritondse.types.FileDesc.name", false]], "new (tritondse.seed.seedstatus attribute)": [[9, "tritondse.seed.SeedStatus.NEW", false]], "new_items_to_cover() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.new_items_to_cover", false]], "not_covered_items (tritondse.coverage.globalcoverage attribute)": [[2, "tritondse.coverage.GlobalCoverage.not_covered_items", false]], "numerator (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.numerator", false]], "offset (tritondse.types.filedesc property)": [[11, "tritondse.types.FileDesc.offset", false]], "ok_done (tritondse.seed.seedstatus attribute)": [[9, "tritondse.seed.SeedStatus.OK_DONE", false]], "partition() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.partition", false]], "path (tritondse.coverage.coveragestrategy attribute)": [[2, "tritondse.coverage.CoverageStrategy.PATH", false]], "pathbranch (class in tritondse.types)": [[11, "tritondse.types.PathBranch", false]], "pathconstraint (class in tritondse.types)": [[11, "tritondse.types.PathConstraint", false]], "pathhash (in module tritondse.types)": [[11, "tritondse.types.PathHash", false]], "pathlike (in module tritondse.types)": [[11, "tritondse.types.PathLike", false]], "pending_coverage (tritondse.coverage.globalcoverage attribute)": [[2, "tritondse.coverage.GlobalCoverage.pending_coverage", false]], "post_execution() (tritondse.coverage.coveragesinglerun method)": [[2, "tritondse.coverage.CoverageSingleRun.post_execution", false]], "post_execution() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.post_execution", false]], "post_exploration() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.post_exploration", false]], "pp_item() (tritondse.coverage.coveragesinglerun method)": [[2, "tritondse.coverage.CoverageSingleRun.pp_item", false]], "pp_item() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.pp_item", false]], "prefixed_edge (tritondse.coverage.coveragestrategy attribute)": [[2, "tritondse.coverage.CoverageStrategy.PREFIXED_EDGE", false]], "program_counter (tritondse.arch.cpustate property)": [[7, "tritondse.arch.CpuState.program_counter", false]], "r (tritondse.types.perm attribute)": [[11, "tritondse.types.Perm.R", false]], "raddr (in module tritondse.types)": [[11, "tritondse.types.rAddr", false]], "raw (tritondse.seed.seedformat attribute)": [[9, "tritondse.seed.SeedFormat.RAW", false]], "read() (tritondse.types.filedesc method)": [[11, "tritondse.types.FileDesc.read", false]], "real (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.real", false]], "register (class in tritondse.types)": [[11, "tritondse.types.Register", false]], "registers (class in tritondse.types)": [[11, "tritondse.types.Registers", false]], "removeprefix() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.removeprefix", false]], "removesuffix() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.removesuffix", false]], "replace() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.replace", false]], "rfind() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.rfind", false]], "rindex() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.rindex", false]], "rjust() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.rjust", false]], "rpartition() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.rpartition", false]], "rsplit() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.rsplit", false]], "rstrip() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.rstrip", false]], "rtn___fprintf_chk() (in module tritondse.routines)": [[13, "tritondse.routines.rtn___fprintf_chk", false]], "rtn__setjmp() (in module tritondse.routines)": [[13, "tritondse.routines.rtn__setjmp", false]], "rtn_abort() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_abort", false]], "rtn_assert_fail() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_assert_fail", false]], "rtn_atexit() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_atexit", false]], "rtn_atoi() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_atoi", false]], "rtn_calloc() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_calloc", false]], "rtn_clock_gettime() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_clock_gettime", false]], "rtn_ctype_b_loc() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_ctype_b_loc", false]], "rtn_ctype_toupper_loc() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_ctype_toupper_loc", false]], "rtn_errno_location() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_errno_location", false]], "rtn_exit() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_exit", false]], "rtn_fclose() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_fclose", false]], "rtn_fgets() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_fgets", false]], "rtn_fopen() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_fopen", false]], "rtn_fprintf() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_fprintf", false]], "rtn_fputc() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_fputc", false]], "rtn_fputs() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_fputs", false]], "rtn_fread() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_fread", false]], "rtn_free() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_free", false]], "rtn_fseek() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_fseek", false]], "rtn_ftell() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_ftell", false]], "rtn_fwrite() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_fwrite", false]], "rtn_getchar() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_getchar", false]], "rtn_getenv() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_getenv", false]], "rtn_gettimeofday() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_gettimeofday", false]], "rtn_isspace() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_isspace", false]], "rtn_libc_start_main() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_libc_start_main", false]], "rtn_longjmp() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_longjmp", false]], "rtn_malloc() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_malloc", false]], "rtn_memcmp() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_memcmp", false]], "rtn_memcpy() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_memcpy", false]], "rtn_memmem() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_memmem", false]], "rtn_memmove() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_memmove", false]], "rtn_mempcpy() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_mempcpy", false]], "rtn_memset() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_memset", false]], "rtn_open() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_open", false]], "rtn_printf() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_printf", false]], "rtn_pthread_create() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_pthread_create", false]], "rtn_pthread_exit() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_pthread_exit", false]], "rtn_pthread_join() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_pthread_join", false]], "rtn_pthread_mutex_destroy() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_pthread_mutex_destroy", false]], "rtn_pthread_mutex_init() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_pthread_mutex_init", false]], "rtn_pthread_mutex_lock() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_pthread_mutex_lock", false]], "rtn_pthread_mutex_unlock() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_pthread_mutex_unlock", false]], "rtn_puts() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_puts", false]], "rtn_rand() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_rand", false]], "rtn_read() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_read", false]], "rtn_realloc() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_realloc", false]], "rtn_sem_destroy() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_sem_destroy", false]], "rtn_sem_getvalue() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_sem_getvalue", false]], "rtn_sem_init() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_sem_init", false]], "rtn_sem_post() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_sem_post", false]], "rtn_sem_timedwait() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_sem_timedwait", false]], "rtn_sem_trywait() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_sem_trywait", false]], "rtn_sem_wait() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_sem_wait", false]], "rtn_setlocale() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_setlocale", false]], "rtn_sleep() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_sleep", false]], "rtn_sprintf() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_sprintf", false]], "rtn_stack_chk_fail() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_stack_chk_fail", false]], "rtn_strcasecmp() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strcasecmp", false]], "rtn_strchr() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strchr", false]], "rtn_strcmp() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strcmp", false]], "rtn_strcpy() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strcpy", false]], "rtn_strdup() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strdup", false]], "rtn_strerror() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strerror", false]], "rtn_strlen() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strlen", false]], "rtn_strncasecmp() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strncasecmp", false]], "rtn_strncmp() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strncmp", false]], "rtn_strncpy() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strncpy", false]], "rtn_strtok_r() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strtok_r", false]], "rtn_strtoul() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strtoul", false]], "rtn_write() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_write", false]], "rtn_xstat() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_xstat", false]], "sat (tritondse.types.solverstatus attribute)": [[11, "tritondse.types.SolverStatus.SAT", false]], "seed (class in tritondse.seed)": [[9, "tritondse.seed.Seed", false]], "size (tritondse.seed.seed property)": [[9, "tritondse.seed.Seed.size", false]], "sound_mem_access (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.SOUND_MEM_ACCESS", false]], "split() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.split", false]], "splitlines() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.splitlines", false]], "srcaddr (tritondse.types.pathbranch attribute)": [[11, "tritondse.types.PathBranch.srcAddr", false]], "stack_pointer (tritondse.arch.cpustate property)": [[7, "tritondse.arch.CpuState.stack_pointer", false]], "startswith() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.startswith", false]], "status (tritondse.seed.seed property)": [[9, "tritondse.seed.Seed.status", false]], "strategy (tritondse.coverage.coveragesinglerun attribute)": [[2, "tritondse.coverage.CoverageSingleRun.strategy", false]], "strategy (tritondse.coverage.globalcoverage attribute)": [[2, "tritondse.coverage.GlobalCoverage.strategy", false]], "strip() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.strip", false]], "swapcase() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.swapcase", false]], "symbolic_read (tritondse.types.symextype attribute)": [[11, "tritondse.types.SymExType.SYMBOLIC_READ", false]], "symbolic_write (tritondse.types.symextype attribute)": [[11, "tritondse.types.SymExType.SYMBOLIC_WRITE", false]], "symbolicvariable (class in tritondse.types)": [[11, "tritondse.types.SymbolicVariable", false]], "thumb (tritondse.types.archmode attribute)": [[11, "tritondse.types.ArchMode.THUMB", false]], "timeout (tritondse.types.solverstatus attribute)": [[11, "tritondse.types.SolverStatus.TIMEOUT", false]], "timeout_always (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.TIMEOUT_ALWAYS", false]], "timeout_once (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.TIMEOUT_ONCE", false]], "title() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.title", false]], "to_bytes() (tritondse.coverage.branchsolvingstrategy method)": [[2, "tritondse.coverage.BranchSolvingStrategy.to_bytes", false]], "to_file() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.to_file", false]], "total_instruction_executed (tritondse.coverage.coveragesinglerun property)": [[2, "tritondse.coverage.CoverageSingleRun.total_instruction_executed", false]], "total_instruction_executed (tritondse.coverage.globalcoverage property)": [[2, "tritondse.coverage.GlobalCoverage.total_instruction_executed", false]], "translate() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.translate", false]], "tritondse.coverage": [[2, "module-tritondse.coverage", false]], "tritondse.routines": [[13, "module-tritondse.routines", false]], "tritondse.seed": [[9, "module-tritondse.seed", false]], "tritondse.types": [[11, "module-tritondse.types", false]], "uncoverable_items (tritondse.coverage.globalcoverage attribute)": [[2, "tritondse.coverage.GlobalCoverage.uncoverable_items", false]], "unique_covitem_covered (tritondse.coverage.coveragesinglerun property)": [[2, "tritondse.coverage.CoverageSingleRun.unique_covitem_covered", false]], "unique_covitem_covered (tritondse.coverage.globalcoverage property)": [[2, "tritondse.coverage.GlobalCoverage.unique_covitem_covered", false]], "unique_instruction_covered (tritondse.coverage.coveragesinglerun property)": [[2, "tritondse.coverage.CoverageSingleRun.unique_instruction_covered", false]], "unique_instruction_covered (tritondse.coverage.globalcoverage property)": [[2, "tritondse.coverage.GlobalCoverage.unique_instruction_covered", false]], "unknown (tritondse.types.solverstatus attribute)": [[11, "tritondse.types.SolverStatus.UNKNOWN", false]], "unsat (tritondse.types.solverstatus attribute)": [[11, "tritondse.types.SolverStatus.UNSAT", false]], "unsat_once (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.UNSAT_ONCE", false]], "upper() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.upper", false]], "variables (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.variables", false]], "w (tritondse.types.perm attribute)": [[11, "tritondse.types.Perm.W", false]], "windows (tritondse.types.platform attribute)": [[11, "tritondse.types.Platform.WINDOWS", false]], "x (tritondse.types.perm attribute)": [[11, "tritondse.types.Perm.X", false]], "x86 (tritondse.types.architecture attribute)": [[11, "tritondse.types.Architecture.X86", false]], "x86_64 (tritondse.types.architecture attribute)": [[11, "tritondse.types.Architecture.X86_64", false]], "z3 (tritondse.types.smtsolver attribute)": [[11, "tritondse.types.SmtSolver.Z3", false]], "zfill() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.zfill", false]]}, "objects": {"tritondse": [[2, 2, 0, "-", "coverage"], [13, 2, 0, "-", "routines"], [9, 2, 0, "-", "seed"], [11, 2, 0, "-", "types"]], "tritondse.arch": [[7, 0, 1, "", "CpuState"]], "tritondse.arch.CpuState": [[7, 1, 1, "", "base_pointer"], [7, 1, 1, "", "program_counter"], [7, 1, 1, "", "stack_pointer"]], "tritondse.coverage": [[2, 3, 1, "", "BranchSolvingStrategy"], [2, 6, 1, "", "CovItem"], [2, 0, 1, "", "CoverageSingleRun"], [2, 7, 1, "", "CoverageStrategy"], [2, 0, 1, "", "GlobalCoverage"]], "tritondse.coverage.BranchSolvingStrategy": [[2, 4, 1, "", "ALL_NOT_COVERED"], [2, 4, 1, "", "COVER_SYM_DYNJUMP"], [2, 4, 1, "", "COVER_SYM_READ"], [2, 4, 1, "", "COVER_SYM_WRITE"], [2, 4, 1, "", "FIRST_LAST_NOT_COVERED"], [2, 4, 1, "", "MANUAL"], [2, 4, 1, "", "SOUND_MEM_ACCESS"], [2, 4, 1, "", "TIMEOUT_ALWAYS"], [2, 4, 1, "", "TIMEOUT_ONCE"], [2, 4, 1, "", "UNSAT_ONCE"], [2, 5, 1, "", "as_integer_ratio"], [2, 5, 1, "", "bit_count"], [2, 5, 1, "", "bit_length"], [2, 5, 1, "", "conjugate"], [2, 4, 1, "", "denominator"], [2, 5, 1, "", "from_bytes"], [2, 4, 1, "", "imag"], [2, 4, 1, "", "numerator"], [2, 4, 1, "", "real"], [2, 5, 1, "", "to_bytes"]], "tritondse.coverage.CoverageSingleRun": [[2, 5, 1, "", "add_covered_address"], [2, 5, 1, "", "add_covered_branch"], [2, 5, 1, "", "add_covered_dynamic_branch"], [2, 4, 1, "", "covered_instructions"], [2, 4, 1, "", "covered_items"], [2, 5, 1, "", "difference"], [2, 5, 1, "", "is_covered"], [2, 5, 1, "", "post_execution"], [2, 5, 1, "", "pp_item"], [2, 4, 1, "", "strategy"], [2, 1, 1, "", "total_instruction_executed"], [2, 1, 1, "", "unique_covitem_covered"], [2, 1, 1, "", "unique_instruction_covered"]], "tritondse.coverage.CoverageStrategy": [[2, 4, 1, "", "BLOCK"], [2, 4, 1, "", "EDGE"], [2, 4, 1, "", "PATH"], [2, 4, 1, "", "PREFIXED_EDGE"], [2, 5, 1, "", "capitalize"], [2, 5, 1, "", "casefold"], [2, 5, 1, "", "center"], [2, 5, 1, "", "count"], [2, 5, 1, "", "encode"], [2, 5, 1, "", "endswith"], [2, 5, 1, "", "expandtabs"], [2, 5, 1, "", "find"], [2, 5, 1, "", "format"], [2, 5, 1, "", "format_map"], [2, 5, 1, "", "index"], [2, 5, 1, "", "isalnum"], [2, 5, 1, "", "isalpha"], [2, 5, 1, "", "isascii"], [2, 5, 1, "", "isdecimal"], [2, 5, 1, "", "isdigit"], [2, 5, 1, "", "isidentifier"], [2, 5, 1, "", "islower"], [2, 5, 1, "", "isnumeric"], [2, 5, 1, "", "isprintable"], [2, 5, 1, "", "isspace"], [2, 5, 1, "", "istitle"], [2, 5, 1, "", "isupper"], [2, 5, 1, "", "join"], [2, 5, 1, "", "ljust"], [2, 5, 1, "", "lower"], [2, 5, 1, "", "lstrip"], [2, 5, 1, "", "maketrans"], [2, 5, 1, "", "partition"], [2, 5, 1, "", "removeprefix"], [2, 5, 1, "", "removesuffix"], [2, 5, 1, "", "replace"], [2, 5, 1, "", "rfind"], [2, 5, 1, "", "rindex"], [2, 5, 1, "", "rjust"], [2, 5, 1, "", "rpartition"], [2, 5, 1, "", "rsplit"], [2, 5, 1, "", "rstrip"], [2, 5, 1, "", "split"], [2, 5, 1, "", "splitlines"], [2, 5, 1, "", "startswith"], [2, 5, 1, "", "strip"], [2, 5, 1, "", "swapcase"], [2, 5, 1, "", "title"], [2, 5, 1, "", "translate"], [2, 5, 1, "", "upper"], [2, 5, 1, "", "zfill"]], "tritondse.coverage.GlobalCoverage": [[2, 4, 1, "", "COVERAGE_FILE"], [2, 5, 1, "", "add_covered_address"], [2, 5, 1, "", "add_covered_branch"], [2, 5, 1, "", "add_covered_dynamic_branch"], [2, 5, 1, "", "can_cover_symbolic_pointers"], [2, 5, 1, "", "can_improve_coverage"], [2, 5, 1, "", "clone"], [2, 4, 1, "", "covered_instructions"], [2, 4, 1, "", "covered_items"], [2, 4, 1, "", "covered_symbolic_pointers"], [2, 5, 1, "", "difference"], [2, 5, 1, "", "from_file"], [2, 5, 1, "", "improve_coverage"], [2, 5, 1, "", "is_covered"], [2, 5, 1, "", "iter_new_paths"], [2, 5, 1, "", "merge"], [2, 5, 1, "", "new_items_to_cover"], [2, 4, 1, "", "not_covered_items"], [2, 4, 1, "", "pending_coverage"], [2, 5, 1, "", "post_execution"], [2, 5, 1, "", "post_exploration"], [2, 5, 1, "", "pp_item"], [2, 4, 1, "", "strategy"], [2, 5, 1, "", "to_file"], [2, 1, 1, "", "total_instruction_executed"], [2, 4, 1, "", "uncoverable_items"], [2, 1, 1, "", "unique_covitem_covered"], [2, 1, 1, "", "unique_instruction_covered"]], "tritondse.routines": [[13, 8, 1, "", "rtn___fprintf_chk"], [13, 8, 1, "", "rtn__setjmp"], [13, 8, 1, "", "rtn_abort"], [13, 8, 1, "", "rtn_assert_fail"], [13, 8, 1, "", "rtn_atexit"], [13, 8, 1, "", "rtn_atoi"], [13, 8, 1, "", "rtn_calloc"], [13, 8, 1, "", "rtn_clock_gettime"], [13, 8, 1, "", "rtn_ctype_b_loc"], [13, 8, 1, "", "rtn_ctype_toupper_loc"], [13, 8, 1, "", "rtn_errno_location"], [13, 8, 1, "", "rtn_exit"], [13, 8, 1, "", "rtn_fclose"], [13, 8, 1, "", "rtn_fgets"], [13, 8, 1, "", "rtn_fopen"], [13, 8, 1, "", "rtn_fprintf"], [13, 8, 1, "", "rtn_fputc"], [13, 8, 1, "", "rtn_fputs"], [13, 8, 1, "", "rtn_fread"], [13, 8, 1, "", "rtn_free"], [13, 8, 1, "", "rtn_fseek"], [13, 8, 1, "", "rtn_ftell"], [13, 8, 1, "", "rtn_fwrite"], [13, 8, 1, "", "rtn_getchar"], [13, 8, 1, "", "rtn_getenv"], [13, 8, 1, "", "rtn_gettimeofday"], [13, 8, 1, "", "rtn_isspace"], [13, 8, 1, "", "rtn_libc_start_main"], [13, 8, 1, "", "rtn_longjmp"], [13, 8, 1, "", "rtn_malloc"], [13, 8, 1, "", "rtn_memcmp"], [13, 8, 1, "", "rtn_memcpy"], [13, 8, 1, "", "rtn_memmem"], [13, 8, 1, "", "rtn_memmove"], [13, 8, 1, "", "rtn_mempcpy"], [13, 8, 1, "", "rtn_memset"], [13, 8, 1, "", "rtn_open"], [13, 8, 1, "", "rtn_printf"], [13, 8, 1, "", "rtn_pthread_create"], [13, 8, 1, "", "rtn_pthread_exit"], [13, 8, 1, "", "rtn_pthread_join"], [13, 8, 1, "", "rtn_pthread_mutex_destroy"], [13, 8, 1, "", "rtn_pthread_mutex_init"], [13, 8, 1, "", "rtn_pthread_mutex_lock"], [13, 8, 1, "", "rtn_pthread_mutex_unlock"], [13, 8, 1, "", "rtn_puts"], [13, 8, 1, "", "rtn_rand"], [13, 8, 1, "", "rtn_read"], [13, 8, 1, "", "rtn_realloc"], [13, 8, 1, "", "rtn_sem_destroy"], [13, 8, 1, "", "rtn_sem_getvalue"], [13, 8, 1, "", "rtn_sem_init"], [13, 8, 1, "", "rtn_sem_post"], [13, 8, 1, "", "rtn_sem_timedwait"], [13, 8, 1, "", "rtn_sem_trywait"], [13, 8, 1, "", "rtn_sem_wait"], [13, 8, 1, "", "rtn_setlocale"], [13, 8, 1, "", "rtn_sleep"], [13, 8, 1, "", "rtn_sprintf"], [13, 8, 1, "", "rtn_stack_chk_fail"], [13, 8, 1, "", "rtn_strcasecmp"], [13, 8, 1, "", "rtn_strchr"], [13, 8, 1, "", "rtn_strcmp"], [13, 8, 1, "", "rtn_strcpy"], [13, 8, 1, "", "rtn_strdup"], [13, 8, 1, "", "rtn_strerror"], [13, 8, 1, "", "rtn_strlen"], [13, 8, 1, "", "rtn_strncasecmp"], [13, 8, 1, "", "rtn_strncmp"], [13, 8, 1, "", "rtn_strncpy"], [13, 8, 1, "", "rtn_strtok_r"], [13, 8, 1, "", "rtn_strtoul"], [13, 8, 1, "", "rtn_write"], [13, 8, 1, "", "rtn_xstat"]], "tritondse.seed": [[9, 0, 1, "", "CompositeData"], [9, 0, 1, "", "Seed"], [9, 7, 1, "", "SeedFormat"], [9, 7, 1, "", "SeedStatus"]], "tritondse.seed.CompositeData": [[9, 4, 1, "", "__annotations__"], [9, 5, 1, "", "__bytes__"], [9, 4, 1, "", "__dataclass_fields__"], [9, 4, 1, "", "__dataclass_params__"], [9, 5, 1, "", "__delattr__"], [9, 4, 1, "", "__dict__"], [9, 5, 1, "", "__eq__"], [9, 5, 1, "", "__hash__"], [9, 5, 1, "", "__init__"], [9, 4, 1, "", "__match_args__"], [9, 4, 1, "", "__module__"], [9, 5, 1, "", "__repr__"], [9, 5, 1, "", "__setattr__"], [9, 4, 1, "", "__weakref__"], [9, 4, 1, "", "argv"], [9, 4, 1, "", "files"], [9, 5, 1, "", "from_dict"], [9, 4, 1, "", "variables"]], "tritondse.seed.Seed": [[9, 5, 1, "", "__bytes__"], [9, 4, 1, "", "__dict__"], [9, 5, 1, "", "__eq__"], [9, 5, 1, "", "__hash__"], [9, 5, 1, "", "__init__"], [9, 5, 1, "", "__len__"], [9, 4, 1, "", "__module__"], [9, 4, 1, "", "__weakref__"], [9, 5, 1, "", "bytes"], [9, 1, 1, "", "filename"], [9, 1, 1, "", "format"], [9, 5, 1, "", "from_bytes"], [9, 5, 1, "", "from_file"], [9, 5, 1, "", "get_file_input"], [9, 1, 1, "", "hash"], [9, 5, 1, "", "is_bootstrap_seed"], [9, 5, 1, "", "is_composite"], [9, 5, 1, "", "is_file_defined"], [9, 5, 1, "", "is_fresh"], [9, 5, 1, "", "is_raw"], [9, 5, 1, "", "is_status_set"], [9, 1, 1, "", "size"], [9, 1, 1, "", "status"]], "tritondse.seed.SeedFormat": [[9, 4, 1, "", "COMPOSITE"], [9, 4, 1, "", "RAW"], [9, 4, 1, "", "__module__"]], "tritondse.seed.SeedStatus": [[9, 4, 1, "", "CRASH"], [9, 4, 1, "", "FAIL"], [9, 4, 1, "", "HANG"], [9, 4, 1, "", "NEW"], [9, 4, 1, "", "OK_DONE"], [9, 4, 1, "", "__module__"]], "tritondse.types": [[11, 4, 1, "", "Addr"], [11, 3, 1, "", "ArchMode"], [11, 7, 1, "", "Architecture"], [11, 0, 1, "", "AstNode"], [11, 4, 1, "", "BitSize"], [11, 4, 1, "", "ByteSize"], [11, 6, 1, "", "Edge"], [11, 7, 1, "", "Endian"], [11, 0, 1, "", "Expression"], [11, 0, 1, "", "FileDesc"], [11, 4, 1, "", "Input"], [11, 0, 1, "", "Model"], [11, 0, 1, "", "PathBranch"], [11, 0, 1, "", "PathConstraint"], [11, 4, 1, "", "PathHash"], [11, 6, 1, "", "PathLike"], [11, 3, 1, "", "Perm"], [11, 7, 1, "", "Platform"], [11, 0, 1, "", "Register"], [11, 0, 1, "", "Registers"], [11, 7, 1, "", "SmtSolver"], [11, 7, 1, "", "SolverStatus"], [11, 7, 1, "", "SymExType"], [11, 0, 1, "", "SymbolicVariable"], [11, 4, 1, "", "rAddr"]], "tritondse.types.ArchMode": [[11, 4, 1, "", "THUMB"]], "tritondse.types.Architecture": [[11, 4, 1, "", "AARCH64"], [11, 4, 1, "", "ARM32"], [11, 4, 1, "", "X86"], [11, 4, 1, "", "X86_64"]], "tritondse.types.Endian": [[11, 4, 1, "", "BIG"], [11, 4, 1, "", "LITTLE"]], "tritondse.types.FileDesc": [[11, 4, 1, "", "fd"], [11, 5, 1, "", "fgets"], [11, 4, 1, "", "id"], [11, 5, 1, "", "is_input_fd"], [11, 5, 1, "", "is_real_fd"], [11, 4, 1, "", "name"], [11, 1, 1, "", "offset"], [11, 5, 1, "", "read"]], "tritondse.types.PathBranch": [[11, 4, 1, "", "constraint"], [11, 4, 1, "", "dstAddr"], [11, 4, 1, "", "isTaken"], [11, 4, 1, "", "srcAddr"]], "tritondse.types.Perm": [[11, 4, 1, "", "R"], [11, 4, 1, "", "W"], [11, 4, 1, "", "X"]], "tritondse.types.Platform": [[11, 4, 1, "", "ANDROID"], [11, 4, 1, "", "IOS"], [11, 4, 1, "", "LINUX"], [11, 4, 1, "", "MACOS"], [11, 4, 1, "", "WINDOWS"]], "tritondse.types.SmtSolver": [[11, 4, 1, "", "BITWUZLA"], [11, 4, 1, "", "Z3"]], "tritondse.types.SolverStatus": [[11, 4, 1, "", "SAT"], [11, 4, 1, "", "TIMEOUT"], [11, 4, 1, "", "UNKNOWN"], [11, 4, 1, "", "UNSAT"]], "tritondse.types.SymExType": [[11, 4, 1, "", "CONDITIONAL_JMP"], [11, 4, 1, "", "DYNAMIC_JMP"], [11, 4, 1, "", "SYMBOLIC_READ"], [11, 4, 1, "", "SYMBOLIC_WRITE"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "property", "Python property"], "2": ["py", "module", "Python module"], "3": ["py", "flag", "Python flag"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "method", "Python method"], "6": ["py", "data", "Python data"], "7": ["py", "enum", "Python enum"], "8": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:property", "2": "py:module", "3": "py:flag", "4": "py:attribute", "5": "py:method", "6": "py:data", "7": "py:enum", "8": "py:function"}, "terms": {"": [2, 9, 18, 19, 21, 22, 23], "0": [2, 9, 11, 19, 20, 21, 22, 23], "0000": 2, "00000064": 22, "0063e1d416400b0a0401dc471be64a8f": 19, "007f": 2, "0b100101": 2, "0b1101": 2, "0x": [19, 23], "0x0400597": 19, "0x08000000": 17, "0x1000000": 20, "0x12345678": 18, "0x14": 19, "0x18": 19, "0x20": 19, "0x200ab7": 19, "0x200bda": 19, "0x200be2": 19, "0x400000": 23, "0x400430": 19, "0x400440": 19, "0x400460": [19, 23], "0x400462": 19, "0x400465": 19, "0x400466": 19, "0x400469": 19, "0x40046d": 19, "0x40046e": 19, "0x40046f": 19, "0x400476": 19, "0x40047d": 19, "0x400484": 19, "0x400489": 23, "0x400556": 19, "0x400557": 19, "0x40055a": 19, "0x40055e": 19, "0x400565": 19, "0x400567": 19, "0x40056a": 19, "0x40056d": 19, "0x400571": 19, "0x400574": 19, "0x400577": 19, "0x40057a": 19, "0x40057d": 19, "0x400580": 19, "0x400582": 19, "0x400589": 19, "0x40058c": 19, "0x40058e": 19, "0x400591": 19, "0x400594": 19, "0x400597": 19, "0x400599": 19, "0x40059b": 19, "0x4005a0": 19, "0x4005a2": 19, "0x4005a6": 19, "0x4005aa": 19, "0x4005b1": 19, "0x4005b2": 19, "0x4005b3": 19, "0x4005b4": 19, "0x4005b7": 19, "0x4005bb": 19, "0x4005be": 19, "0x4005c2": 19, "0x4005c6": 19, "0x4005cf": 19, "0x4005d3": 19, "0x4005d7": 19, "0x4005da": 19, "0x4005dd": 19, "0x4005e2": 19, "0x4005e5": 19, "0x4005e9": 19, "0x4005f7": 19, "0x4005fc": 19, "0x400601": 19, "0x400606": 19, "0x400607": 19, "0x400610": 19, "0x400680": 19, "0x40069e": 19, "0x55": 19, "0x600e10": 23, "0x7ff6540": 7, "0x7ff6548": 7, "0x8000000": 20, "0x81dc46e": [17, 20], "0x89485ed18949ed31": 23, "0xdeadbeef": 23, "0xfffffffffffffff0": 19, "1": [2, 7, 9, 11, 17, 19, 21, 23], "10": [2, 13, 23], "1024": 20, "116": 23, "119": 23, "12": 7, "120": 23, "121": 23, "123": 23, "124": 23, "125": 23, "126": 23, "127": 23, "128": [2, 22, 23], "129": 23, "13": [2, 7], "130": 23, "131": 23, "132": 23, "133": 23, "134": 23, "135": 23, "136": 23, "137": 23, "139": 23, "1395900": 20, "140": 23, "141": 23, "14128": 20, "142": 23, "151249": 20, "152376": 20, "16": 2, "1879048192": 20, "1991643855": 23, "2": [2, 9, 11, 17, 19, 20, 21, 22, 23], "2036": [20, 23], "21": 19, "2147483648": 20, "2147483649": 20, "23": 23, "2303323441": 23, "25": 18, "251662336": 20, "255": 23, "256": [2, 18], "2cb80846ef5684501c73e1e19f595230": 22, "3": [2, 9, 11, 19, 21], "30": 18, "32": [2, 11, 23], "338734": 20, "3464": 20, "37": 2, "3735928559": 23, "3735928563": 23, "38": 19, "39": [19, 20, 22, 23], "39932": 20, "4": [2, 9, 11, 19, 20, 21, 23], "4096": 20, "41": 19, "415d0d4405119b88530788282aa06d7d": 19, "4194304": 20, "4195763": 23, "42": 19, "43": 19, "44": 19, "45": 19, "46": 19, "47": 19, "48": [18, 19], "4824": 20, "49": [19, 23], "496": 20, "5": [11, 20], "50": 18, "512": 2, "53": 19, "5664": 20, "576": [20, 23], "6": [2, 20], "60721": 23, "61": 19, "61264": 20, "62": 19, "6295056": 20, "6295552": 20, "63": 23, "64": [2, 11, 20, 23], "7": [18, 20], "7340032": 20, "7495680": 20, "8": [2, 7, 18, 19, 23], "80": [20, 22], "81": 22, "8192": 20, "82": 22, "83": 22, "84": 22, "8892416": 20, "9": 18, "9234640": 20, "9248768": 20, "9437184": 20, "9441280": 20, "9592832": 20, "9636320": 20, "9641984": 20, "9892260835563793713": 23, "A": [0, 2, 9, 19, 21, 22, 23], "As": [15, 20, 23], "At": [9, 15, 22], "But": 15, "By": [9, 18, 22, 23], "For": [2, 18, 19, 21, 23], "If": [2, 9, 19, 20, 23], "In": [0, 2, 18, 19, 20, 22, 23], "It": [2, 7, 9, 13, 15, 18, 20, 22, 23], "Its": [9, 17], "No": [7, 23], "Not": 2, "One": [22, 23], "That": [0, 9, 21, 22, 23], "The": [0, 2, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "Their": 22, "Then": [21, 23], "There": [21, 22], "These": [2, 18, 21, 23], "To": [2, 20, 23], "With": 2, "_": 23, "__annotations__": 9, "__assert_fail": 13, "__bytes__": 9, "__ctx": 7, "__ctype_b_loc": 13, "__ctype_toupper_loc": 13, "__dataclass_fields__": 9, "__dataclass_params__": 9, "__delattr__": 9, "__dict__": 9, "__doc__": 9, "__eq__": 9, "__errno_loc": 13, "__fprintf_chk": 13, "__getitem__": 2, "__gmon_start__": [19, 22, 23], "__hash__": 9, "__init__": [9, 20, 21], "__len__": 9, "__libc_start_main": 13, "__match_args__": 9, "__module__": 9, "__repr__": 9, "__setattr__": 9, "__stack_chk_fail": 13, "__weakref__": 9, "__xstat": 13, "_add_callback": 21, "_cb": 21, "_dataclassparam": 9, "_field": 9, "_field_typ": 9, "_missing_typ": 9, "_setjmp": 13, "_to_json": 9, "aaaaaaaaaaaa": 19, "aaaaaaaaaaaaaaa": [22, 23], "aaaaabbbbb": 9, "aarch64": 11, "ab": 2, "abl": [0, 23], "abort": [13, 19], "absolut": 2, "abstract": 7, "ac": 18, "accept": 0, "access": [0, 2, 7, 23], "accord": 2, "accordingli": 9, "account": [2, 23], "act": [2, 7], "action": [7, 19], "actx": 23, "ad": [2, 22, 23], "adapt": 9, "add": [2, 7, 19, 21, 22, 23], "add_covered_address": 2, "add_covered_branch": 2, "add_covered_dynamic_branch": 2, "add_input_se": [19, 22, 23], "addit": 20, "addr": [2, 11, 19, 20, 21, 22], "addres": 2, "address": [0, 2, 11, 17, 20, 21, 23], "adjust": 20, "after": [2, 9, 17, 19, 23], "again": 2, "against": 2, "agnost": 7, "al": 19, "algorithm": 14, "alia": [2, 11, 23], "alias": 18, "all": [0, 2, 7, 13, 14, 15, 19, 20, 21, 22, 23], "all_not_cov": 2, "alloc": [15, 21], "allow": [7, 22, 23], "alpha": 2, "alphabet": 2, "alreadi": [2, 9], "also": [2, 7, 9, 15, 19, 20, 23], "alwai": 2, "among": 19, "an": [0, 2, 7, 9, 11, 13, 15, 17, 18, 19, 20, 21, 22, 23], "analog": 23, "android": 11, "angr": 20, "ani": [0, 2, 7, 9, 11, 19, 22, 23], "anoth": [21, 22], "anyth": [9, 23], "anythin": 2, "api": [13, 22], "append": [0, 19, 21], "appli": [15, 23], "applic": 22, "appropri": [19, 22, 23], "ar": [0, 2, 7, 9, 11, 14, 15, 16, 17, 20, 21, 22, 23], "arbitrari": [17, 20, 23], "arch": [7, 11, 23], "arch_info": 7, "arch_mod": 20, "architectur": [7, 11, 20, 23], "archmod": [11, 20], "area": 17, "arg": [2, 21], "arg0": [21, 22], "argument": [0, 2, 23], "argv": [9, 15, 18, 19, 22, 23], "ari": 18, "arm": [7, 11, 17], "arm32": [11, 20], "arr": 18, "arrai": 2, "as_integer_ratio": 2, "ascii": 2, "assign": [9, 22, 23], "associ": [9, 11, 19, 22], "assum": 2, "astnod": [11, 23], "atoi": [13, 18], "attach": 20, "attribut": [7, 9, 23], "attriubt": 0, "automat": [2, 9, 15, 21, 22, 23], "auxiliari": 0, "av": 18, "avail": [15, 17, 20, 23], "b": [9, 18, 19, 22], "b204f9c8720b4ee299a215ef4c9f168f": 22, "base": [2, 7, 9, 13, 15, 17, 19, 20, 22, 23], "base_address": 20, "base_point": 7, "base_pointer_regist": 23, "basic": [2, 14, 15, 20], "basicconfig": 23, "been": [2, 9, 15, 20, 22, 23], "befor": [0, 2, 19, 23], "begin": 2, "behav": 18, "behavior": 13, "being": [2, 22, 23], "between": 2, "big": [2, 11], "bin": [2, 20], "bin_path": 20, "binari": [2, 11, 16, 17, 20, 23], "bit": [2, 11], "bit_count": 2, "bit_length": 2, "bitsiz": 11, "bitvec": 23, "bitwuzla": 11, "black": 2, "block": [2, 15], "bool": [2, 9, 11, 23], "bootstrap": 9, "both": [2, 9, 17, 19, 23], "boundari": 2, "box": 2, "brace": 2, "branch": [2, 18, 22, 23], "branch_solving_strategi": 23, "branch_strategi": 2, "branchcheckstrategi": 23, "branchsolvingstrategi": 2, "break": [2, 23], "buf": 18, "buffer": [2, 9, 17, 18, 22], "bug": [17, 18], "bugged_json_pars": 20, "built": 2, "bunch": 16, "bv": 23, "bv32": 23, "bv4": 23, "byte": [0, 2, 9, 11, 19, 21, 22, 23], "bytearrai": 2, "byteord": 2, "bytes": 11, "c": 15, "c8f3df9e460142aed1158aa354d7179d": 22, "cab6e4b729327d1e088c9d459e0340eb": 22, "call": [2, 17, 19, 21, 22, 23], "callabl": [19, 21], "callback": [2, 17, 19, 20, 21, 22], "callback_manag": [19, 21, 22], "callbackmanag": 19, "calloc": 13, "can": [0, 2, 9, 11, 14, 15, 17, 18, 19, 20, 21, 22, 23], "can_cover_symbolic_point": 2, "can_improve_coverag": 2, "cannot": [9, 21, 22], "capabl": 15, "capit": 2, "care": [9, 22, 23], "carri": 17, "case": [2, 17, 18, 19], "casefold": 2, "caseless": 2, "catch": 0, "caught": 0, "cautiou": 23, "cb": 0, "cbtype": 21, "cdqe": 19, "center": 2, "cfg": 2, "challeng": [16, 19, 22, 23], "chang": [0, 2, 22, 23], "char": [2, 13, 17, 18, 22, 23], "charact": [2, 19], "check": [2, 9, 18, 21, 23], "checker": 21, "chr": 19, "cl": 19, "class": [2, 7, 9, 11, 14, 20, 21, 22], "cle": [15, 23], "clean": 2, "cleload": [20, 23], "clock_gettim": 13, "clone": 2, "cmp": 19, "code": [0, 2, 9, 17, 23], "codec": 2, "combin": 11, "command": 23, "common": 11, "compar": [2, 9, 19], "comparison": [2, 19], "compat": 11, "complement": 2, "complet": 23, "complex": [2, 9, 21, 22], "composit": [9, 18, 19, 22, 23], "composite_data": 22, "composite_se": 22, "composite_seed_1": 22, "composite_seed_2": 22, "compositedata": [9, 19, 22, 23], "concaten": 2, "concret": [2, 13, 22], "cond": 11, "condit": [11, 22], "conditional_jmp": 11, "config": [19, 21, 22, 23], "conjug": 2, "conjunct": 2, "consid": [2, 9], "consist": 23, "const": [13, 18], "constant": 23, "constraint": [2, 11, 19, 21, 23], "constructor": [2, 14], "contain": [0, 2, 9, 17, 18, 19, 22, 23], "content": [9, 18, 19, 22, 23], "context": [0, 19, 23], "contigu": 22, "control": 21, "convert": [2, 9, 13], "copi": 2, "correctli": 9, "correspond": 7, "could": 19, "count": 2, "counter": [2, 7, 23], "cov": 22, "cover": [2, 9, 23], "cover_sym_dynjump": 2, "cover_sym_read": 2, "cover_sym_writ": 2, "coverag": [9, 15, 17, 18, 22, 23], "coverage_fil": 2, "coverage_strategi": [22, 23], "coveragesingerun": 2, "coveragesinglerun": [2, 23], "coveragestrategi": [2, 17, 21, 22, 23], "covered_instruct": 2, "covered_item": 2, "covered_symbolic_point": 2, "covitem": 2, "covpro": 18, "cpu": [7, 19, 22, 23], "cpustat": 20, "crackm": [21, 22, 23], "crackme_xor": [19, 20, 21, 22, 23], "crash": [9, 18, 21, 22, 23], "creat": [2, 9, 20, 21, 22, 23], "creation": [0, 19], "ctx": [7, 17], "cur_ptr": 21, "current": [2, 13, 18, 22], "custom": 15, "customiz": 15, "d": 18, "data": [2, 7, 9, 18, 22, 23], "dataclass": 9, "dc1d802d1c2796a1a21d96827ce1cae7": 22, "de": 19, "deal": 22, "debug": 23, "decim": 2, "decod": 19, "def": [2, 19, 20, 21, 22], "default": [2, 9, 18, 22, 23], "default_factori": 9, "defin": [2, 9, 14, 18, 19, 20, 22, 23], "definit": 23, "delattr": 9, "delet": 2, "delimit": 2, "denomin": 2, "depend": [2, 14, 15, 23], "describ": 9, "descript": 13, "descriptor": 11, "design": 15, "detail": 23, "detect": 17, "determin": [2, 9], "develop": [15, 21], "devic": 17, "dict": [2, 9, 20, 22], "dictionari": [2, 22], "dictionnari": [9, 11, 22], "did": [11, 19], "differ": [2, 14, 17, 21, 22, 23], "digit": 2, "directli": [9, 19, 22, 23], "directori": [22, 23], "disabl": 2, "disabledd": 11, "disassembli": 19, "discard": 2, "disclaim": 23, "discrimin": 9, "distinct": 23, "do": [0, 2, 22], "doe": [0, 2, 7, 9, 13, 18, 19], "don": 17, "done": [2, 21, 22, 23], "dse": [19, 21, 22, 23], "dse_using_composite_se": 22, "dse_using_raw_se": 22, "dst": 2, "dstaddr": 11, "dummi": [22, 23], "dure": [2, 9, 18, 22, 23], "dword": 19, "dyn": 11, "dynam": [2, 7, 11, 23], "dynamic_jmp": 11, "e": [0, 11, 19], "e2f673d0fd7980a2bdad7910f0f6da7a": 22, "eaaaaaaaaaaa": 19, "eaaaaaaaaaaaaaa": 22, "each": [2, 19, 23], "eas": [15, 23], "easili": 21, "eax": 19, "ebp": 19, "ecx": 19, "edg": [2, 11, 15], "edi": 19, "effect": 23, "either": [2, 11, 23], "elaaaaaaaaaaaaa": 22, "elementari": 15, "elf": [15, 23], "eliaaaaaaaaaaaa": 22, "elitaaaaaaaaaaa": 22, "eliteaaaaaaaaaa": 22, "els": [18, 19, 23], "emploi": 2, "empti": [2, 9], "emul": [15, 17, 18, 20, 23], "emulatoin": 18, "enabl": [0, 2, 9, 11, 15, 17, 19, 20, 21, 23], "encod": [2, 11, 19], "end": [0, 2, 9, 17, 19, 22], "endia": 11, "endian": [11, 23], "endswith": 2, "engin": 9, "enough": 21, "enqueu": 21, "enqueue_se": [21, 22], "enter": 0, "entri": [18, 20], "entry_point": [20, 23], "entrypoint": [15, 17, 23], "enum": [0, 2, 9, 11, 23], "enumer": [0, 2, 21], "eq": 9, "equal": [2, 9], "equival": 23, "error": 2, "especi": 0, "essenc": 20, "etc": [0, 19, 21, 23], "even": [2, 15], "event": [0, 15], "everi": [0, 19], "evolv": 0, "exact": 17, "exactli": 2, "exampl": [2, 20, 21, 22], "example_hook": 22, "except": [0, 9, 18], "excerpt": 22, "exec": 19, "execut": [0, 2, 9, 11, 13, 14, 15, 18, 19, 20, 21, 22], "execution_count": 23, "execution_timeout": 23, "executor": [9, 18, 19, 20, 23], "exist": [9, 22, 23], "exit": [13, 17, 18], "exitcod": [19, 22, 23], "expand": 2, "expandtab": 2, "expect": [0, 20], "experiment": 23, "explain": 22, "explicit": 23, "explor": [2, 15, 17, 18, 21, 22], "exploration_limit": 23, "exploration_timeout": 23, "explorationstatu": [19, 22, 23], "expos": [21, 23], "express": [2, 11, 23], "extern": 20, "extract": 17, "f": [2, 19, 20, 22, 23], "facil": 15, "factori": 9, "fail": [9, 11, 23], "failur": 2, "fals": [2, 9, 19, 21, 22, 23], "fashion": 23, "faulti": 22, "fclose": [13, 18], "fd": 11, "featur": [15, 23], "few": [21, 23], "fget": [11, 13, 18], "field": [0, 2, 9, 22, 23], "file": [2, 9, 11, 17, 18, 20, 21, 22, 23], "filedesc": 11, "filenam": [9, 22], "filepath": 21, "fill": [2, 22], "fillchar": 2, "find": [2, 17, 23], "find_function_addr": [20, 22, 23], "firmwar": 17, "first": [2, 17, 21, 23], "first_last_not_cov": 2, "fit": 21, "flag": [2, 11, 18, 19], "float": 23, "folder": 22, "follow": [2, 9, 11, 15, 16, 17, 19, 20, 21, 22, 23], "fopen": [13, 18, 21], "fopen_check": 21, "forc": 19, "format": [2, 9, 20, 21, 22], "format_map": 2, "formatstringsanit": 21, "formula": [11, 19, 21], "found": [2, 9, 18], "fp": 18, "fprintf": 13, "fput": 13, "fputc": 13, "framework": [15, 22], "fread": [13, 18], "free": 13, "freopen": 21, "fresh": [9, 22], "from": [0, 2, 7, 9, 15, 17, 19, 20, 21, 22, 23], "from_byt": [2, 9], "from_dict": 9, "from_fil": [2, 9], "from_load": 20, "front": 2, "frozen": 9, "fseek": 13, "ftell": 13, "fullfil": 11, "fulli": 11, "fun": 23, "function": [0, 2, 9, 13, 17, 18, 20, 21, 22], "further": 15, "furthermor": [15, 18], "fwrite": 13, "g": [0, 11], "gener": [2, 20, 23], "get": [0, 19, 20], "get_argument_valu": [19, 21, 22], "get_expression_variable_values_model": 19, "get_file_input": 9, "get_map": 20, "getaddress": 19, "getast": [19, 21, 22, 23], "getchar": 13, "getconcreteregistervalu": 7, "getdisassembli": 19, "getenv": 13, "getthreadid": 19, "gettimeofdai": 13, "give": 9, "given": [2, 9, 14, 19, 20, 21, 22, 23], "global": 2, "globalcoverag": 2, "go": [21, 22, 23], "goal": [2, 15, 17, 18], "gt": [19, 20, 22, 23], "h": [18, 23], "ha": [2, 9, 15, 20, 22, 23], "handl": [2, 15], "hang": [9, 22], "hardli": 18, "hash": [9, 11, 19, 22], "have": [2, 9, 15, 19, 20, 21, 22, 23], "heap": 15, "hello": 23, "here": [18, 19, 21, 22], "hex": 23, "higher": 15, "highest": 2, "hijack": 21, "himself": 22, "hint": 18, "hold": [2, 7, 9], "hood": 2, "hook": [15, 17, 21, 22], "hook_cmp": [19, 22], "hook_cmp2": 19, "hook_put": 19, "hopefulli": 23, "host": [2, 20], "how": [9, 17, 18, 20, 23], "howev": 22, "i": [0, 2, 7, 9, 11, 13, 15, 17, 18, 20, 21, 22], "id": 11, "identifi": [2, 11, 23], "idl": [19, 22, 23], "ignor": 2, "imag": 2, "imaginari": 2, "implement": [2, 9, 17, 20], "import": [19, 20, 21, 22, 23], "imported_functions_reloc": 20, "imported_variable_symbols_reloc": 20, "improve_coverag": 2, "includ": [2, 18, 23], "incompat": 2, "inde": 15, "index": 2, "indic": [2, 23], "indiffer": 0, "infam": 20, "infer": 18, "info": 23, "inform": [0, 7], "inherit": 20, "init": 9, "initi": [13, 20], "inject": [9, 15, 17, 18], "inject_symbolic_variable_memori": 22, "inject_symbolic_variable_regist": 22, "input": [0, 2, 9, 11, 13, 14, 15, 17, 19, 21, 22, 23], "insert": 2, "inst": 19, "instanc": [2, 9, 13, 19, 22], "instanci": 7, "instead": 2, "instruct": [0, 2, 15, 17, 23], "instrument": 15, "int": [2, 7, 9, 11, 13, 17, 18, 19, 20, 22, 23], "integ": [2, 11, 13, 23], "intend": [9, 21], "intention": 2, "interact": 0, "interest": 18, "interfac": [14, 19, 20, 21, 23], "intern": 11, "interpret": 2, "interrupt": 23, "intflag": 2, "intrins": 18, "intro": 20, "introduc": [19, 21, 23], "inttyp": 18, "invalid": 0, "involv": 19, "io": 11, "iobas": 11, "iot": 17, "is_bootstrap_se": 9, "is_composit": 9, "is_cov": 2, "is_file_defin": 9, "is_fresh": 9, "is_input_fd": 11, "is_map": 23, "is_memory_symbol": 21, "is_raw": 9, "is_real_fd": 11, "is_status_set": 9, "isalnum": 2, "isalpha": 2, "isascii": 2, "isdecim": 2, "isdigit": 2, "isidentifi": 2, "iskeyword": 2, "islow": 2, "isnumer": 2, "isprint": 2, "isspac": [2, 13], "issu": 18, "istaken": 11, "istitl": 2, "isupp": 2, "item": [2, 19], "iter": [2, 19, 22, 23], "iter_corpu": 22, "iter_new_path": 2, "iter_worklist": 22, "its": [0, 2, 9, 13, 15, 18, 19, 20, 21, 23], "itself": [2, 9, 11, 20], "j": 18, "jcc": 11, "je": 19, "jle": 19, "jmp": [11, 19], "jne": 19, "join": 2, "json": [2, 9], "json_ctx": 17, "json_data": 9, "json_pars": 17, "jump": [2, 11], "just": [0, 7, 9, 17, 18, 21, 22, 23], "justifi": 2, "keep": [2, 18, 23], "keepend": 2, "kei": [2, 11, 22], "keyerror": 9, "keyword": 2, "kind": 18, "know": [2, 17, 18], "known": [2, 9], "kw_onli": 9, "kwarg": 2, "l": 19, "lack": 23, "last": 2, "later": 22, "ld": 20, "ldr": 20, "lead": [2, 15], "least": 2, "leav": 19, "left": 2, "len": [2, 17, 20, 21, 22, 23], "length": 2, "let": [19, 21, 22, 23], "level": [15, 20, 23], "libc": [15, 20, 21, 23], "librari": [15, 19, 20, 23], "lief": [15, 20, 23], "lighthous": 17, "like": 22, "limit": [2, 23], "line": [2, 23], "linux": [11, 15, 23], "list": [2, 9, 20, 21, 22, 23], "littl": [2, 11, 23], "ljust": 2, "load": [15, 17, 19, 23], "loadableseg": 20, "loader": [15, 17, 23], "local": 0, "locat": [9, 18, 21, 22], "log": 23, "logic": 11, "long": 19, "longjmp": 13, "lookup": 2, "lookuperror": 2, "loop": 19, "lot": 18, "low": [15, 20], "lower": 2, "lowercas": 2, "lowest": 2, "lstrip": 2, "lt": [19, 20, 22, 23], "mac": 11, "macho": 20, "maco": 11, "made": [9, 19], "mai": 2, "main": [18, 19, 20, 23], "mainli": 2, "make": [2, 17, 22], "maketran": 2, "malloc": 13, "man": 13, "manag": [0, 19, 21], "mani": 23, "manipul": [2, 22], "manner": [2, 23], "manual": [2, 7, 15, 18, 20, 22, 23], "map": [0, 2, 20, 23], "mappingproxi": 9, "mark": [13, 21], "match": [2, 19], "max_arg_len": 18, "max_siz": 11, "maximum": 2, "maxsplit": 2, "mcu": 17, "md5": [2, 9], "mean": [2, 9, 23], "meant": [0, 7, 9, 11, 22], "mechan": 15, "member": [2, 9, 11], "memcmp": 13, "memcpi": 13, "memmem": 13, "memmov": 13, "memori": [0, 2, 11, 15, 17, 19, 20, 21, 22], "memory_seg": [20, 23], "mempcpi": 13, "memset": 13, "merg": 2, "meta": 18, "metadata": [9, 23], "method": [2, 9, 20, 21, 22, 23], "metric": 2, "might": [0, 14, 23], "millisecond": 23, "mix": 22, "mk_new_seed_from_model": [21, 22], "mnemon": 0, "mode": 11, "model": [11, 19, 21, 22, 23], "modifi": [0, 7, 19, 23], "modul": 2, "moment": [2, 15], "monolith": 20, "monolithicload": 20, "more": [2, 9, 15, 20, 21, 22, 23], "most": [0, 2, 23], "mov": 19, "move": 22, "movsx": 19, "movsxd": 19, "movzx": 19, "multipl": [0, 17, 23], "must": [2, 7, 9, 22], "mutat": 18, "n": [2, 9, 18], "name": [0, 2, 9, 11, 19, 20, 23], "nativ": 2, "natur": 2, "ncorpu": 22, "necessari": [0, 2, 22], "need": [14, 17, 18, 23], "neg": [2, 13], "negat": [2, 18, 22], "nest": 13, "never": [2, 9, 22], "new": [0, 2, 9, 19, 21, 22, 23], "new_items_to_cov": 2, "new_se": [21, 22], "new_sym": 23, "next": [14, 23], "non": 2, "none": [2, 9, 13, 19, 20, 21], "nor": 13, "not_covered_item": 2, "not_taken_addr": 2, "notat": 2, "note": [2, 22, 23], "notimplementederror": 20, "now": [15, 21, 23], "nptr": 13, "null": 18, "nullderefsanit": 21, "nullptr": 18, "number": [2, 23], "numer": 2, "o": 11, "obj": 2, "object": [0, 2, 9, 11, 19, 20, 21, 23], "obtain": [15, 18], "occur": 2, "occurr": 2, "offset": 11, "ok": 13, "ok_don": [9, 19, 22], "old": 2, "onc": 0, "one": [2, 9, 15, 17, 19, 20, 21, 22, 23], "ones": [2, 15, 17, 22], "onli": [0, 2, 11, 17, 19, 20, 22, 23], "open": [13, 21], "opensanit": 21, "oper": [0, 2, 7], "opportunist": 23, "option": [2, 9, 20, 21], "ord": 21, "order": [2, 9, 19], "ordin": 2, "origin": 2, "other": [0, 2, 7, 9, 15, 19, 20, 21, 23], "otherwis": [2, 9], "our": [2, 19, 21, 23], "out": [17, 18], "overal": [2, 23], "overflow": 18, "overflowerror": 2, "overlap": 2, "overrid": 22, "overriden": 9, "own": [20, 21, 23], "p": [19, 20, 22, 23], "pad": 2, "page": [11, 13], "pair": 2, "paramet": [2, 9, 13, 17, 22, 23], "pars": [9, 17], "parse_buff": 22, "parser_program": 22, "part": [2, 17], "partit": 2, "passwd": 21, "passwd_fil": 21, "pasti": 23, "patch": 19, "patchconstraint": 2, "path": [2, 9, 11, 15, 20, 22, 23], "path_constraint": 2, "path_coverag": 22, "pathbranch": [2, 11], "pathbranchobject": 11, "pathconstraint": [2, 11], "pathhash": [2, 11], "pathlik": [9, 11], "pc": [7, 20], "pe": 20, "peform": 23, "pend": 2, "pending_coverag": 2, "per": 0, "perform": [0, 2, 7, 15, 18, 19, 20, 21, 23], "perm": [11, 20], "permiss": [0, 11], "perspect": 2, "pick": [21, 22], "pip": 15, "pip3": 15, "pipe": 23, "pipe_stderr": 23, "pipe_stdout": [19, 22, 23], "place": [18, 21, 22], "plai": 22, "plain": 9, "platform": [11, 15, 20], "plt": 23, "point": [2, 13, 17, 20, 23], "pointer": [2, 7, 15, 18, 22, 23], "pool": [0, 19], "pop": 19, "popul": 2, "portabl": 23, "portion": [9, 13], "posit": 2, "possibl": [2, 13, 22, 23], "post": [0, 2, 19], "post_exec_hook": [19, 22], "post_execut": 2, "post_explor": 2, "potenti": [17, 18], "pp_item": 2, "pq": 2, "pre": 19, "pre_exec_hook": 19, "pre_rtn": 21, "precis": 9, "predic": [2, 23], "prefix": [2, 13], "prefixed_edg": 2, "present": [2, 18], "pretti": 2, "prevent": 19, "previou": 23, "previous": 22, "primarili": 15, "primarli": 20, "primit": [15, 23], "principl": 18, "print": [2, 19, 22, 23], "printabl": 2, "printf": [13, 18], "probe": 15, "probeintefac": 0, "probeinterfac": 21, "process": [0, 2, 9, 13, 22, 23], "processst": [13, 19, 20, 21, 22, 23], "produc": [2, 22, 23], "program": [7, 9, 11, 15, 18, 19, 20, 21, 22], "program_argv": 23, "program_count": [2, 7, 23], "program_counter_regist": 23, "project": 20, "properti": [2, 7, 9, 11, 18, 20, 21], "protocol": 2, "prototyp": 17, "provid": [0, 14, 15, 18, 20, 21, 22, 23], "proxi": 7, "pstate": [13, 19, 21, 22, 23], "pthread_creat": 13, "pthread_exit": 13, "pthread_join": 13, "pthread_mutex_destroi": 13, "pthread_mutex_init": 13, "pthread_mutex_lock": 13, "pthread_mutex_unlock": 13, "ptr": [19, 21], "ptr_bit_siz": 23, "ptrsize": 23, "punctuat": 2, "pure": [15, 23], "purpos": [19, 21, 22], "push": [19, 23], "push_constraint": 23, "put": [13, 19, 21, 22], "pwd_byte": 21, "py": [2, 18, 22], "pypi": 15, "python": [2, 7, 11, 15], "qbdi": 15, "queri": 23, "question": 23, "qword": 19, "r": [2, 11, 18, 20], "r8": 19, "r9": 19, "raddr": 11, "rais": [2, 9, 18, 20], "rand": 13, "rang": 2, "rather": 23, "ratio": 2, "ration": 2, "raw": [9, 22, 23], "raw_f": 20, "raw_se": 9, "rax": [7, 19, 23], "rbp": [19, 23], "rcx": 19, "rdi": 19, "rdtsc": 23, "rdx": 19, "reach": [0, 19], "read": [0, 2, 9, 11, 13, 19, 21, 22], "read_byt": 20, "read_char": 23, "read_dword": 23, "read_int": 23, "read_memory_int": 21, "read_ptr": 23, "read_qword": 23, "read_regist": 23, "read_str": 19, "read_symbolic_memory_byt": [21, 23], "read_symbolic_memory_int": 23, "read_symbolic_regist": [19, 22, 23], "read_uchar": 23, "read_uint": 23, "read_word": 23, "real": 2, "realli": 19, "realloc": 13, "receiv": 9, "recogniz": [9, 17], "recomput": 0, "ref": 23, "refer": 9, "refin": 15, "regardless": 19, "regist": [0, 2, 7, 11, 19, 20, 21, 22], "register_error": 2, "register_post_addr_callback": 19, "register_post_execution_callback": [19, 22], "register_post_imported_routine_callback": 19, "register_post_instruction_callback": 19, "register_pre_addr_callback": 22, "register_pre_execution_callback": 19, "register_pre_instruction_callback": 19, "register_prob": 21, "registr": 21, "regular": 2, "rel": 11, "relat": [0, 2], "relev": 2, "reloc": 23, "remain": 2, "remov": [2, 19], "removeprefix": 2, "removesuffix": 2, "replac": 2, "replai": 15, "repr": [2, 9, 22], "repres": [2, 11, 13, 23], "represent": [2, 9, 13], "request": 2, "requir": [18, 20, 23], "reserv": 2, "reset": 19, "resolv": [18, 20], "respect": 20, "respons": 22, "rest": 2, "restart": 23, "result": [2, 17], "ret": 19, "retriev": [9, 19, 22, 23], "return": [0, 2, 7, 9, 11, 13, 18, 20, 21, 23], "return_regist": 23, "reus": [19, 22], "revert": 22, "rfind": 2, "right": [2, 9, 22], "rindex": 2, "rip": [7, 19, 23], "rjust": 2, "root": [19, 22, 23], "routin": [18, 19, 23], "rpartit": 2, "rsi": 19, "rsp": [7, 19, 23], "rsplit": 2, "rstrip": 2, "rtn___fprintf_chk": 13, "rtn__setjmp": 13, "rtn_abort": 13, "rtn_assert_fail": 13, "rtn_atexit": 13, "rtn_atoi": 13, "rtn_calloc": 13, "rtn_clock_gettim": 13, "rtn_ctype_b_loc": 13, "rtn_ctype_toupper_loc": 13, "rtn_errno_loc": 13, "rtn_exit": 13, "rtn_fclose": 13, "rtn_fget": 13, "rtn_fopen": 13, "rtn_fprintf": 13, "rtn_fput": 13, "rtn_fputc": 13, "rtn_fread": 13, "rtn_free": 13, "rtn_fseek": 13, "rtn_ftell": 13, "rtn_fwrite": 13, "rtn_getchar": 13, "rtn_getenv": 13, "rtn_gettimeofdai": 13, "rtn_isspac": 13, "rtn_libc_start_main": 13, "rtn_longjmp": 13, "rtn_malloc": 13, "rtn_memcmp": 13, "rtn_memcpi": 13, "rtn_memmem": 13, "rtn_memmov": 13, "rtn_mempcpi": 13, "rtn_memset": 13, "rtn_name": 21, "rtn_open": 13, "rtn_printf": 13, "rtn_pthread_creat": 13, "rtn_pthread_exit": 13, "rtn_pthread_join": 13, "rtn_pthread_mutex_destroi": 13, "rtn_pthread_mutex_init": 13, "rtn_pthread_mutex_lock": 13, "rtn_pthread_mutex_unlock": 13, "rtn_put": 13, "rtn_rand": 13, "rtn_read": 13, "rtn_realloc": 13, "rtn_sem_destroi": 13, "rtn_sem_getvalu": 13, "rtn_sem_init": 13, "rtn_sem_post": 13, "rtn_sem_timedwait": 13, "rtn_sem_trywait": 13, "rtn_sem_wait": 13, "rtn_setlocal": 13, "rtn_sleep": 13, "rtn_sprintf": 13, "rtn_stack_chk_fail": 13, "rtn_strcasecmp": 13, "rtn_strchr": 13, "rtn_strcmp": 13, "rtn_strcpy": 13, "rtn_strdup": 13, "rtn_strerror": 13, "rtn_strlen": 13, "rtn_strncasecmp": 13, "rtn_strncmp": 13, "rtn_strncpy": 13, "rtn_strtok_r": 13, "rtn_strtoul": 13, "rtn_write": 13, "rtn_xstat": 13, "run": [9, 17, 19, 23], "runtim": [15, 23], "rw": 11, "s1": 18, "s2": 18, "sai": 22, "same": [2, 13, 18, 19, 20, 22, 23], "sanit": [15, 17, 18], "sat": [11, 19, 21, 22], "satisfi": [11, 14, 21, 23], "save": 2, "schedul": 15, "scheme": 2, "script": 22, "se": [13, 19, 21, 22], "search": 2, "sec": 23, "second": 2, "section": [16, 17], "see": [17, 22, 23], "seed": [0, 13, 15, 17, 18, 19, 21, 23], "seed_format": [19, 22, 23], "seedformat": [9, 19, 22, 23], "seedmanag": [2, 14], "seeds_manag": 14, "seedstatu": [9, 21], "seen": 23, "seg": [20, 23], "seg2": 20, "seg3": 20, "segment": [15, 20, 23], "self": [2, 9, 20, 21], "sem_destroi": 13, "sem_getvalu": 13, "sem_init": 13, "sem_post": 13, "sem_timedwait": 13, "sem_trywait": 13, "sem_wait": 13, "sep": 2, "separ": 2, "serial": 9, "set": [2, 9, 11, 15, 17, 19, 21, 23], "set_thumb": 20, "setattr": 9, "setlocal": 13, "shall": [0, 19, 23], "share": [19, 20, 23], "should": [2, 14, 22, 23], "show": [20, 22], "side": 23, "sign": [2, 23], "signatur": 19, "signific": 2, "similar": 23, "similarli": [18, 19], "simpl": [0, 15, 18, 21, 23], "singl": [2, 22], "size": [2, 9, 11, 18, 20, 23], "sizeof": 18, "skip": 23, "skip_sleep_routin": 23, "sleep": [13, 23], "slice": [2, 23], "small": 20, "smt": [2, 11, 19, 21, 23], "smt_queries_limit": 23, "smt_timeout": 23, "smtsolver": 11, "snippet": [19, 22], "so": [2, 19, 20, 21, 23], "sole": [15, 22], "solv": [2, 11, 16, 21, 22, 23], "solver": 11, "solverstatu": [2, 11, 19, 21, 22], "some": [0, 2, 9, 15, 17, 18, 19, 21, 23], "sound": 23, "sound_mem_access": 2, "sourc": [2, 7, 9, 11, 13], "sp": 20, "space": [2, 13], "specif": [0, 2, 9, 11, 20, 23], "specifi": [2, 22, 23], "split": 2, "splitlin": 2, "sprintf": 13, "src": 2, "srcaddr": 11, "sscanf": 18, "st": 21, "stack": [7, 18, 20, 23], "stack_addr": 20, "stack_point": 7, "stack_pointer_regist": 23, "stack_siz": 20, "standard": [9, 23], "start": [2, 20, 22], "startswith": 2, "state": [0, 2, 13, 18, 19, 22], "static": [2, 9], "staticmethod": 9, "statist": 19, "statu": [9, 19, 21], "stderr": 23, "stdin": [9, 15, 18, 22, 23], "stdint": 18, "stdio": 18, "stdlib": 18, "stdout": 23, "step": 23, "stm32f412": 17, "stop": [2, 13], "store": [2, 7, 9, 23], "str": [2, 9, 11, 19, 20, 21, 22, 23], "straightforward": 17, "strategi": [2, 15, 17, 22, 23], "strcasecmp": 13, "strchr": 13, "strcmp": 13, "strcpy": 13, "strdup": 13, "stream": 11, "strerror": 13, "strict": 2, "string": [2, 9, 13, 19, 21, 23], "string_ptr": 21, "strip": 2, "strlen": [13, 18], "strncasecmp": 13, "strncmp": 13, "strncpy": [13, 18], "strtok_r": 13, "strtoul": 13, "structur": 17, "stub": [15, 17], "stuff": 23, "style": 23, "sub": [2, 19], "subclass": 0, "subject": 23, "subsequ": 19, "subset": 23, "substitut": 2, "substr": 2, "successfulli": 23, "suffix": 2, "suitabl": 2, "super": 21, "support": [2, 15, 18, 20, 22, 23], "suppos": 23, "sure": [17, 22], "swapcas": 2, "switch": [0, 19, 23], "sy": 2, "sym": 11, "sym_al": 19, "sym_cl": 19, "sym_rax": 23, "sym_zf": 22, "symbol": [2, 9, 11, 13, 15, 19, 20, 21, 22], "symbolic_read": 11, "symbolic_writ": 11, "symbolicexecutor": [0, 2, 9, 13, 19, 21, 22, 23], "symbolicexplor": [0, 17, 19, 21, 22, 23], "symbolicexpress": [11, 23], "symbolicvari": 11, "symextyp": [2, 11], "symobol": 11, "symvar": 18, "symvar2": 18, "syscal": 23, "sysent": 0, "system": 2, "t": [2, 17, 19], "tab": 2, "tabl": 2, "tabsiz": 2, "take": [2, 9, 18, 22, 23], "taken": [2, 23], "taken_addr": 2, "target": [2, 22], "term": 2, "termin": 9, "test": [2, 15, 18], "text": 2, "than": [2, 15, 20, 23], "thei": [2, 11, 14, 19, 20, 21, 23], "theirs": [19, 23], "them": [0, 2, 9, 18, 19, 20, 22], "theoret": [20, 23], "thi": [0, 2, 7, 15, 17, 18, 19, 20, 21, 22, 23], "thin": [7, 23], "thing": 2, "third": [2, 17], "though": [2, 15], "thread": [0, 19, 23], "thread_schedul": 23, "three": 2, "through": [0, 7, 15], "thu": [7, 9, 11, 13, 23], "thumb": [11, 17], "tid": 19, "time": [17, 23], "time_inc_coeffici": 23, "timeout": [2, 11, 23], "timeout_alwai": 2, "timeout_onc": 2, "timestamp": 23, "titl": 2, "titlecas": 2, "tmp": [18, 23], "to_byt": 2, "to_fil": 2, "too": 2, "total": 2, "total_instruction_execut": [2, 23], "toward": 23, "trace": [2, 19], "trace_inst": 19, "track": 2, "trail": 2, "translat": 2, "transmit": [0, 19], "transpar": 23, "treat": 22, "trigger": [0, 18], "triton": [11, 19, 23], "triton_workspac": 23, "tritoncontext": 7, "tritonds": [0, 2, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23], "true": [2, 9, 20, 21, 23], "truncat": 2, "try": [2, 17, 18, 21, 23], "tune": 23, "tupe": 2, "tupl": [2, 11, 20, 21], "tutori": [17, 21, 22, 23], "two": [2, 17, 20, 22, 23], "txt": 22, "typ": 21, "type": [2, 7, 9, 15, 19, 21, 22, 23], "typevar": 11, "u": 2, "uaf": 21, "uafsanit": 21, "uint32_t": 18, "uncas": 2, "uncoverable_item": 2, "under": [2, 15], "underli": 23, "unicod": 2, "unicodeencodeerror": 2, "uniqu": [2, 11], "unique_covitem_cov": 2, "unique_instruction_cov": 2, "unknown": 11, "unless": [2, 23], "unlimit": 23, "unsafe_hash": 9, "unsat": [2, 11], "unsat_onc": 2, "unsatisfi": 11, "unsign": [18, 23], "unsupport": [19, 22, 23], "untouch": 2, "unwant": 21, "up": [2, 22], "upcom": 0, "updat": 23, "upper": 2, "uppercas": 2, "us": [0, 2, 7, 9, 11, 15, 16, 17, 18, 19, 20, 22, 23], "usabl": 2, "usag": [11, 15, 23], "user": [0, 7, 9, 19, 22, 23], "userland": 20, "usual": [21, 23], "utf": 2, "util": 23, "valid": [2, 9, 11, 22], "valu": [0, 2, 7, 9, 11, 13, 17, 18, 19, 22, 23], "valueerror": 2, "var": [18, 19], "var1": 22, "var_prefix": 22, "var_valu": 19, "vari": 7, "variabl": [0, 9, 11, 17, 19, 23], "variant": [2, 21], "variou": [11, 15, 18, 21, 23], "veri": [0, 2, 23], "version": [0, 2], "via": [2, 15, 22, 23], "visual": 17, "void": [13, 22], "vulner": 17, "w": [11, 20], "wai": [7, 9, 22, 23], "want": [2, 22], "warn": [19, 20, 22, 23], "we": [2, 17, 19, 20, 21, 22, 23], "weak": [9, 23], "well": 2, "wether": 9, "what": [2, 19], "whatev": 2, "when": [2, 18, 22, 23], "where": [2, 15, 19, 22, 23], "whether": [2, 9, 19, 23], "which": [0, 2, 11, 17, 19, 22, 23], "while": [17, 20, 21], "whitespac": 2, "whole": [0, 15, 23], "whose": [2, 22], "wich": 19, "width": 2, "willing": 0, "win": 19, "window": 11, "within": [2, 9], "without": 2, "won": 19, "word": 2, "work": [2, 15, 23], "worklist": 22, "workspac": [2, 21, 22], "world": 23, "would": 19, "wrapper": [7, 23], "write": [2, 11, 13], "write_int": 23, "write_long": 23, "write_ptr": 23, "write_regist": 23, "write_symbolic_regist": 23, "written": [0, 19, 23], "x": [2, 11, 19, 20, 23], "x86": [7, 11, 20], "x86_64": [11, 23], "x89": 23, "xd1": 23, "xe2h": 23, "xedi": 23, "xmlcharrefreplac": 2, "xor": 19, "y": 2, "yet": [9, 19], "yield": [2, 20], "you": [17, 18], "yourself": 18, "z3": 11, "zero": 2, "zf": [19, 22], "zfill": 2}, "titles": ["Callback Mechanism", "Configuration", "Coverage", "Exception", "SymbolicExecutor", "SymbolicExplorator", "Loaders", "Context", "Sanitizers", "Seed", "Trace", "Types", "Workspace", "Supported Routines", "Seed Scheduling", "TritonDSE", "Crackme", "JSON Parser", "Toy Example", "Playing with Hooks", "Loaders", "Sanitizers &amp; Probes", "Managing Seeds", "Getting Started"], "titleterms": {"0": 18, "1": 18, "2": 18, "2015": 16, "2016": 16, "3": 18, "4": 18, "5": 18, "One": 18, "address": 19, "angri": 16, "api": 23, "arbitrari": 22, "b": 23, "built": 21, "c": 23, "callback": 0, "callbackmanag": 0, "cle": 20, "cleload": 6, "concret": 23, "configur": [1, 23], "context": 7, "corpu": [22, 23], "coverag": 2, "cpustat": 7, "crackm": 16, "creat": 6, "ctf": 16, "differ": 15, "elf": 20, "event": 19, "exampl": 18, "except": 3, "execut": 23, "exist": 14, "explor": [19, 23], "firmwar": 20, "function": [19, 23], "gener": 22, "get": [15, 23], "hackcon": 16, "hackov": 16, "heapalloc": 7, "hook": 19, "how": 22, "i": [19, 23], "ii": [19, 23], "iii": [19, 23], "inform": 17, "initi": 22, "inject": 22, "input": 18, "instal": 15, "instruct": 19, "interfac": 0, "introduct": 17, "iv": [19, 23], "json": 17, "length": 18, "linux": [13, 20], "load": 20, "loader": [6, 20], "manag": 22, "manipul": 23, "mechan": [0, 21], "memori": [7, 23], "monolithicload": 6, "multipl": 18, "new": 6, "non": 18, "object": 17, "off": 18, "parser": 17, "plai": 19, "practic": 17, "probe": [0, 21], "processst": 7, "program": [6, 23], "python": 23, "queri": 19, "quokkaprogram": 6, "r150": 16, "read": [18, 23], "regist": 23, "revers": 16, "routin": 13, "sanit": [8, 21], "schedul": 14, "seed": [9, 14, 22], "seedmanag": 5, "set": 22, "signatur": 0, "singl": 23, "solv": 19, "sourc": 18, "standard": 18, "start": [15, 23], "state": 23, "statu": 22, "strategi": 14, "string": 18, "support": 13, "symbol": [18, 23], "symbolicexecutor": 4, "symbolicexplor": 5, "threadcontext": 7, "tip": 17, "todo": [0, 13], "toi": 18, "trace": 10, "triton": 15, "tritonds": 15, "type": 11, "us": 21, "v": 23, "variabl": 22, "vi": 23, "vii": 23, "window": 13, "workspac": [12, 23], "write": [18, 20, 21, 23]}})