Search.setIndex({"alltitles": {"0. Multiple input sources": [[18, "multiple-input-sources"]], "1. Non standard input": [[18, "non-standard-input"]], "2. Symbolic read": [[18, "symbolic-read"]], "3. Symbolic read & write": [[18, "symbolic-read-write"]], "4. String length": [[18, "string-length"]], "5. Off-by-One example": [[18, "off-by-one-example"]], "CLE Loader": [[20, "CLE-Loader"]], "Callback Mechanism": [[0, null]], "Callback signatures": [[0, "callback-signatures"]], "CallbackManager": [[0, "callbackmanager"]], "CleLoader": [[6, "cleloader"]], "Configuration": [[1, null]], "Context": [[7, null]], "Coverage": [[2, null]], "CpuState": [[7, "cpustate"]], "Crackme": [[16, null]], "Creating a new Loader": [[6, "creating-a-new-loader"]], "Difference with Triton": [[15, "difference-with-triton"]], "Exception": [[3, null]], "Existing strategies": [[14, "module-tritondse.seed_scheduler"]], "Firmware Loading": [[20, "Firmware-Loading"]], "Getting Started": [[15, null], [23, null]], "Hackcon-2016-angry-reverser": [[16, "hackcon-2016-angry-reverser"]], "Hackover-ctf-2015-r150": [[16, "hackover-ctf-2015-r150"]], "HeapAllocator": [[7, "heapallocator"]], "How to inject arbitrary variables": [[22, "How-to-inject-arbitrary-variables"]], "I. Instruction hooking": [[19, "I.-Instruction-hooking"]], "I. Program": [[23, "I.-Program"]], "II. Address/Function hooking": [[19, "II.-Address/Function-hooking"]], "II. Single Execution": [[23, "II.-Single-Execution"]], "III. Concrete State Manipulation": [[23, "III.-Concrete-State-Manipulation"]], "III. Solving queries": [[19, "III.-Solving-queries"]], "IV. Hooking exploration events": [[19, "IV.-Hooking-exploration-events"]], "IV. Manipulating symbolic state": [[23, "IV.-Manipulating-symbolic-state"]], "Initial Corpus": [[22, "Initial-Corpus"]], "Installation": [[15, "installation"]], "Introduction": [[17, "introduction"]], "JSON Parser": [[17, null]], "Linux": [[13, "module-tritondse.routines"]], "Linux ELF loader": [[20, "Linux-ELF-loader"]], "Loaders": [[6, null], [20, null]], "Managing Seeds": [[22, null]], "Managing generated corpus": [[22, "Managing-generated-corpus"]], "Memory": [[7, "memory"]], "Objectives": [[17, "objectives"]], "Playing with Hooks": [[19, null]], "Practical information": [[17, "practical-information"]], "Probe Interface": [[0, "probe-interface"]], "Probe mechanism": [[21, "Probe-mechanism"]], "ProcessState": [[7, "processstate"]], "Program": [[6, "program"]], "QuokkaProgram": [[6, "quokkaprogram"]], "RawBinaryLoader": [[6, "rawbinaryloader"]], "Sanitizers": [[8, null]], "Sanitizers & Probes": [[21, null]], "Seed": [[9, null]], "Seed Scheduling": [[14, null]], "SeedManager": [[5, "seedmanager"]], "Setting seed status": [[22, "Setting-seed-status"]], "Supported Routines": [[13, null]], "SymbolicExecutor": [[4, null]], "SymbolicExplorator": [[5, null]], "ThreadContext": [[7, "threadcontext"]], "Tips": [[17, "tips"]], "Todo": [[0, "id1"], [7, "id1"], [13, "id2"]], "Toy Example": [[18, null]], "Trace": [[10, null]], "TritonDSE": [[15, null]], "Types": [[11, null]], "Using built-in sanitizers": [[21, "Using-built-in-sanitizers"]], "V. Configuration": [[23, "V.-Configuration"]], "VI. Exploration": [[23, "VI.-Exploration"]], "VII. Workspace & Corpus": [[23, "VII.-Workspace-&-Corpus"]], "Windows": [[13, "windows"]], "Workspace": [[12, null]], "Writing a Loader": [[20, "Writing-a-Loader"]], "Writing a sanitizer": [[21, "Writing-a-sanitizer"]], "a. Reading, writing registers (function API)": [[23, "a.-Reading,-writing-registers-(function-API)"]], "b. Reading, writing registers (Pythonic API)": [[23, "b.-Reading,-writing-registers-(Pythonic-API)"]], "c. Reading, writing memory": [[23, "c.-Reading,-writing-memory"]]}, "docnames": ["api/callbacks", "api/configuration", "api/coverage", "api/exception", "api/executor", "api/explorator", "api/loaders", "api/process", "api/sanitizers", "api/seeds", "api/tracing", "api/types", "api/workspace", "dev_doc/routines", "dev_doc/seedscheduling", "index", "practicals/crackme/crackme", "practicals/json_parser/json_parser", "practicals/toy_example/toy_example", "tutos/hooks", "tutos/loaders", "tutos/sanitizers", "tutos/seeds", "tutos/starting"], "envversion": {"nbsphinx": 4, "sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api/callbacks.rst", "api/configuration.rst", "api/coverage.rst", "api/exception.rst", "api/executor.rst", "api/explorator.rst", "api/loaders.rst", "api/process.rst", "api/sanitizers.rst", "api/seeds.rst", "api/tracing.rst", "api/types.rst", "api/workspace.rst", "dev_doc/routines.rst", "dev_doc/seedscheduling.rst", "index.rst", "practicals/crackme/crackme.rst", "practicals/json_parser/json_parser.rst", "practicals/toy_example/toy_example.rst", "tutos/hooks.ipynb", "tutos/loaders.ipynb", "tutos/sanitizers.ipynb", "tutos/seeds.ipynb", "tutos/starting.ipynb"], "indexentries": {"__annotations__ (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.__annotations__", false]], "__bytes__() (tritondse.seed.compositedata method)": [[9, "tritondse.seed.CompositeData.__bytes__", false]], "__bytes__() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.__bytes__", false]], "__dataclass_fields__ (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.__dataclass_fields__", false]], "__dataclass_params__ (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.__dataclass_params__", false]], "__delattr__() (tritondse.seed.compositedata method)": [[9, "tritondse.seed.CompositeData.__delattr__", false]], "__dict__ (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.__dict__", false]], "__dict__ (tritondse.seed.seed attribute)": [[9, "tritondse.seed.Seed.__dict__", false]], "__eq__() (tritondse.seed.compositedata method)": [[9, "tritondse.seed.CompositeData.__eq__", false]], "__eq__() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.__eq__", false]], "__hash__() (tritondse.seed.compositedata method)": [[9, "tritondse.seed.CompositeData.__hash__", false]], "__hash__() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.__hash__", false]], "__init__() (tritondse.seed.compositedata method)": [[9, "tritondse.seed.CompositeData.__init__", false]], "__init__() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.__init__", false]], "__len__() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.__len__", false]], "__len__() (tritondse.seed_scheduler.freshseedprioritizerworklist method)": [[14, "tritondse.seed_scheduler.FreshSeedPrioritizerWorklist.__len__", false]], "__len__() (tritondse.seed_scheduler.worklistaddresstoset method)": [[14, "tritondse.seed_scheduler.WorklistAddressToSet.__len__", false]], "__len__() (tritondse.seed_scheduler.worklistrand method)": [[14, "tritondse.seed_scheduler.WorklistRand.__len__", false]], "__match_args__ (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.__match_args__", false]], "__module__ (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.__module__", false]], "__module__ (tritondse.seed.seed attribute)": [[9, "tritondse.seed.Seed.__module__", false]], "__module__ (tritondse.seed.seedformat attribute)": [[9, "tritondse.seed.SeedFormat.__module__", false]], "__module__ (tritondse.seed.seedstatus attribute)": [[9, "tritondse.seed.SeedStatus.__module__", false]], "__repr__() (tritondse.seed.compositedata method)": [[9, "tritondse.seed.CompositeData.__repr__", false]], "__setattr__() (tritondse.seed.compositedata method)": [[9, "tritondse.seed.CompositeData.__setattr__", false]], "__weakref__ (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.__weakref__", false]], "__weakref__ (tritondse.seed.seed attribute)": [[9, "tritondse.seed.Seed.__weakref__", false]], "aarch64 (tritondse.types.architecture attribute)": [[11, "tritondse.types.Architecture.AARCH64", false]], "abort() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.abort", false]], "abortexecutionexception": [[3, "tritondse.exception.AbortExecutionException", false]], "actx (tritondse.processstate attribute)": [[7, "tritondse.ProcessState.actx", false]], "add() (tritondse.seed_scheduler.freshseedprioritizerworklist method)": [[14, "tritondse.seed_scheduler.FreshSeedPrioritizerWorklist.add", false]], "add() (tritondse.seed_scheduler.seedscheduler method)": [[14, "tritondse.seed_scheduler.SeedScheduler.add", false]], "add() (tritondse.seed_scheduler.worklistaddresstoset method)": [[14, "tritondse.seed_scheduler.WorklistAddressToSet.add", false]], "add() (tritondse.seed_scheduler.worklistrand method)": [[14, "tritondse.seed_scheduler.WorklistRand.add", false]], "add_covered_address() (tritondse.coverage.coveragesinglerun method)": [[2, "tritondse.coverage.CoverageSingleRun.add_covered_address", false]], "add_covered_address() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.add_covered_address", false]], "add_covered_branch() (tritondse.coverage.coveragesinglerun method)": [[2, "tritondse.coverage.CoverageSingleRun.add_covered_branch", false]], "add_covered_branch() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.add_covered_branch", false]], "add_covered_dynamic_branch() (tritondse.coverage.coveragesinglerun method)": [[2, "tritondse.coverage.CoverageSingleRun.add_covered_dynamic_branch", false]], "add_covered_dynamic_branch() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.add_covered_dynamic_branch", false]], "add_input_seed() (tritondse.symbolicexplorator method)": [[5, "tritondse.SymbolicExplorator.add_input_seed", false]], "add_new_seed() (tritondse.seed_manager.seedmanager method)": [[5, "tritondse.seed_manager.SeedManager.add_new_seed", false]], "add_seed_queue() (tritondse.seed_manager.seedmanager method)": [[5, "tritondse.seed_manager.SeedManager.add_seed_queue", false]], "addr (in module tritondse.types)": [[11, "tritondse.types.Addr", false]], "addrcallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.AddrCallback", false]], "address (tritondse.loadablesegment attribute)": [[6, "tritondse.LoadableSegment.address", false]], "after (tritondse.callbacks.cbpos attribute)": [[0, "tritondse.callbacks.CbPos.AFTER", false]], "all_not_covered (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.ALL_NOT_COVERED", false]], "alloc() (tritondse.heap_allocator.heapallocator method)": [[7, "tritondse.heap_allocator.HeapAllocator.alloc", false]], "allocatorexception": [[3, "tritondse.exception.AllocatorException", false]], "allocatorexception (class in tritondse.heap_allocator)": [[7, "tritondse.heap_allocator.AllocatorException", false]], "android (tritondse.types.platform attribute)": [[11, "tritondse.types.Platform.ANDROID", false]], "arch_mode (tritondse.cleloader property)": [[6, "tritondse.CleLoader.arch_mode", false]], "arch_mode (tritondse.loader property)": [[6, "tritondse.Loader.arch_mode", false]], "arch_mode (tritondse.program property)": [[6, "tritondse.Program.arch_mode", false]], "arch_mode (tritondse.rawbinaryloader property)": [[6, "tritondse.RawBinaryLoader.arch_mode", false]], "architecture (tritondse.cleloader property)": [[6, "tritondse.CleLoader.architecture", false]], "architecture (tritondse.loader property)": [[6, "tritondse.Loader.architecture", false]], "architecture (tritondse.processstate property)": [[7, "tritondse.ProcessState.architecture", false]], "architecture (tritondse.program property)": [[6, "tritondse.Program.architecture", false]], "architecture (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.architecture", false]], "architecture (tritondse.rawbinaryloader property)": [[6, "tritondse.RawBinaryLoader.architecture", false]], "archive_seed() (tritondse.seed_manager.seedmanager method)": [[5, "tritondse.seed_manager.SeedManager.archive_seed", false]], "argv (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.argv", false]], "arm32 (tritondse.types.architecture attribute)": [[11, "tritondse.types.Architecture.ARM32", false]], "as_integer_ratio() (tritondse.coverage.branchsolvingstrategy method)": [[2, "tritondse.coverage.BranchSolvingStrategy.as_integer_ratio", false]], "astnode (class in tritondse.types)": [[11, "tritondse.types.AstNode", false]], "base_pointer (tritondse.arch.cpustate property)": [[7, "tritondse.arch.CpuState.base_pointer", false]], "base_pointer_register (tritondse.processstate property)": [[7, "tritondse.ProcessState.base_pointer_register", false]], "base_stack (tritondse.cleloader attribute)": [[6, "tritondse.CleLoader.BASE_STACK", false]], "base_stack (tritondse.program attribute)": [[6, "tritondse.Program.BASE_STACK", false]], "before (tritondse.callbacks.cbpos attribute)": [[0, "tritondse.callbacks.CbPos.BEFORE", false]], "big (tritondse.types.endian attribute)": [[11, "tritondse.types.Endian.BIG", false]], "bin_dir (tritondse.workspace.workspace attribute)": [[12, "tritondse.workspace.Workspace.BIN_DIR", false]], "bind_to() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.bind_to", false]], "bit_count() (tritondse.coverage.branchsolvingstrategy method)": [[2, "tritondse.coverage.BranchSolvingStrategy.bit_count", false]], "bit_length() (tritondse.coverage.branchsolvingstrategy method)": [[2, "tritondse.coverage.BranchSolvingStrategy.bit_length", false]], "bitsize (in module tritondse.types)": [[11, "tritondse.types.BitSize", false]], "bitwuzla (tritondse.types.smtsolver attribute)": [[11, "tritondse.types.SmtSolver.BITWUZLA", false]], "block (tritondse.coverage.coveragestrategy attribute)": [[2, "tritondse.coverage.CoverageStrategy.BLOCK", false]], "block (tritondse.coveragestrategy attribute)": [[2, "tritondse.CoverageStrategy.BLOCK", false]], "branch_cov (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.BRANCH_COV", false]], "branch_solving_strategy (tritondse.config attribute)": [[1, "tritondse.Config.branch_solving_strategy", false]], "branchcoveredcallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.BranchCoveredCallback", false]], "bytes() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.bytes", false]], "bytesize (in module tritondse.types)": [[11, "tritondse.types.ByteSize", false]], "call_graph (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.call_graph", false]], "callback_manager (tritondse.symbolicexecutor property)": [[4, "tritondse.SymbolicExecutor.callback_manager", false]], "callback_manager (tritondse.symbolicexplorator property)": [[5, "tritondse.SymbolicExplorator.callback_manager", false]], "callbackmanager (class in tritondse.callbacks)": [[0, "tritondse.callbacks.CallbackManager", false]], "callbacks (tritondse.callbacks.probeinterface property)": [[0, "tritondse.callbacks.ProbeInterface.callbacks", false]], "callbacks (tritondse.sanitizers.formatstringsanitizer property)": [[8, "tritondse.sanitizers.FormatStringSanitizer.callbacks", false]], "callbacks (tritondse.sanitizers.integeroverflowsanitizer property)": [[8, "tritondse.sanitizers.IntegerOverflowSanitizer.callbacks", false]], "callbacks (tritondse.sanitizers.nullderefsanitizer property)": [[8, "tritondse.sanitizers.NullDerefSanitizer.callbacks", false]], "callbacks (tritondse.sanitizers.uafsanitizer property)": [[8, "tritondse.sanitizers.UAFSanitizer.callbacks", false]], "callbacks_enabled() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.callbacks_enabled", false]], "can_cover_symbolic_pointers() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.can_cover_symbolic_pointers", false]], "can_improve_coverage() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.can_improve_coverage", false]], "can_solve_models() (tritondse.seed_scheduler.freshseedprioritizerworklist method)": [[14, "tritondse.seed_scheduler.FreshSeedPrioritizerWorklist.can_solve_models", false]], "can_solve_models() (tritondse.seed_scheduler.seedscheduler method)": [[14, "tritondse.seed_scheduler.SeedScheduler.can_solve_models", false]], "can_solve_models() (tritondse.seed_scheduler.worklistaddresstoset method)": [[14, "tritondse.seed_scheduler.WorklistAddressToSet.can_solve_models", false]], "can_solve_models() (tritondse.seed_scheduler.worklistrand method)": [[14, "tritondse.seed_scheduler.WorklistRand.can_solve_models", false]], "cancel_join() (tritondse.thread_context.threadcontext method)": [[7, "tritondse.thread_context.ThreadContext.cancel_join", false]], "capitalize() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.capitalize", false]], "capstone (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.capstone", false]], "casefold() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.casefold", false]], "cbm (tritondse.symbolicexecutor attribute)": [[4, "tritondse.SymbolicExecutor.cbm", false]], "cbm (tritondse.symbolicexplorator attribute)": [[5, "tritondse.SymbolicExplorator.cbm", false]], "cbpos (class in tritondse.callbacks)": [[0, "tritondse.callbacks.CbPos", false]], "cbtype (class in tritondse.callbacks)": [[0, "tritondse.callbacks.CbType", false]], "center() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.center", false]], "check() (tritondse.sanitizers.formatstringsanitizer static method)": [[8, "tritondse.sanitizers.FormatStringSanitizer.check", false]], "check() (tritondse.sanitizers.integeroverflowsanitizer static method)": [[8, "tritondse.sanitizers.IntegerOverflowSanitizer.check", false]], "check() (tritondse.sanitizers.nullderefsanitizer static method)": [[8, "tritondse.sanitizers.NullDerefSanitizer.check", false]], "check() (tritondse.sanitizers.uafsanitizer static method)": [[8, "tritondse.sanitizers.UAFSanitizer.check", false]], "clear() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.clear", false]], "clear_triton_callbacks() (tritondse.processstate method)": [[7, "tritondse.ProcessState.clear_triton_callbacks", false]], "cleloader (class in tritondse)": [[6, "tritondse.CleLoader", false]], "clone() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.clone", false]], "close_file_descriptor() (tritondse.processstate method)": [[7, "tritondse.ProcessState.close_file_descriptor", false]], "composite (tritondse.seed.seedformat attribute)": [[9, "tritondse.seed.SeedFormat.COMPOSITE", false]], "compositedata (class in tritondse.seed)": [[9, "tritondse.seed.CompositeData", false]], "concretize_argument() (tritondse.processstate method)": [[7, "tritondse.ProcessState.concretize_argument", false]], "concretize_memory_bytes() (tritondse.processstate method)": [[7, "tritondse.ProcessState.concretize_memory_bytes", false]], "concretize_memory_int() (tritondse.processstate method)": [[7, "tritondse.ProcessState.concretize_memory_int", false]], "concretize_register() (tritondse.processstate method)": [[7, "tritondse.ProcessState.concretize_register", false]], "conditional_jmp (tritondse.types.symextype attribute)": [[11, "tritondse.types.SymExType.CONDITIONAL_JMP", false]], "config (class in tritondse)": [[1, "tritondse.Config", false]], "config (tritondse.symbolicexecutor attribute)": [[4, "tritondse.SymbolicExecutor.config", false]], "config (tritondse.symbolicexplorator attribute)": [[5, "tritondse.SymbolicExplorator.config", false]], "conjugate() (tritondse.coverage.branchsolvingstrategy method)": [[2, "tritondse.coverage.BranchSolvingStrategy.conjugate", false]], "constraint (tritondse.types.pathbranch attribute)": [[11, "tritondse.types.PathBranch.constraint", false]], "content (tritondse.loadablesegment attribute)": [[6, "tritondse.LoadableSegment.content", false]], "copy() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.copy", false]], "corpus_dir (tritondse.workspace.workspace attribute)": [[12, "tritondse.workspace.Workspace.CORPUS_DIR", false]], "count() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.count", false]], "cover_sym_dynjump (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.COVER_SYM_DYNJUMP", false]], "cover_sym_read (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.COVER_SYM_READ", false]], "cover_sym_write (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.COVER_SYM_WRITE", false]], "coverage (tritondse.symbolicexecutor attribute)": [[4, "tritondse.SymbolicExecutor.coverage", false]], "coverage (tritondse.symbolicexplorator attribute)": [[5, "tritondse.SymbolicExplorator.coverage", false]], "coverage (tritondse.trace.qbditrace property)": [[10, "tritondse.trace.QBDITrace.coverage", false]], "coverage (tritondse.trace.trace property)": [[10, "tritondse.trace.Trace.coverage", false]], "coverage (tritondse.trace.tritontrace property)": [[10, "tritondse.trace.TritonTrace.coverage", false]], "coverage_file (tritondse.coverage.globalcoverage attribute)": [[2, "tritondse.coverage.GlobalCoverage.COVERAGE_FILE", false]], "coverage_strategy (tritondse.config attribute)": [[1, "tritondse.Config.coverage_strategy", false]], "coveragesinglerun (class in tritondse.coverage)": [[2, "tritondse.coverage.CoverageSingleRun", false]], "covered_instructions (tritondse.coverage.coveragesinglerun attribute)": [[2, "tritondse.coverage.CoverageSingleRun.covered_instructions", false]], "covered_instructions (tritondse.coverage.globalcoverage attribute)": [[2, "tritondse.coverage.GlobalCoverage.covered_instructions", false]], "covered_items (tritondse.coverage.coveragesinglerun attribute)": [[2, "tritondse.coverage.CoverageSingleRun.covered_items", false]], "covered_items (tritondse.coverage.globalcoverage attribute)": [[2, "tritondse.coverage.GlobalCoverage.covered_items", false]], "covered_symbolic_pointers (tritondse.coverage.globalcoverage attribute)": [[2, "tritondse.coverage.GlobalCoverage.covered_symbolic_pointers", false]], "covitem (in module tritondse.coverage)": [[2, "tritondse.coverage.CovItem", false]], "cpu (tritondse.processstate attribute)": [[7, "tritondse.ProcessState.cpu", false]], "cpustate (class in tritondse.arch)": [[7, "tritondse.arch.CpuState", false]], "cpustate (tritondse.cleloader property)": [[6, "tritondse.CleLoader.cpustate", false]], "cpustate (tritondse.loader property)": [[6, "tritondse.Loader.cpustate", false]], "cpustate (tritondse.program property)": [[6, "tritondse.Program.cpustate", false]], "cpustate (tritondse.rawbinaryloader property)": [[6, "tritondse.RawBinaryLoader.cpustate", false]], "crash (tritondse.seed.seedstatus attribute)": [[9, "tritondse.seed.SeedStatus.CRASH", false]], "crash_dir (tritondse.workspace.workspace attribute)": [[12, "tritondse.workspace.Workspace.CRASH_DIR", false]], "create_file_descriptor() (tritondse.processstate method)": [[7, "tritondse.ProcessState.create_file_descriptor", false]], "ctx (tritondse.memory.memory attribute)": [[7, "tritondse.memory.Memory.ctx", false]], "ctx_switch (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.CTX_SWITCH", false]], "current_executor (tritondse.symbolicexplorator attribute)": [[5, "tritondse.SymbolicExplorator.current_executor", false]], "current_instruction (tritondse.processstate property)": [[7, "tritondse.ProcessState.current_instruction", false]], "current_pc (tritondse.symbolicexecutor attribute)": [[4, "tritondse.SymbolicExecutor.current_pc", false]], "current_thread (tritondse.processstate property)": [[7, "tritondse.ProcessState.current_thread", false]], "custom (tritondse.config attribute)": [[1, "tritondse.Config.custom", false]], "default_workspace (tritondse.workspace.workspace attribute)": [[12, "tritondse.workspace.Workspace.DEFAULT_WORKSPACE", false]], "denominator (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.denominator", false]], "difference() (tritondse.coverage.coveragesinglerun method)": [[2, "tritondse.coverage.CoverageSingleRun.difference", false]], "difference() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.difference", false]], "disable_segmentation() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.disable_segmentation", false]], "drop_seed() (tritondse.seed_manager.seedmanager method)": [[5, "tritondse.seed_manager.SeedManager.drop_seed", false]], "dstaddr (tritondse.types.pathbranch attribute)": [[11, "tritondse.types.PathBranch.dstAddr", false]], "dynamic_jmp (tritondse.types.symextype attribute)": [[11, "tritondse.types.SymExType.DYNAMIC_JMP", false]], "dynamic_symbol_table (tritondse.processstate attribute)": [[7, "tritondse.ProcessState.dynamic_symbol_table", false]], "edge (in module tritondse.types)": [[11, "tritondse.types.Edge", false]], "edge (tritondse.coverage.coveragestrategy attribute)": [[2, "tritondse.coverage.CoverageStrategy.EDGE", false]], "edge (tritondse.coveragestrategy attribute)": [[2, "tritondse.CoverageStrategy.EDGE", false]], "elf (tritondse.types.format attribute)": [[11, "tritondse.types.Format.ELF", false]], "emulate() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.emulate", false]], "emulation_deinit() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.emulation_deinit", false]], "emulation_init() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.emulation_init", false]], "enable_segmentation() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.enable_segmentation", false]], "encode() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.encode", false]], "end_stack (tritondse.cleloader attribute)": [[6, "tritondse.CleLoader.END_STACK", false]], "end_stack (tritondse.program attribute)": [[6, "tritondse.Program.END_STACK", false]], "end_time (tritondse.symbolicexecutor attribute)": [[4, "tritondse.SymbolicExecutor.end_time", false]], "endianness (tritondse.cleloader property)": [[6, "tritondse.CleLoader.endianness", false]], "endianness (tritondse.loader property)": [[6, "tritondse.Loader.endianness", false]], "endianness (tritondse.processstate attribute)": [[7, "tritondse.ProcessState.endianness", false]], "endianness (tritondse.program property)": [[6, "tritondse.Program.endianness", false]], "endianness (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.endianness", false]], "endianness (tritondse.rawbinaryloader property)": [[6, "tritondse.RawBinaryLoader.endianness", false]], "endswith() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.endswith", false]], "enqueue_seed() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.enqueue_seed", false]], "entry_point (tritondse.cleloader property)": [[6, "tritondse.CleLoader.entry_point", false]], "entry_point (tritondse.loader property)": [[6, "tritondse.Loader.entry_point", false]], "entry_point (tritondse.program property)": [[6, "tritondse.Program.entry_point", false]], "entry_point (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.entry_point", false]], "entry_point (tritondse.rawbinaryloader property)": [[6, "tritondse.RawBinaryLoader.entry_point", false]], "evaluate_expression_model() (tritondse.processstate method)": [[7, "tritondse.ProcessState.evaluate_expression_model", false]], "execution_count (tritondse.symbolicexplorator property)": [[5, "tritondse.SymbolicExplorator.execution_count", false]], "execution_time (tritondse.symbolicexecutor property)": [[4, "tritondse.SymbolicExecutor.execution_time", false]], "execution_timeout (tritondse.config attribute)": [[1, "tritondse.Config.execution_timeout", false]], "exitcode (tritondse.symbolicexecutor property)": [[4, "tritondse.SymbolicExecutor.exitcode", false]], "expandtabs() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.expandtabs", false]], "exploration_limit (tritondse.config attribute)": [[1, "tritondse.Config.exploration_limit", false]], "exploration_timeout (tritondse.config attribute)": [[1, "tritondse.Config.exploration_timeout", false]], "explorationstatus (class in tritondse)": [[5, "tritondse.ExplorationStatus", false]], "explorationstepcallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.ExplorationStepCallback", false]], "explore() (tritondse.symbolicexplorator method)": [[5, "tritondse.SymbolicExplorator.explore", false]], "explore_step (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.EXPLORE_STEP", false]], "expression (class in tritondse.types)": [[11, "tritondse.types.Expression", false]], "extern_seg (tritondse.processstate attribute)": [[7, "tritondse.ProcessState.EXTERN_SEG", false]], "extern_sym_base (tritondse.cleloader attribute)": [[6, "tritondse.CleLoader.EXTERN_SYM_BASE", false]], "extern_sym_base (tritondse.program attribute)": [[6, "tritondse.Program.EXTERN_SYM_BASE", false]], "extern_sym_size (tritondse.cleloader attribute)": [[6, "tritondse.CleLoader.EXTERN_SYM_SIZE", false]], "extern_sym_size (tritondse.program attribute)": [[6, "tritondse.Program.EXTERN_SYM_SIZE", false]], "fail (tritondse.seed.seedstatus attribute)": [[9, "tritondse.seed.SeedStatus.FAIL", false]], "fail_dir (tritondse.workspace.workspace attribute)": [[12, "tritondse.workspace.Workspace.FAIL_DIR", false]], "fd (tritondse.types.filedesc attribute)": [[11, "tritondse.types.FileDesc.fd", false]], "fetch_instruction() (tritondse.processstate method)": [[7, "tritondse.ProcessState.fetch_instruction", false]], "fgets() (tritondse.types.filedesc method)": [[11, "tritondse.types.FileDesc.fgets", false]], "file_descriptor_exists() (tritondse.processstate method)": [[7, "tritondse.ProcessState.file_descriptor_exists", false]], "filedesc (class in tritondse.types)": [[11, "tritondse.types.FileDesc", false]], "filename (tritondse.seed.seed property)": [[9, "tritondse.seed.Seed.filename", false]], "files (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.files", false]], "find() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.find", false]], "find_function_addr() (tritondse.cleloader method)": [[6, "tritondse.CleLoader.find_function_addr", false]], "find_function_addr() (tritondse.loader method)": [[6, "tritondse.Loader.find_function_addr", false]], "find_function_addr() (tritondse.program method)": [[6, "tritondse.Program.find_function_addr", false]], "find_function_addr() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.find_function_addr", false]], "find_function_addr() (tritondse.rawbinaryloader method)": [[6, "tritondse.RawBinaryLoader.find_function_addr", false]], "find_function_from_addr() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.find_function_from_addr", false]], "find_map() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.find_map", false]], "first_last_not_covered (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.FIRST_LAST_NOT_COVERED", false]], "fork() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.fork", false]], "format (tritondse.program property)": [[6, "tritondse.Program.format", false]], "format (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.format", false]], "format (tritondse.seed.seed property)": [[9, "tritondse.seed.Seed.format", false]], "format() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.format", false]], "format_map() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.format_map", false]], "formatstringsanitizer (class in tritondse.sanitizers)": [[8, "tritondse.sanitizers.FormatStringSanitizer", false]], "free() (tritondse.heap_allocator.heapallocator method)": [[7, "tritondse.heap_allocator.HeapAllocator.free", false]], "freshseedprioritizerworklist (class in tritondse.seed_scheduler)": [[14, "tritondse.seed_scheduler.FreshSeedPrioritizerWorklist", false]], "from_binary() (tritondse.quokkaprogram static method)": [[6, "tritondse.QuokkaProgram.from_binary", false]], "from_bytes() (tritondse.coverage.branchsolvingstrategy method)": [[2, "tritondse.coverage.BranchSolvingStrategy.from_bytes", false]], "from_bytes() (tritondse.seed.seed static method)": [[9, "tritondse.seed.Seed.from_bytes", false]], "from_dict() (tritondse.seed.compositedata static method)": [[9, "tritondse.seed.CompositeData.from_dict", false]], "from_file() (tritondse.config static method)": [[1, "tritondse.Config.from_file", false]], "from_file() (tritondse.coverage.globalcoverage static method)": [[2, "tritondse.coverage.GlobalCoverage.from_file", false]], "from_file() (tritondse.seed.seed static method)": [[9, "tritondse.seed.Seed.from_file", false]], "from_file() (tritondse.trace.qbditrace static method)": [[10, "tritondse.trace.QBDITrace.from_file", false]], "from_file() (tritondse.trace.trace static method)": [[10, "tritondse.trace.Trace.from_file", false]], "from_file() (tritondse.trace.tritontrace static method)": [[10, "tritondse.trace.TritonTrace.from_file", false]], "from_json() (tritondse.config static method)": [[1, "tritondse.Config.from_json", false]], "from_loader() (tritondse.processstate static method)": [[7, "tritondse.ProcessState.from_loader", false]], "fromkeys() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.fromkeys", false]], "func_chunk_index (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.func_chunk_index", false]], "get() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.get", false]], "get_address_callbacks() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.get_address_callbacks", false]], "get_argument_symbolic() (tritondse.processstate method)": [[7, "tritondse.ProcessState.get_argument_symbolic", false]], "get_argument_value() (tritondse.processstate method)": [[7, "tritondse.ProcessState.get_argument_value", false]], "get_binary_directory() (tritondse.workspace.workspace method)": [[12, "tritondse.workspace.Workspace.get_binary_directory", false]], "get_call_graph() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.get_call_graph", false]], "get_caller_instructions() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.get_caller_instructions", false]], "get_chunk() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.get_chunk", false]], "get_context_switch_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.get_context_switch_callback", false]], "get_coverage() (tritondse.trace.trace method)": [[10, "tritondse.trace.Trace.get_coverage", false]], "get_data() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.get_data", false]], "get_execution_callbacks() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.get_execution_callbacks", false]], "get_exploration_step_callbacks() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.get_exploration_step_callbacks", false]], "get_expression_variable_values_model() (tritondse.processstate method)": [[7, "tritondse.ProcessState.get_expression_variable_values_model", false]], "get_file_descriptor() (tritondse.processstate method)": [[7, "tritondse.ProcessState.get_file_descriptor", false]], "get_file_input() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.get_file_input", false]], "get_first_function_by_chunk() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.get_first_function_by_chunk", false]], "get_format_arguments() (tritondse.processstate method)": [[7, "tritondse.ProcessState.get_format_arguments", false]], "get_format_string() (tritondse.processstate method)": [[7, "tritondse.ProcessState.get_format_string", false]], "get_full_argument() (tritondse.processstate method)": [[7, "tritondse.ProcessState.get_full_argument", false]], "get_function() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.get_function", false]], "get_function_by_chunk() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.get_function_by_chunk", false]], "get_imported_routine_callbacks() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.get_imported_routine_callbacks", false]], "get_instruction() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.get_instruction", false]], "get_instruction_callbacks() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.get_instruction_callbacks", false]], "get_map() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.get_map", false]], "get_maps() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.get_maps", false]], "get_memory_violation_callbacks() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.get_memory_violation_callbacks", false]], "get_metadata_file() (tritondse.workspace.workspace method)": [[12, "tritondse.workspace.Workspace.get_metadata_file", false]], "get_metadata_file_path() (tritondse.workspace.workspace method)": [[12, "tritondse.workspace.Workspace.get_metadata_file_path", false]], "get_mnemonic_callbacks() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.get_mnemonic_callbacks", false]], "get_new_input_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.get_new_input_callback", false]], "get_on_branch_covered_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.get_on_branch_covered_callback", false]], "get_on_solving_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.get_on_solving_callback", false]], "get_opcode_callbacks() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.get_opcode_callbacks", false]], "get_path_constraints() (tritondse.processstate method)": [[7, "tritondse.ProcessState.get_path_constraints", false]], "get_segment() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.get_segment", false]], "get_slice() (tritondse.quokkaprogram static method)": [[6, "tritondse.QuokkaProgram.get_slice", false]], "get_stack_value() (tritondse.processstate method)": [[7, "tritondse.ProcessState.get_stack_value", false]], "get_string_argument() (tritondse.processstate method)": [[7, "tritondse.ProcessState.get_string_argument", false]], "globalcoverage (class in tritondse.coverage)": [[2, "tritondse.coverage.GlobalCoverage", false]], "hang (tritondse.seed.seedstatus attribute)": [[9, "tritondse.seed.SeedStatus.HANG", false]], "hang_dir (tritondse.workspace.workspace attribute)": [[12, "tritondse.workspace.Workspace.HANG_DIR", false]], "has_ever_been_written() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.has_ever_been_written", false]], "has_seed_remaining() (tritondse.seed_scheduler.freshseedprioritizerworklist method)": [[14, "tritondse.seed_scheduler.FreshSeedPrioritizerWorklist.has_seed_remaining", false]], "has_seed_remaining() (tritondse.seed_scheduler.seedscheduler method)": [[14, "tritondse.seed_scheduler.SeedScheduler.has_seed_remaining", false]], "has_seed_remaining() (tritondse.seed_scheduler.worklistaddresstoset method)": [[14, "tritondse.seed_scheduler.WorklistAddressToSet.has_seed_remaining", false]], "has_seed_remaining() (tritondse.seed_scheduler.worklistrand method)": [[14, "tritondse.seed_scheduler.WorklistRand.has_seed_remaining", false]], "hash (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.hash", false]], "hash (tritondse.seed.seed property)": [[9, "tritondse.seed.Seed.hash", false]], "heap_allocator (tritondse.processstate attribute)": [[7, "tritondse.ProcessState.heap_allocator", false]], "heapallocator (class in tritondse.heap_allocator)": [[7, "tritondse.heap_allocator.HeapAllocator", false]], "id (tritondse.types.filedesc attribute)": [[11, "tritondse.types.FileDesc.id", false]], "idle (tritondse.explorationstatus attribute)": [[5, "tritondse.ExplorationStatus.IDLE", false]], "imag (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.imag", false]], "imported_functions_relocations() (tritondse.cleloader method)": [[6, "tritondse.CleLoader.imported_functions_relocations", false]], "imported_functions_relocations() (tritondse.loader method)": [[6, "tritondse.Loader.imported_functions_relocations", false]], "imported_functions_relocations() (tritondse.program method)": [[6, "tritondse.Program.imported_functions_relocations", false]], "imported_functions_relocations() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.imported_functions_relocations", false]], "imported_functions_relocations() (tritondse.rawbinaryloader method)": [[6, "tritondse.RawBinaryLoader.imported_functions_relocations", false]], "imported_variable_symbols_relocations() (tritondse.cleloader method)": [[6, "tritondse.CleLoader.imported_variable_symbols_relocations", false]], "imported_variable_symbols_relocations() (tritondse.loader method)": [[6, "tritondse.Loader.imported_variable_symbols_relocations", false]], "imported_variable_symbols_relocations() (tritondse.program method)": [[6, "tritondse.Program.imported_variable_symbols_relocations", false]], "imported_variable_symbols_relocations() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.imported_variable_symbols_relocations", false]], "imported_variable_symbols_relocations() (tritondse.rawbinaryloader method)": [[6, "tritondse.RawBinaryLoader.imported_variable_symbols_relocations", false]], "improve_coverage() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.improve_coverage", false]], "index() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.index", false]], "initialize() (tritondse.workspace.workspace method)": [[12, "tritondse.workspace.Workspace.initialize", false]], "initialize_context() (tritondse.processstate method)": [[7, "tritondse.ProcessState.initialize_context", false]], "inject_symbolic_argv_memory() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.inject_symbolic_argv_memory", false]], "inject_symbolic_file_memory() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.inject_symbolic_file_memory", false]], "inject_symbolic_file_register() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.inject_symbolic_file_register", false]], "inject_symbolic_raw_input() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.inject_symbolic_raw_input", false]], "inject_symbolic_variable_memory() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.inject_symbolic_variable_memory", false]], "inject_symbolic_variable_register() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.inject_symbolic_variable_register", false]], "input (in module tritondse.types)": [[11, "tritondse.types.Input", false]], "instrcallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.InstrCallback", false]], "integeroverflowsanitizer (class in tritondse.sanitizers)": [[8, "tritondse.sanitizers.IntegerOverflowSanitizer", false]], "ios (tritondse.types.platform attribute)": [[11, "tritondse.types.Platform.IOS", false]], "is_binded() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.is_binded", false]], "is_bootstrap_seed() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.is_bootstrap_seed", false]], "is_composite() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.is_composite", false]], "is_covered() (tritondse.coverage.coveragesinglerun method)": [[2, "tritondse.coverage.CoverageSingleRun.is_covered", false]], "is_covered() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.is_covered", false]], "is_dead() (tritondse.thread_context.threadcontext method)": [[7, "tritondse.thread_context.ThreadContext.is_dead", false]], "is_empty() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.is_empty", false]], "is_file_defined() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.is_file_defined", false]], "is_format_composite() (tritondse.config method)": [[1, "tritondse.Config.is_format_composite", false]], "is_format_raw() (tritondse.config method)": [[1, "tritondse.Config.is_format_raw", false]], "is_fresh() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.is_fresh", false]], "is_halt_instruction() (tritondse.processstate method)": [[7, "tritondse.ProcessState.is_halt_instruction", false]], "is_heap_ptr() (tritondse.processstate method)": [[7, "tritondse.ProcessState.is_heap_ptr", false]], "is_input_fd() (tritondse.types.filedesc method)": [[11, "tritondse.types.FileDesc.is_input_fd", false]], "is_main_thread() (tritondse.thread_context.threadcontext method)": [[7, "tritondse.thread_context.ThreadContext.is_main_thread", false]], "is_mapped() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.is_mapped", false]], "is_memory_symbolic() (tritondse.processstate method)": [[7, "tritondse.ProcessState.is_memory_symbolic", false]], "is_new_seed() (tritondse.seed_manager.seedmanager method)": [[5, "tritondse.seed_manager.SeedManager.is_new_seed", false]], "is_path_predicate_updated() (tritondse.processstate method)": [[7, "tritondse.ProcessState.is_path_predicate_updated", false]], "is_ptr_allocated() (tritondse.heap_allocator.heapallocator method)": [[7, "tritondse.heap_allocator.HeapAllocator.is_ptr_allocated", false]], "is_ptr_freed() (tritondse.heap_allocator.heapallocator method)": [[7, "tritondse.heap_allocator.HeapAllocator.is_ptr_freed", false]], "is_raw() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.is_raw", false]], "is_real_fd() (tritondse.types.filedesc method)": [[11, "tritondse.types.FileDesc.is_real_fd", false]], "is_register_symbolic() (tritondse.processstate method)": [[7, "tritondse.ProcessState.is_register_symbolic", false]], "is_running() (tritondse.thread_context.threadcontext method)": [[7, "tritondse.thread_context.ThreadContext.is_running", false]], "is_seed_injected() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.is_seed_injected", false]], "is_status_set() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.is_status_set", false]], "is_syscall() (tritondse.processstate method)": [[7, "tritondse.ProcessState.is_syscall", false]], "is_waiting_to_join() (tritondse.thread_context.threadcontext method)": [[7, "tritondse.thread_context.ThreadContext.is_waiting_to_join", false]], "isalnum() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.isalnum", false]], "isalpha() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.isalpha", false]], "isascii() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.isascii", false]], "isdecimal() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.isdecimal", false]], "isdigit() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.isdigit", false]], "isidentifier() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.isidentifier", false]], "islower() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.islower", false]], "isnumeric() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.isnumeric", false]], "isprintable() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.isprintable", false]], "isspace() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.isspace", false]], "istaken (tritondse.types.pathbranch attribute)": [[11, "tritondse.types.PathBranch.isTaken", false]], "istitle() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.istitle", false]], "isupper() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.isupper", false]], "items() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.items", false]], "iter_chunk() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.iter_chunk", false]], "iter_corpus() (tritondse.workspace.workspace method)": [[12, "tritondse.workspace.Workspace.iter_corpus", false]], "iter_crashes() (tritondse.workspace.workspace method)": [[12, "tritondse.workspace.Workspace.iter_crashes", false]], "iter_fails() (tritondse.workspace.workspace method)": [[12, "tritondse.workspace.Workspace.iter_fails", false]], "iter_hangs() (tritondse.workspace.workspace method)": [[12, "tritondse.workspace.Workspace.iter_hangs", false]], "iter_new_paths() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.iter_new_paths", false]], "iter_worklist() (tritondse.workspace.workspace method)": [[12, "tritondse.workspace.Workspace.iter_worklist", false]], "join() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.join", false]], "join_thread() (tritondse.thread_context.threadcontext method)": [[7, "tritondse.thread_context.ThreadContext.join_thread", false]], "keys() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.keys", false]], "kill() (tritondse.thread_context.threadcontext method)": [[7, "tritondse.thread_context.ThreadContext.kill", false]], "last_branch_constraint (tritondse.processstate property)": [[7, "tritondse.ProcessState.last_branch_constraint", false]], "linux (tritondse.types.platform attribute)": [[11, "tritondse.types.Platform.LINUX", false]], "little (tritondse.types.endian attribute)": [[11, "tritondse.types.Endian.LITTLE", false]], "ljust() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.ljust", false]], "load() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.load", false]], "load_process() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.load_process", false]], "loadablesegment (class in tritondse)": [[6, "tritondse.LoadableSegment", false]], "loader (class in tritondse)": [[6, "tritondse.Loader", false]], "loader (tritondse.symbolicexecutor attribute)": [[4, "tritondse.SymbolicExecutor.loader", false]], "loader (tritondse.symbolicexplorator attribute)": [[5, "tritondse.SymbolicExplorator.loader", false]], "log_file (tritondse.workspace.workspace attribute)": [[12, "tritondse.workspace.Workspace.LOG_FILE", false]], "logfile_path (tritondse.workspace.workspace property)": [[12, "tritondse.workspace.Workspace.logfile_path", false]], "logger (tritondse.quokkaprogram attribute)": [[6, "tritondse.QuokkaProgram.logger", false]], "lower() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.lower", false]], "lstrip() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.lstrip", false]], "macho (tritondse.types.format attribute)": [[11, "tritondse.types.Format.MACHO", false]], "macos (tritondse.types.platform attribute)": [[11, "tritondse.types.Platform.MACOS", false]], "maketrans() (tritondse.coverage.coveragestrategy static method)": [[2, "tritondse.coverage.CoverageStrategy.maketrans", false]], "manual (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.MANUAL", false]], "map() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.map", false]], "map_from_name() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.map_from_name", false]], "mem_usage_str() (tritondse.symbolicexecutor static method)": [[4, "tritondse.SymbolicExecutor.mem_usage_str", false]], "mem_violation (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.MEM_VIOLATION", false]], "memory (class in tritondse.memory)": [[7, "tritondse.memory.Memory", false]], "memory (tritondse.processstate attribute)": [[7, "tritondse.ProcessState.memory", false]], "memory_read (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.MEMORY_READ", false]], "memory_segmentation (tritondse.config attribute)": [[1, "tritondse.Config.memory_segmentation", false]], "memory_segments() (tritondse.cleloader method)": [[6, "tritondse.CleLoader.memory_segments", false]], "memory_segments() (tritondse.loader method)": [[6, "tritondse.Loader.memory_segments", false]], "memory_segments() (tritondse.program method)": [[6, "tritondse.Program.memory_segments", false]], "memory_segments() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.memory_segments", false]], "memory_segments() (tritondse.rawbinaryloader method)": [[6, "tritondse.RawBinaryLoader.memory_segments", false]], "memory_write (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.MEMORY_WRITE", false]], "memoryviolationcallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.MemoryViolationCallback", false]], "memreadcallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.MemReadCallback", false]], "memwritecallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.MemWriteCallback", false]], "merge() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.merge", false]], "merge() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.merge", false]], "metadata_dir (tritondse.workspace.workspace attribute)": [[12, "tritondse.workspace.Workspace.METADATA_DIR", false]], "minus_one (tritondse.processstate property)": [[7, "tritondse.ProcessState.minus_one", false]], "mk_new_seed_from_model() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.mk_new_seed_from_model", false]], "mnemoniccallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.MnemonicCallback", false]], "model (class in tritondse.types)": [[11, "tritondse.types.Model", false]], "module": [[2, "module-tritondse.coverage", false], [3, "module-tritondse.exception", false], [8, "module-tritondse.sanitizers", false], [9, "module-tritondse.seed", false], [10, "module-tritondse.trace", false], [11, "module-tritondse.types", false], [13, "module-tritondse.routines", false], [14, "module-tritondse.seed_scheduler", false]], "mprotect() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.mprotect", false]], "name (tritondse.cleloader property)": [[6, "tritondse.CleLoader.name", false]], "name (tritondse.loadablesegment attribute)": [[6, "tritondse.LoadableSegment.name", false]], "name (tritondse.loader property)": [[6, "tritondse.Loader.name", false]], "name (tritondse.program property)": [[6, "tritondse.Program.name", false]], "name (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.name", false]], "name (tritondse.rawbinaryloader property)": [[6, "tritondse.RawBinaryLoader.name", false]], "name (tritondse.types.filedesc attribute)": [[11, "tritondse.types.FileDesc.name", false]], "new (tritondse.seed.seedstatus attribute)": [[9, "tritondse.seed.SeedStatus.NEW", false]], "new_input (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.NEW_INPUT", false]], "new_items_to_cover() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.new_items_to_cover", false]], "newinputcallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.NewInputCallback", false]], "not_covered_items (tritondse.coverage.globalcoverage attribute)": [[2, "tritondse.coverage.GlobalCoverage.not_covered_items", false]], "not_running (tritondse.explorationstatus attribute)": [[5, "tritondse.ExplorationStatus.NOT_RUNNING", false]], "nullderefsanitizer (class in tritondse.sanitizers)": [[8, "tritondse.sanitizers.NullDerefSanitizer", false]], "numerator (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.numerator", false]], "offset (tritondse.types.filedesc property)": [[11, "tritondse.types.FileDesc.offset", false]], "ok_done (tritondse.seed.seedstatus attribute)": [[9, "tritondse.seed.SeedStatus.OK_DONE", false]], "opcodecallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.OpcodeCallback", false]], "pack_integer() (tritondse.processstate method)": [[7, "tritondse.ProcessState.pack_integer", false]], "partition() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.partition", false]], "path (tritondse.cleloader attribute)": [[6, "tritondse.CleLoader.path", false]], "path (tritondse.coverage.coveragestrategy attribute)": [[2, "tritondse.coverage.CoverageStrategy.PATH", false]], "path (tritondse.coveragestrategy attribute)": [[2, "tritondse.CoverageStrategy.PATH", false]], "path (tritondse.program attribute)": [[6, "tritondse.Program.path", false]], "path (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.path", false]], "path_predicate_size (tritondse.processstate property)": [[7, "tritondse.ProcessState.path_predicate_size", false]], "pathbranch (class in tritondse.types)": [[11, "tritondse.types.PathBranch", false]], "pathconstraint (class in tritondse.types)": [[11, "tritondse.types.PathConstraint", false]], "pathhash (in module tritondse.types)": [[11, "tritondse.types.PathHash", false]], "pathlike (in module tritondse.types)": [[11, "tritondse.types.PathLike", false]], "pe (tritondse.types.format attribute)": [[11, "tritondse.types.Format.PE", false]], "pending_coverage (tritondse.coverage.globalcoverage attribute)": [[2, "tritondse.coverage.GlobalCoverage.pending_coverage", false]], "pending_seeds (tritondse.symbolicexecutor property)": [[4, "tritondse.SymbolicExecutor.pending_seeds", false]], "perms (tritondse.loadablesegment attribute)": [[6, "tritondse.LoadableSegment.perms", false]], "pick() (tritondse.seed_scheduler.freshseedprioritizerworklist method)": [[14, "tritondse.seed_scheduler.FreshSeedPrioritizerWorklist.pick", false]], "pick() (tritondse.seed_scheduler.seedscheduler method)": [[14, "tritondse.seed_scheduler.SeedScheduler.pick", false]], "pick() (tritondse.seed_scheduler.worklistaddresstoset method)": [[14, "tritondse.seed_scheduler.WorklistAddressToSet.pick", false]], "pick() (tritondse.seed_scheduler.worklistrand method)": [[14, "tritondse.seed_scheduler.WorklistRand.pick", false]], "pick_seed() (tritondse.seed_manager.seedmanager method)": [[5, "tritondse.seed_manager.SeedManager.pick_seed", false]], "pipe_stderr (tritondse.config attribute)": [[1, "tritondse.Config.pipe_stderr", false]], "pipe_stdout (tritondse.config attribute)": [[1, "tritondse.Config.pipe_stdout", false]], "platform (tritondse.cleloader property)": [[6, "tritondse.CleLoader.platform", false]], "platform (tritondse.loader property)": [[6, "tritondse.Loader.platform", false]], "platform (tritondse.program property)": [[6, "tritondse.Program.platform", false]], "platform (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.platform", false]], "platform (tritondse.rawbinaryloader property)": [[6, "tritondse.RawBinaryLoader.platform", false]], "pop() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.pop", false]], "pop_stack_value() (tritondse.processstate method)": [[7, "tritondse.ProcessState.pop_stack_value", false]], "popitem() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.popitem", false]], "post_addr (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.POST_ADDR", false]], "post_exec (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.POST_EXEC", false]], "post_execution() (tritondse.coverage.coveragesinglerun method)": [[2, "tritondse.coverage.CoverageSingleRun.post_execution", false]], "post_execution() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.post_execution", false]], "post_execution() (tritondse.seed_manager.seedmanager method)": [[5, "tritondse.seed_manager.SeedManager.post_execution", false]], "post_execution() (tritondse.seed_scheduler.freshseedprioritizerworklist method)": [[14, "tritondse.seed_scheduler.FreshSeedPrioritizerWorklist.post_execution", false]], "post_execution() (tritondse.seed_scheduler.seedscheduler method)": [[14, "tritondse.seed_scheduler.SeedScheduler.post_execution", false]], "post_execution() (tritondse.seed_scheduler.worklistaddresstoset method)": [[14, "tritondse.seed_scheduler.WorklistAddressToSet.post_execution", false]], "post_execution() (tritondse.seed_scheduler.worklistrand method)": [[14, "tritondse.seed_scheduler.WorklistRand.post_execution", false]], "post_exploration() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.post_exploration", false]], "post_exploration() (tritondse.seed_manager.seedmanager method)": [[5, "tritondse.seed_manager.SeedManager.post_exploration", false]], "post_exploration() (tritondse.seed_scheduler.freshseedprioritizerworklist method)": [[14, "tritondse.seed_scheduler.FreshSeedPrioritizerWorklist.post_exploration", false]], "post_exploration() (tritondse.seed_scheduler.seedscheduler method)": [[14, "tritondse.seed_scheduler.SeedScheduler.post_exploration", false]], "post_exploration() (tritondse.seed_scheduler.worklistaddresstoset method)": [[14, "tritondse.seed_scheduler.WorklistAddressToSet.post_exploration", false]], "post_exploration() (tritondse.seed_scheduler.worklistrand method)": [[14, "tritondse.seed_scheduler.WorklistRand.post_exploration", false]], "post_exploration() (tritondse.symbolicexplorator method)": [[5, "tritondse.SymbolicExplorator.post_exploration", false]], "post_inst (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.POST_INST", false]], "post_mnem (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.POST_MNEM", false]], "post_opcode (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.POST_OPCODE", false]], "post_rtn (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.POST_RTN", false]], "pp_item() (tritondse.coverage.coveragesinglerun method)": [[2, "tritondse.coverage.CoverageSingleRun.pp_item", false]], "pp_item() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.pp_item", false]], "pp_meta_filename() (tritondse.seed_manager.seedmanager method)": [[5, "tritondse.seed_manager.SeedManager.pp_meta_filename", false]], "pre_addr (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.PRE_ADDR", false]], "pre_exec (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.PRE_EXEC", false]], "pre_inst (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.PRE_INST", false]], "pre_mnem (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.PRE_MNEM", false]], "pre_opcode (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.PRE_OPCODE", false]], "pre_rtn (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.PRE_RTN", false]], "prefixed_edge (tritondse.coverage.coveragestrategy attribute)": [[2, "tritondse.coverage.CoverageStrategy.PREFIXED_EDGE", false]], "prefixed_edge (tritondse.coveragestrategy attribute)": [[2, "tritondse.CoverageStrategy.PREFIXED_EDGE", false]], "previous_pc (tritondse.symbolicexecutor attribute)": [[4, "tritondse.SymbolicExecutor.previous_pc", false]], "probeexception": [[3, "tritondse.exception.ProbeException", false]], "probeinterface (class in tritondse.callbacks)": [[0, "tritondse.callbacks.ProbeInterface", false]], "process_instruction() (tritondse.processstate method)": [[7, "tritondse.ProcessState.process_instruction", false]], "processstate (class in tritondse)": [[7, "tritondse.ProcessState", false]], "program (class in tritondse)": [[6, "tritondse.Program", false]], "program_argv (tritondse.config attribute)": [[1, "tritondse.Config.program_argv", false]], "program_counter (tritondse.arch.cpustate property)": [[7, "tritondse.arch.CpuState.program_counter", false]], "program_counter_register (tritondse.processstate property)": [[7, "tritondse.ProcessState.program_counter_register", false]], "pstate (tritondse.symbolicexecutor attribute)": [[4, "tritondse.SymbolicExecutor.pstate", false]], "ptr_bit_size (tritondse.processstate property)": [[7, "tritondse.ProcessState.ptr_bit_size", false]], "ptr_size (tritondse.processstate property)": [[7, "tritondse.ProcessState.ptr_size", false]], "push_constraint() (tritondse.processstate method)": [[7, "tritondse.ProcessState.push_constraint", false]], "push_stack_value() (tritondse.processstate method)": [[7, "tritondse.ProcessState.push_stack_value", false]], "pypcode (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.pypcode", false]], "qbdi_script_filepath (tritondse.trace.qbditrace attribute)": [[10, "tritondse.trace.QBDITrace.QBDI_SCRIPT_FILEPATH", false]], "qbditrace (class in tritondse.trace)": [[10, "tritondse.trace.QBDITrace", false]], "quokkaprogram (class in tritondse)": [[6, "tritondse.QuokkaProgram", false]], "r (tritondse.types.perm attribute)": [[11, "tritondse.types.Perm.R", false]], "raddr (in module tritondse.types)": [[11, "tritondse.types.rAddr", false]], "raw (tritondse.seed.seedformat attribute)": [[9, "tritondse.seed.SeedFormat.RAW", false]], "rawbinaryloader (class in tritondse)": [[6, "tritondse.RawBinaryLoader", false]], "read() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read", false]], "read() (tritondse.types.filedesc method)": [[11, "tritondse.types.FileDesc.read", false]], "read_bytes() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.read_bytes", false]], "read_char() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read_char", false]], "read_dword() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read_dword", false]], "read_int() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read_int", false]], "read_long() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read_long", false]], "read_long_long() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read_long_long", false]], "read_ptr() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read_ptr", false]], "read_qword() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read_qword", false]], "read_register() (tritondse.processstate method)": [[7, "tritondse.ProcessState.read_register", false]], "read_sint() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read_sint", false]], "read_string() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read_string", false]], "read_symbolic_memory_byte() (tritondse.processstate method)": [[7, "tritondse.ProcessState.read_symbolic_memory_byte", false]], "read_symbolic_memory_bytes() (tritondse.processstate method)": [[7, "tritondse.ProcessState.read_symbolic_memory_bytes", false]], "read_symbolic_memory_int() (tritondse.processstate method)": [[7, "tritondse.ProcessState.read_symbolic_memory_int", false]], "read_symbolic_register() (tritondse.processstate method)": [[7, "tritondse.ProcessState.read_symbolic_register", false]], "read_uchar() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read_uchar", false]], "read_uint() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read_uint", false]], "read_ulong() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read_ulong", false]], "read_ulong_long() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read_ulong_long", false]], "read_word() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read_word", false]], "real (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.real", false]], "reg_read (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.REG_READ", false]], "reg_write (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.REG_WRITE", false]], "register (class in tritondse.types)": [[11, "tritondse.types.Register", false]], "register_addr_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_addr_callback", false]], "register_exploration_step_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_exploration_step_callback", false]], "register_function_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_function_callback", false]], "register_instruction_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_instruction_callback", false]], "register_memory_read_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_memory_read_callback", false]], "register_memory_violation_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_memory_violation_callback", false]], "register_memory_write_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_memory_write_callback", false]], "register_mnemonic_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_mnemonic_callback", false]], "register_new_input_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_new_input_callback", false]], "register_on_branch_covered_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_on_branch_covered_callback", false]], "register_on_solving_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_on_solving_callback", false]], "register_opcode_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_opcode_callback", false]], "register_post_addr_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_post_addr_callback", false]], "register_post_execution_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_post_execution_callback", false]], "register_post_imported_routine_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_post_imported_routine_callback", false]], "register_post_instruction_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_post_instruction_callback", false]], "register_post_mnemonic_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_post_mnemonic_callback", false]], "register_post_opcode_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_post_opcode_callback", false]], "register_pre_addr_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_pre_addr_callback", false]], "register_pre_execution_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_pre_execution_callback", false]], "register_pre_imported_routine_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_pre_imported_routine_callback", false]], "register_pre_instruction_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_pre_instruction_callback", false]], "register_pre_mnemonic_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_pre_mnemonic_callback", false]], "register_pre_opcode_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_pre_opcode_callback", false]], "register_probe() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_probe", false]], "register_register_read_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_register_read_callback", false]], "register_register_write_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_register_write_callback", false]], "register_thread_context_switch_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_thread_context_switch_callback", false]], "register_triton_callback() (tritondse.processstate method)": [[7, "tritondse.ProcessState.register_triton_callback", false]], "registers (class in tritondse.types)": [[11, "tritondse.types.Registers", false]], "registers (tritondse.processstate property)": [[7, "tritondse.ProcessState.registers", false]], "regreadcallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.RegReadCallback", false]], "regwritecallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.RegWriteCallback", false]], "relocation_enum (tritondse.program property)": [[6, "tritondse.Program.relocation_enum", false]], "relocation_enum (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.relocation_enum", false]], "removeprefix() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.removeprefix", false]], "removesuffix() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.removesuffix", false]], "replace() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.replace", false]], "reset() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.reset", false]], "restore() (tritondse.thread_context.threadcontext method)": [[7, "tritondse.thread_context.ThreadContext.restore", false]], "return_register (tritondse.processstate property)": [[7, "tritondse.ProcessState.return_register", false]], "rfind() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.rfind", false]], "rindex() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.rindex", false]], "rjust() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.rjust", false]], "root_dir (tritondse.workspace.workspace attribute)": [[12, "tritondse.workspace.Workspace.root_dir", false]], "rpartition() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.rpartition", false]], "rsplit() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.rsplit", false]], "rstrip() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.rstrip", false]], "rtn___fprintf_chk() (in module tritondse.routines)": [[13, "tritondse.routines.rtn___fprintf_chk", false]], "rtn__setjmp() (in module tritondse.routines)": [[13, "tritondse.routines.rtn__setjmp", false]], "rtn_abort() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_abort", false]], "rtn_assert_fail() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_assert_fail", false]], "rtn_atexit() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_atexit", false]], "rtn_atoi() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_atoi", false]], "rtn_calloc() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_calloc", false]], "rtn_clock_gettime() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_clock_gettime", false]], "rtn_ctype_b_loc() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_ctype_b_loc", false]], "rtn_ctype_toupper_loc() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_ctype_toupper_loc", false]], "rtn_errno_location() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_errno_location", false]], "rtn_exit() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_exit", false]], "rtn_fclose() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_fclose", false]], "rtn_fgets() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_fgets", false]], "rtn_fopen() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_fopen", false]], "rtn_fprintf() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_fprintf", false]], "rtn_fputc() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_fputc", false]], "rtn_fputs() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_fputs", false]], "rtn_fread() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_fread", false]], "rtn_free() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_free", false]], "rtn_fseek() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_fseek", false]], "rtn_ftell() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_ftell", false]], "rtn_fwrite() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_fwrite", false]], "rtn_getchar() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_getchar", false]], "rtn_getenv() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_getenv", false]], "rtn_gettimeofday() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_gettimeofday", false]], "rtn_isspace() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_isspace", false]], "rtn_libc_start_main() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_libc_start_main", false]], "rtn_longjmp() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_longjmp", false]], "rtn_malloc() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_malloc", false]], "rtn_memcmp() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_memcmp", false]], "rtn_memcpy() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_memcpy", false]], "rtn_memmem() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_memmem", false]], "rtn_memmove() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_memmove", false]], "rtn_mempcpy() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_mempcpy", false]], "rtn_memset() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_memset", false]], "rtn_open() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_open", false]], "rtn_printf() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_printf", false]], "rtn_pthread_create() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_pthread_create", false]], "rtn_pthread_exit() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_pthread_exit", false]], "rtn_pthread_join() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_pthread_join", false]], "rtn_pthread_mutex_destroy() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_pthread_mutex_destroy", false]], "rtn_pthread_mutex_init() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_pthread_mutex_init", false]], "rtn_pthread_mutex_lock() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_pthread_mutex_lock", false]], "rtn_pthread_mutex_unlock() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_pthread_mutex_unlock", false]], "rtn_puts() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_puts", false]], "rtn_rand() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_rand", false]], "rtn_read() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_read", false]], "rtn_realloc() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_realloc", false]], "rtn_sem_destroy() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_sem_destroy", false]], "rtn_sem_getvalue() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_sem_getvalue", false]], "rtn_sem_init() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_sem_init", false]], "rtn_sem_post() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_sem_post", false]], "rtn_sem_timedwait() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_sem_timedwait", false]], "rtn_sem_trywait() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_sem_trywait", false]], "rtn_sem_wait() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_sem_wait", false]], "rtn_setlocale() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_setlocale", false]], "rtn_sleep() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_sleep", false]], "rtn_sprintf() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_sprintf", false]], "rtn_stack_chk_fail() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_stack_chk_fail", false]], "rtn_strcasecmp() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strcasecmp", false]], "rtn_strchr() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strchr", false]], "rtn_strcmp() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strcmp", false]], "rtn_strcpy() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strcpy", false]], "rtn_strdup() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strdup", false]], "rtn_strerror() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strerror", false]], "rtn_strlen() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strlen", false]], "rtn_strncasecmp() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strncasecmp", false]], "rtn_strncmp() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strncmp", false]], "rtn_strncpy() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strncpy", false]], "rtn_strtok_r() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strtok_r", false]], "rtn_strtoul() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strtoul", false]], "rtn_write() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_write", false]], "rtn_xstat() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_xstat", false]], "rtncallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.RtnCallback", false]], "run() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.run", false]], "run() (tritondse.trace.qbditrace static method)": [[10, "tritondse.trace.QBDITrace.run", false]], "run() (tritondse.trace.trace static method)": [[10, "tritondse.trace.Trace.run", false]], "run() (tritondse.trace.tritontrace static method)": [[10, "tritondse.trace.TritonTrace.run", false]], "running (tritondse.explorationstatus attribute)": [[5, "tritondse.ExplorationStatus.RUNNING", false]], "sat (tritondse.types.solverstatus attribute)": [[11, "tritondse.types.SolverStatus.SAT", false]], "save() (tritondse.thread_context.threadcontext method)": [[7, "tritondse.thread_context.ThreadContext.save", false]], "save_file() (tritondse.workspace.workspace method)": [[12, "tritondse.workspace.Workspace.save_file", false]], "save_metadata_file() (tritondse.workspace.workspace method)": [[12, "tritondse.workspace.Workspace.save_metadata_file", false]], "save_seed() (tritondse.workspace.workspace method)": [[12, "tritondse.workspace.Workspace.save_seed", false]], "seed (class in tritondse.seed)": [[9, "tritondse.seed.Seed", false]], "seed (tritondse.symbolicexecutor attribute)": [[4, "tritondse.SymbolicExecutor.seed", false]], "seed_format (tritondse.config attribute)": [[1, "tritondse.Config.seed_format", false]], "seedmanager (class in tritondse.seed_manager)": [[5, "tritondse.seed_manager.SeedManager", false]], "seeds_available() (tritondse.seed_manager.seedmanager method)": [[5, "tritondse.seed_manager.SeedManager.seeds_available", false]], "seeds_manager (tritondse.symbolicexplorator attribute)": [[5, "tritondse.SymbolicExplorator.seeds_manager", false]], "seedscheduler (class in tritondse.seed_scheduler)": [[14, "tritondse.seed_scheduler.SeedScheduler", false]], "segmentation_enabled (tritondse.memory.memory property)": [[7, "tritondse.memory.Memory.segmentation_enabled", false]], "segments (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.segments", false]], "set_endianness() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.set_endianness", false]], "set_segmentation() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.set_segmentation", false]], "set_solver() (tritondse.processstate method)": [[7, "tritondse.ProcessState.set_solver", false]], "set_solver_timeout() (tritondse.processstate method)": [[7, "tritondse.ProcessState.set_solver_timeout", false]], "set_thumb() (tritondse.processstate method)": [[7, "tritondse.ProcessState.set_thumb", false]], "set_triton_mode() (tritondse.processstate method)": [[7, "tritondse.ProcessState.set_triton_mode", false]], "setdefault() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.setdefault", false]], "size (tritondse.loadablesegment attribute)": [[6, "tritondse.LoadableSegment.size", false]], "size (tritondse.seed.seed property)": [[9, "tritondse.seed.Seed.size", false]], "skip_instruction() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.skip_instruction", false]], "skip_sleep_routine (tritondse.config attribute)": [[1, "tritondse.Config.skip_sleep_routine", false]], "skip_unsupported_import (tritondse.config attribute)": [[1, "tritondse.Config.skip_unsupported_import", false]], "skip_unsupported_instruction (tritondse.config attribute)": [[1, "tritondse.Config.skip_unsupported_instruction", false]], "skipinstructionexception": [[3, "tritondse.exception.SkipInstructionException", false]], "smt_enumeration_limit (tritondse.config attribute)": [[1, "tritondse.Config.smt_enumeration_limit", false]], "smt_queries_limit (tritondse.config attribute)": [[1, "tritondse.Config.smt_queries_limit", false]], "smt_solver (tritondse.config attribute)": [[1, "tritondse.Config.smt_solver", false]], "smt_timeout (tritondse.config attribute)": [[1, "tritondse.Config.smt_timeout", false]], "solve() (tritondse.processstate method)": [[7, "tritondse.ProcessState.solve", false]], "solve_enumerate_expression() (tritondse.processstate method)": [[7, "tritondse.ProcessState.solve_enumerate_expression", false]], "solve_no_pp() (tritondse.processstate method)": [[7, "tritondse.ProcessState.solve_no_pp", false]], "sound_mem_access (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.SOUND_MEM_ACCESS", false]], "spawn_new_thread() (tritondse.processstate method)": [[7, "tritondse.ProcessState.spawn_new_thread", false]], "split() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.split", false]], "splitlines() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.splitlines", false]], "srcaddr (tritondse.types.pathbranch attribute)": [[11, "tritondse.types.PathBranch.srcAddr", false]], "stack_pointer (tritondse.arch.cpustate property)": [[7, "tritondse.arch.CpuState.stack_pointer", false]], "stack_pointer_register (tritondse.processstate property)": [[7, "tritondse.ProcessState.stack_pointer_register", false]], "stack_seg (tritondse.processstate attribute)": [[7, "tritondse.ProcessState.STACK_SEG", false]], "start_time (tritondse.symbolicexecutor attribute)": [[4, "tritondse.SymbolicExecutor.start_time", false]], "startswith() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.startswith", false]], "status (tritondse.seed.seed property)": [[9, "tritondse.seed.Seed.status", false]], "status (tritondse.symbolicexplorator attribute)": [[5, "tritondse.SymbolicExplorator.status", false]], "step() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.step", false]], "step() (tritondse.symbolicexplorator method)": [[5, "tritondse.SymbolicExplorator.step", false]], "stop_exploration() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.stop_exploration", false]], "stop_exploration() (tritondse.symbolicexplorator method)": [[5, "tritondse.SymbolicExplorator.stop_exploration", false]], "stopexplorationexception": [[3, "tritondse.exception.StopExplorationException", false]], "stopped (tritondse.explorationstatus attribute)": [[5, "tritondse.ExplorationStatus.STOPPED", false]], "strategy (tritondse.coverage.coveragesinglerun attribute)": [[2, "tritondse.coverage.CoverageSingleRun.strategy", false]], "strategy (tritondse.coverage.globalcoverage attribute)": [[2, "tritondse.coverage.GlobalCoverage.strategy", false]], "strategy (tritondse.trace.trace property)": [[10, "tritondse.trace.Trace.strategy", false]], "strings (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.strings", false]], "strip() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.strip", false]], "structures (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.structures", false]], "swapcase() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.swapcase", false]], "switch_thread() (tritondse.processstate method)": [[7, "tritondse.ProcessState.switch_thread", false]], "symbolic_read (tritondse.types.symextype attribute)": [[11, "tritondse.types.SymExType.SYMBOLIC_READ", false]], "symbolic_seed (tritondse.symbolicexecutor attribute)": [[4, "tritondse.SymbolicExecutor.symbolic_seed", false]], "symbolic_write (tritondse.types.symextype attribute)": [[11, "tritondse.types.SymExType.SYMBOLIC_WRITE", false]], "symbolicexecutor (class in tritondse)": [[4, "tritondse.SymbolicExecutor", false]], "symbolicexplorator (class in tritondse)": [[5, "tritondse.SymbolicExplorator", false]], "symbolicvariable (class in tritondse.types)": [[11, "tritondse.types.SymbolicVariable", false]], "symbolize_memory_byte() (tritondse.processstate method)": [[7, "tritondse.ProcessState.symbolize_memory_byte", false]], "symbolize_memory_bytes() (tritondse.processstate method)": [[7, "tritondse.ProcessState.symbolize_memory_bytes", false]], "symbolize_register() (tritondse.processstate method)": [[7, "tritondse.ProcessState.symbolize_register", false]], "symex_solving (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.SYMEX_SOLVING", false]], "symexcallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.SymExCallback", false]], "symexsolvingcallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.SymExSolvingCallback", false]], "terminate_exploration() (tritondse.symbolicexplorator method)": [[5, "tritondse.SymbolicExplorator.terminate_exploration", false]], "terminated (tritondse.explorationstatus attribute)": [[5, "tritondse.ExplorationStatus.TERMINATED", false]], "thread_scheduling (tritondse.config attribute)": [[1, "tritondse.Config.thread_scheduling", false]], "threadcallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.ThreadCallback", false]], "threadcontext (class in tritondse.thread_context)": [[7, "tritondse.thread_context.ThreadContext", false]], "threads (tritondse.processstate property)": [[7, "tritondse.ProcessState.threads", false]], "thumb (tritondse.types.archmode attribute)": [[11, "tritondse.types.ArchMode.THUMB", false]], "time_inc_coefficient (tritondse.config attribute)": [[1, "tritondse.Config.time_inc_coefficient", false]], "timeout (tritondse.types.solverstatus attribute)": [[11, "tritondse.types.SolverStatus.TIMEOUT", false]], "timeout_always (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.TIMEOUT_ALWAYS", false]], "timeout_once (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.TIMEOUT_ONCE", false]], "title() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.title", false]], "to_bytes() (tritondse.coverage.branchsolvingstrategy method)": [[2, "tritondse.coverage.BranchSolvingStrategy.to_bytes", false]], "to_file() (tritondse.config method)": [[1, "tritondse.Config.to_file", false]], "to_file() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.to_file", false]], "to_json() (tritondse.config method)": [[1, "tritondse.Config.to_json", false]], "total_emulation_time (tritondse.symbolicexplorator property)": [[5, "tritondse.SymbolicExplorator.total_emulation_time", false]], "total_instruction_executed (tritondse.coverage.coveragesinglerun property)": [[2, "tritondse.coverage.CoverageSingleRun.total_instruction_executed", false]], "total_instruction_executed (tritondse.coverage.globalcoverage property)": [[2, "tritondse.coverage.GlobalCoverage.total_instruction_executed", false]], "total_solving_time (tritondse.seed_manager.seedmanager property)": [[5, "tritondse.seed_manager.SeedManager.total_solving_time", false]], "trace (class in tritondse.trace)": [[10, "tritondse.trace.Trace", false]], "trace (tritondse.trace.qbditrace property)": [[10, "tritondse.trace.QBDITrace.trace", false]], "trace (tritondse.trace.trace property)": [[10, "tritondse.trace.Trace.trace", false]], "trace_offset (tritondse.symbolicexecutor attribute)": [[4, "tritondse.SymbolicExecutor.trace_offset", false]], "traceexception": [[10, "tritondse.trace.TraceException", false]], "translate() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.translate", false]], "tritondse.coverage": [[2, "module-tritondse.coverage", false]], "tritondse.exception": [[3, "module-tritondse.exception", false]], "tritondse.routines": [[13, "module-tritondse.routines", false]], "tritondse.sanitizers": [[8, "module-tritondse.sanitizers", false]], "tritondse.seed": [[9, "module-tritondse.seed", false]], "tritondse.seed_scheduler": [[14, "module-tritondse.seed_scheduler", false]], "tritondse.trace": [[10, "module-tritondse.trace", false]], "tritondse.types": [[11, "module-tritondse.types", false]], "tritontrace (class in tritondse.trace)": [[10, "tritondse.trace.TritonTrace", false]], "ts (tritondse.symbolicexplorator attribute)": [[5, "tritondse.SymbolicExplorator.ts", false]], "tt_ctx (tritondse.processstate attribute)": [[7, "tritondse.ProcessState.tt_ctx", false]], "uafsanitizer (class in tritondse.sanitizers)": [[8, "tritondse.sanitizers.UAFSanitizer", false]], "uid (tritondse.symbolicexecutor attribute)": [[4, "tritondse.SymbolicExecutor.uid", false]], "unbind() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.unbind", false]], "uncoverable_items (tritondse.coverage.globalcoverage attribute)": [[2, "tritondse.coverage.GlobalCoverage.uncoverable_items", false]], "unique_covitem_covered (tritondse.coverage.coveragesinglerun property)": [[2, "tritondse.coverage.CoverageSingleRun.unique_covitem_covered", false]], "unique_covitem_covered (tritondse.coverage.globalcoverage property)": [[2, "tritondse.coverage.GlobalCoverage.unique_covitem_covered", false]], "unique_instruction_covered (tritondse.coverage.coveragesinglerun property)": [[2, "tritondse.coverage.CoverageSingleRun.unique_instruction_covered", false]], "unique_instruction_covered (tritondse.coverage.globalcoverage property)": [[2, "tritondse.coverage.GlobalCoverage.unique_instruction_covered", false]], "unknown (tritondse.types.solverstatus attribute)": [[11, "tritondse.types.SolverStatus.UNKNOWN", false]], "unmap() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.unmap", false]], "unpack_integer() (tritondse.processstate method)": [[7, "tritondse.ProcessState.unpack_integer", false]], "unregister_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.unregister_callback", false]], "unsat (tritondse.types.solverstatus attribute)": [[11, "tritondse.types.SolverStatus.UNSAT", false]], "unsat_once (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.UNSAT_ONCE", false]], "update() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.update", false]], "update_seed_location() (tritondse.workspace.workspace method)": [[12, "tritondse.workspace.Workspace.update_seed_location", false]], "update_worklist() (tritondse.seed_scheduler.freshseedprioritizerworklist method)": [[14, "tritondse.seed_scheduler.FreshSeedPrioritizerWorklist.update_worklist", false]], "update_worklist() (tritondse.seed_scheduler.seedscheduler method)": [[14, "tritondse.seed_scheduler.SeedScheduler.update_worklist", false]], "update_worklist() (tritondse.seed_scheduler.worklistaddresstoset method)": [[14, "tritondse.seed_scheduler.WorklistAddressToSet.update_worklist", false]], "update_worklist() (tritondse.seed_scheduler.worklistrand method)": [[14, "tritondse.seed_scheduler.WorklistRand.update_worklist", false]], "upper() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.upper", false]], "values() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.values", false]], "variables (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.variables", false]], "w (tritondse.types.perm attribute)": [[11, "tritondse.types.Perm.W", false]], "windows (tritondse.types.platform attribute)": [[11, "tritondse.types.Platform.WINDOWS", false]], "without_segmentation() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.without_segmentation", false]], "worklist_dir (tritondse.workspace.workspace attribute)": [[12, "tritondse.workspace.Workspace.WORKLIST_DIR", false]], "worklistaddresstoset (class in tritondse.seed_scheduler)": [[14, "tritondse.seed_scheduler.WorklistAddressToSet", false]], "worklistrand (class in tritondse.seed_scheduler)": [[14, "tritondse.seed_scheduler.WorklistRand", false]], "workspace (class in tritondse.workspace)": [[12, "tritondse.workspace.Workspace", false]], "workspace (tritondse.config attribute)": [[1, "tritondse.Config.workspace", false]], "workspace (tritondse.symbolicexecutor attribute)": [[4, "tritondse.SymbolicExecutor.workspace", false]], "workspace (tritondse.symbolicexplorator attribute)": [[5, "tritondse.SymbolicExplorator.workspace", false]], "workspace_reset (tritondse.config attribute)": [[1, "tritondse.Config.workspace_reset", false]], "write() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.write", false]], "write_argument_value() (tritondse.processstate method)": [[7, "tritondse.ProcessState.write_argument_value", false]], "write_char() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.write_char", false]], "write_dword() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.write_dword", false]], "write_int() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.write_int", false]], "write_long() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.write_long", false]], "write_long_long() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.write_long_long", false]], "write_ptr() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.write_ptr", false]], "write_qword() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.write_qword", false]], "write_register() (tritondse.processstate method)": [[7, "tritondse.ProcessState.write_register", false]], "write_stack_value() (tritondse.processstate method)": [[7, "tritondse.ProcessState.write_stack_value", false]], "write_symbolic_memory_byte() (tritondse.processstate method)": [[7, "tritondse.ProcessState.write_symbolic_memory_byte", false]], "write_symbolic_memory_int() (tritondse.processstate method)": [[7, "tritondse.ProcessState.write_symbolic_memory_int", false]], "write_symbolic_register() (tritondse.processstate method)": [[7, "tritondse.ProcessState.write_symbolic_register", false]], "write_word() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.write_word", false]], "x (tritondse.types.perm attribute)": [[11, "tritondse.types.Perm.X", false]], "x86 (tritondse.types.architecture attribute)": [[11, "tritondse.types.Architecture.X86", false]], "x86_64 (tritondse.types.architecture attribute)": [[11, "tritondse.types.Architecture.X86_64", false]], "z3 (tritondse.types.smtsolver attribute)": [[11, "tritondse.types.SmtSolver.Z3", false]], "zfill() (tritondse.coverage.coveragestrategy method)": [[2, "tritondse.coverage.CoverageStrategy.zfill", false]]}, "objects": {"tritondse": [[6, 0, 1, "", "CleLoader"], [1, 0, 1, "", "Config"], [2, 4, 1, "", "CoverageStrategy"], [5, 0, 1, "", "ExplorationStatus"], [6, 0, 1, "", "LoadableSegment"], [6, 0, 1, "", "Loader"], [7, 0, 1, "", "ProcessState"], [6, 0, 1, "", "Program"], [6, 0, 1, "", "QuokkaProgram"], [6, 0, 1, "", "RawBinaryLoader"], [4, 0, 1, "", "SymbolicExecutor"], [5, 0, 1, "", "SymbolicExplorator"], [2, 6, 0, "-", "coverage"], [3, 6, 0, "-", "exception"], [13, 6, 0, "-", "routines"], [8, 6, 0, "-", "sanitizers"], [9, 6, 0, "-", "seed"], [14, 6, 0, "-", "seed_scheduler"], [10, 6, 0, "-", "trace"], [11, 6, 0, "-", "types"]], "tritondse.CleLoader": [[6, 1, 1, "", "BASE_STACK"], [6, 1, 1, "", "END_STACK"], [6, 1, 1, "", "EXTERN_SYM_BASE"], [6, 1, 1, "", "EXTERN_SYM_SIZE"], [6, 2, 1, "", "arch_mode"], [6, 2, 1, "", "architecture"], [6, 2, 1, "", "cpustate"], [6, 2, 1, "", "endianness"], [6, 2, 1, "", "entry_point"], [6, 3, 1, "", "find_function_addr"], [6, 3, 1, "", "imported_functions_relocations"], [6, 3, 1, "", "imported_variable_symbols_relocations"], [6, 3, 1, "", "memory_segments"], [6, 2, 1, "", "name"], [6, 1, 1, "", "path"], [6, 2, 1, "", "platform"]], "tritondse.Config": [[1, 1, 1, "", "branch_solving_strategy"], [1, 1, 1, "", "coverage_strategy"], [1, 1, 1, "", "custom"], [1, 1, 1, "", "execution_timeout"], [1, 1, 1, "", "exploration_limit"], [1, 1, 1, "", "exploration_timeout"], [1, 3, 1, "", "from_file"], [1, 3, 1, "", "from_json"], [1, 3, 1, "", "is_format_composite"], [1, 3, 1, "", "is_format_raw"], [1, 1, 1, "", "memory_segmentation"], [1, 1, 1, "", "pipe_stderr"], [1, 1, 1, "", "pipe_stdout"], [1, 1, 1, "", "program_argv"], [1, 1, 1, "", "seed_format"], [1, 1, 1, "", "skip_sleep_routine"], [1, 1, 1, "", "skip_unsupported_import"], [1, 1, 1, "", "skip_unsupported_instruction"], [1, 1, 1, "", "smt_enumeration_limit"], [1, 1, 1, "", "smt_queries_limit"], [1, 1, 1, "", "smt_solver"], [1, 1, 1, "", "smt_timeout"], [1, 1, 1, "", "thread_scheduling"], [1, 1, 1, "", "time_inc_coefficient"], [1, 3, 1, "", "to_file"], [1, 3, 1, "", "to_json"], [1, 1, 1, "", "workspace"], [1, 1, 1, "", "workspace_reset"]], "tritondse.CoverageStrategy": [[2, 1, 1, "", "BLOCK"], [2, 1, 1, "", "EDGE"], [2, 1, 1, "", "PATH"], [2, 1, 1, "", "PREFIXED_EDGE"]], "tritondse.ExplorationStatus": [[5, 1, 1, "", "IDLE"], [5, 1, 1, "", "NOT_RUNNING"], [5, 1, 1, "", "RUNNING"], [5, 1, 1, "", "STOPPED"], [5, 1, 1, "", "TERMINATED"]], "tritondse.LoadableSegment": [[6, 1, 1, "", "address"], [6, 1, 1, "", "content"], [6, 1, 1, "", "name"], [6, 1, 1, "", "perms"], [6, 1, 1, "", "size"]], "tritondse.Loader": [[6, 2, 1, "", "arch_mode"], [6, 2, 1, "", "architecture"], [6, 2, 1, "", "cpustate"], [6, 2, 1, "", "endianness"], [6, 2, 1, "", "entry_point"], [6, 3, 1, "", "find_function_addr"], [6, 3, 1, "", "imported_functions_relocations"], [6, 3, 1, "", "imported_variable_symbols_relocations"], [6, 3, 1, "", "memory_segments"], [6, 2, 1, "", "name"], [6, 2, 1, "", "platform"]], "tritondse.ProcessState": [[7, 1, 1, "", "EXTERN_SEG"], [7, 1, 1, "", "STACK_SEG"], [7, 1, 1, "", "actx"], [7, 2, 1, "", "architecture"], [7, 2, 1, "", "base_pointer_register"], [7, 3, 1, "", "clear_triton_callbacks"], [7, 3, 1, "", "close_file_descriptor"], [7, 3, 1, "", "concretize_argument"], [7, 3, 1, "", "concretize_memory_bytes"], [7, 3, 1, "", "concretize_memory_int"], [7, 3, 1, "", "concretize_register"], [7, 1, 1, "", "cpu"], [7, 3, 1, "", "create_file_descriptor"], [7, 2, 1, "", "current_instruction"], [7, 2, 1, "", "current_thread"], [7, 1, 1, "", "dynamic_symbol_table"], [7, 1, 1, "", "endianness"], [7, 3, 1, "", "evaluate_expression_model"], [7, 3, 1, "", "fetch_instruction"], [7, 3, 1, "", "file_descriptor_exists"], [7, 3, 1, "", "from_loader"], [7, 3, 1, "", "get_argument_symbolic"], [7, 3, 1, "", "get_argument_value"], [7, 3, 1, "", "get_expression_variable_values_model"], [7, 3, 1, "", "get_file_descriptor"], [7, 3, 1, "", "get_format_arguments"], [7, 3, 1, "", "get_format_string"], [7, 3, 1, "", "get_full_argument"], [7, 3, 1, "", "get_path_constraints"], [7, 3, 1, "", "get_stack_value"], [7, 3, 1, "", "get_string_argument"], [7, 1, 1, "", "heap_allocator"], [7, 3, 1, "", "initialize_context"], [7, 3, 1, "", "is_halt_instruction"], [7, 3, 1, "", "is_heap_ptr"], [7, 3, 1, "", "is_memory_symbolic"], [7, 3, 1, "", "is_path_predicate_updated"], [7, 3, 1, "", "is_register_symbolic"], [7, 3, 1, "", "is_syscall"], [7, 2, 1, "", "last_branch_constraint"], [7, 1, 1, "", "memory"], [7, 2, 1, "", "minus_one"], [7, 3, 1, "", "pack_integer"], [7, 2, 1, "", "path_predicate_size"], [7, 3, 1, "", "pop_stack_value"], [7, 3, 1, "", "process_instruction"], [7, 2, 1, "", "program_counter_register"], [7, 2, 1, "", "ptr_bit_size"], [7, 2, 1, "", "ptr_size"], [7, 3, 1, "", "push_constraint"], [7, 3, 1, "", "push_stack_value"], [7, 3, 1, "", "read_register"], [7, 3, 1, "", "read_symbolic_memory_byte"], [7, 3, 1, "", "read_symbolic_memory_bytes"], [7, 3, 1, "", "read_symbolic_memory_int"], [7, 3, 1, "", "read_symbolic_register"], [7, 3, 1, "", "register_triton_callback"], [7, 2, 1, "", "registers"], [7, 2, 1, "", "return_register"], [7, 3, 1, "", "set_solver"], [7, 3, 1, "", "set_solver_timeout"], [7, 3, 1, "", "set_thumb"], [7, 3, 1, "", "set_triton_mode"], [7, 3, 1, "", "solve"], [7, 3, 1, "", "solve_enumerate_expression"], [7, 3, 1, "", "solve_no_pp"], [7, 3, 1, "", "spawn_new_thread"], [7, 2, 1, "", "stack_pointer_register"], [7, 3, 1, "", "switch_thread"], [7, 3, 1, "", "symbolize_memory_byte"], [7, 3, 1, "", "symbolize_memory_bytes"], [7, 3, 1, "", "symbolize_register"], [7, 2, 1, "", "threads"], [7, 1, 1, "", "tt_ctx"], [7, 3, 1, "", "unpack_integer"], [7, 3, 1, "", "write_argument_value"], [7, 3, 1, "", "write_register"], [7, 3, 1, "", "write_stack_value"], [7, 3, 1, "", "write_symbolic_memory_byte"], [7, 3, 1, "", "write_symbolic_memory_int"], [7, 3, 1, "", "write_symbolic_register"]], "tritondse.Program": [[6, 1, 1, "", "BASE_STACK"], [6, 1, 1, "", "END_STACK"], [6, 1, 1, "", "EXTERN_SYM_BASE"], [6, 1, 1, "", "EXTERN_SYM_SIZE"], [6, 2, 1, "", "arch_mode"], [6, 2, 1, "", "architecture"], [6, 2, 1, "", "cpustate"], [6, 2, 1, "", "endianness"], [6, 2, 1, "", "entry_point"], [6, 3, 1, "", "find_function_addr"], [6, 2, 1, "", "format"], [6, 3, 1, "", "imported_functions_relocations"], [6, 3, 1, "", "imported_variable_symbols_relocations"], [6, 3, 1, "", "memory_segments"], [6, 2, 1, "", "name"], [6, 1, 1, "", "path"], [6, 2, 1, "", "platform"], [6, 2, 1, "", "relocation_enum"]], "tritondse.QuokkaProgram": [[6, 2, 1, "", "architecture"], [6, 2, 1, "", "call_graph"], [6, 2, 1, "", "capstone"], [6, 3, 1, "", "clear"], [6, 3, 1, "", "copy"], [6, 2, 1, "", "endianness"], [6, 2, 1, "", "entry_point"], [6, 3, 1, "", "find_function_addr"], [6, 3, 1, "", "find_function_from_addr"], [6, 2, 1, "", "format"], [6, 3, 1, "", "from_binary"], [6, 3, 1, "", "fromkeys"], [6, 2, 1, "", "func_chunk_index"], [6, 3, 1, "", "get"], [6, 3, 1, "", "get_call_graph"], [6, 3, 1, "", "get_caller_instructions"], [6, 3, 1, "", "get_chunk"], [6, 3, 1, "", "get_data"], [6, 3, 1, "", "get_first_function_by_chunk"], [6, 3, 1, "", "get_function"], [6, 3, 1, "", "get_function_by_chunk"], [6, 3, 1, "", "get_instruction"], [6, 3, 1, "", "get_segment"], [6, 3, 1, "", "get_slice"], [6, 2, 1, "", "hash"], [6, 3, 1, "", "imported_functions_relocations"], [6, 3, 1, "", "imported_variable_symbols_relocations"], [6, 3, 1, "", "items"], [6, 3, 1, "", "iter_chunk"], [6, 3, 1, "", "keys"], [6, 1, 1, "", "logger"], [6, 3, 1, "", "memory_segments"], [6, 3, 1, "", "merge"], [6, 2, 1, "", "name"], [6, 2, 1, "", "path"], [6, 2, 1, "", "platform"], [6, 3, 1, "", "pop"], [6, 3, 1, "", "popitem"], [6, 2, 1, "", "pypcode"], [6, 3, 1, "", "read_bytes"], [6, 2, 1, "", "relocation_enum"], [6, 2, 1, "", "segments"], [6, 3, 1, "", "setdefault"], [6, 2, 1, "", "strings"], [6, 2, 1, "", "structures"], [6, 3, 1, "", "update"], [6, 3, 1, "", "values"]], "tritondse.RawBinaryLoader": [[6, 2, 1, "", "arch_mode"], [6, 2, 1, "", "architecture"], [6, 2, 1, "", "cpustate"], [6, 2, 1, "", "endianness"], [6, 2, 1, "", "entry_point"], [6, 3, 1, "", "find_function_addr"], [6, 3, 1, "", "imported_functions_relocations"], [6, 3, 1, "", "imported_variable_symbols_relocations"], [6, 3, 1, "", "memory_segments"], [6, 2, 1, "", "name"], [6, 2, 1, "", "platform"]], "tritondse.SymbolicExecutor": [[4, 3, 1, "", "abort"], [4, 2, 1, "", "callback_manager"], [4, 1, 1, "", "cbm"], [4, 1, 1, "", "config"], [4, 1, 1, "", "coverage"], [4, 1, 1, "", "current_pc"], [4, 3, 1, "", "emulate"], [4, 3, 1, "", "emulation_deinit"], [4, 3, 1, "", "emulation_init"], [4, 1, 1, "", "end_time"], [4, 3, 1, "", "enqueue_seed"], [4, 2, 1, "", "execution_time"], [4, 2, 1, "", "exitcode"], [4, 3, 1, "", "inject_symbolic_argv_memory"], [4, 3, 1, "", "inject_symbolic_file_memory"], [4, 3, 1, "", "inject_symbolic_file_register"], [4, 3, 1, "", "inject_symbolic_raw_input"], [4, 3, 1, "", "inject_symbolic_variable_memory"], [4, 3, 1, "", "inject_symbolic_variable_register"], [4, 3, 1, "", "is_seed_injected"], [4, 3, 1, "", "load"], [4, 3, 1, "", "load_process"], [4, 1, 1, "", "loader"], [4, 3, 1, "", "mem_usage_str"], [4, 3, 1, "", "mk_new_seed_from_model"], [4, 2, 1, "", "pending_seeds"], [4, 1, 1, "", "previous_pc"], [4, 1, 1, "", "pstate"], [4, 3, 1, "", "run"], [4, 1, 1, "", "seed"], [4, 3, 1, "", "skip_instruction"], [4, 1, 1, "", "start_time"], [4, 3, 1, "", "step"], [4, 3, 1, "", "stop_exploration"], [4, 1, 1, "", "symbolic_seed"], [4, 1, 1, "", "trace_offset"], [4, 1, 1, "", "uid"], [4, 1, 1, "", "workspace"]], "tritondse.SymbolicExplorator": [[5, 3, 1, "", "add_input_seed"], [5, 2, 1, "", "callback_manager"], [5, 1, 1, "", "cbm"], [5, 1, 1, "", "config"], [5, 1, 1, "", "coverage"], [5, 1, 1, "", "current_executor"], [5, 2, 1, "", "execution_count"], [5, 3, 1, "", "explore"], [5, 1, 1, "", "loader"], [5, 3, 1, "", "post_exploration"], [5, 1, 1, "", "seeds_manager"], [5, 1, 1, "", "status"], [5, 3, 1, "", "step"], [5, 3, 1, "", "stop_exploration"], [5, 3, 1, "", "terminate_exploration"], [5, 2, 1, "", "total_emulation_time"], [5, 1, 1, "", "ts"], [5, 1, 1, "", "workspace"]], "tritondse.arch": [[7, 0, 1, "", "CpuState"]], "tritondse.arch.CpuState": [[7, 2, 1, "", "base_pointer"], [7, 2, 1, "", "program_counter"], [7, 2, 1, "", "stack_pointer"]], "tritondse.callbacks": [[0, 5, 1, "", "AddrCallback"], [0, 5, 1, "", "BranchCoveredCallback"], [0, 0, 1, "", "CallbackManager"], [0, 0, 1, "", "CbPos"], [0, 0, 1, "", "CbType"], [0, 5, 1, "", "ExplorationStepCallback"], [0, 5, 1, "", "InstrCallback"], [0, 5, 1, "", "MemReadCallback"], [0, 5, 1, "", "MemWriteCallback"], [0, 5, 1, "", "MemoryViolationCallback"], [0, 5, 1, "", "MnemonicCallback"], [0, 5, 1, "", "NewInputCallback"], [0, 5, 1, "", "OpcodeCallback"], [0, 0, 1, "", "ProbeInterface"], [0, 5, 1, "", "RegReadCallback"], [0, 5, 1, "", "RegWriteCallback"], [0, 5, 1, "", "RtnCallback"], [0, 5, 1, "", "SymExCallback"], [0, 5, 1, "", "SymExSolvingCallback"], [0, 5, 1, "", "ThreadCallback"]], "tritondse.callbacks.CallbackManager": [[0, 3, 1, "", "bind_to"], [0, 3, 1, "", "fork"], [0, 3, 1, "", "get_address_callbacks"], [0, 3, 1, "", "get_context_switch_callback"], [0, 3, 1, "", "get_execution_callbacks"], [0, 3, 1, "", "get_exploration_step_callbacks"], [0, 3, 1, "", "get_imported_routine_callbacks"], [0, 3, 1, "", "get_instruction_callbacks"], [0, 3, 1, "", "get_memory_violation_callbacks"], [0, 3, 1, "", "get_mnemonic_callbacks"], [0, 3, 1, "", "get_new_input_callback"], [0, 3, 1, "", "get_on_branch_covered_callback"], [0, 3, 1, "", "get_on_solving_callback"], [0, 3, 1, "", "get_opcode_callbacks"], [0, 3, 1, "", "is_binded"], [0, 3, 1, "", "is_empty"], [0, 3, 1, "", "register_addr_callback"], [0, 3, 1, "", "register_exploration_step_callback"], [0, 3, 1, "", "register_function_callback"], [0, 3, 1, "", "register_instruction_callback"], [0, 3, 1, "", "register_memory_read_callback"], [0, 3, 1, "", "register_memory_violation_callback"], [0, 3, 1, "", "register_memory_write_callback"], [0, 3, 1, "", "register_mnemonic_callback"], [0, 3, 1, "", "register_new_input_callback"], [0, 3, 1, "", "register_on_branch_covered_callback"], [0, 3, 1, "", "register_on_solving_callback"], [0, 3, 1, "", "register_opcode_callback"], [0, 3, 1, "", "register_post_addr_callback"], [0, 3, 1, "", "register_post_execution_callback"], [0, 3, 1, "", "register_post_imported_routine_callback"], [0, 3, 1, "", "register_post_instruction_callback"], [0, 3, 1, "", "register_post_mnemonic_callback"], [0, 3, 1, "", "register_post_opcode_callback"], [0, 3, 1, "", "register_pre_addr_callback"], [0, 3, 1, "", "register_pre_execution_callback"], [0, 3, 1, "", "register_pre_imported_routine_callback"], [0, 3, 1, "", "register_pre_instruction_callback"], [0, 3, 1, "", "register_pre_mnemonic_callback"], [0, 3, 1, "", "register_pre_opcode_callback"], [0, 3, 1, "", "register_probe"], [0, 3, 1, "", "register_register_read_callback"], [0, 3, 1, "", "register_register_write_callback"], [0, 3, 1, "", "register_thread_context_switch_callback"], [0, 3, 1, "", "reset"], [0, 3, 1, "", "unbind"], [0, 3, 1, "", "unregister_callback"]], "tritondse.callbacks.CbPos": [[0, 1, 1, "", "AFTER"], [0, 1, 1, "", "BEFORE"]], "tritondse.callbacks.CbType": [[0, 1, 1, "", "BRANCH_COV"], [0, 1, 1, "", "CTX_SWITCH"], [0, 1, 1, "", "EXPLORE_STEP"], [0, 1, 1, "", "MEMORY_READ"], [0, 1, 1, "", "MEMORY_WRITE"], [0, 1, 1, "", "MEM_VIOLATION"], [0, 1, 1, "", "NEW_INPUT"], [0, 1, 1, "", "POST_ADDR"], [0, 1, 1, "", "POST_EXEC"], [0, 1, 1, "", "POST_INST"], [0, 1, 1, "", "POST_MNEM"], [0, 1, 1, "", "POST_OPCODE"], [0, 1, 1, "", "POST_RTN"], [0, 1, 1, "", "PRE_ADDR"], [0, 1, 1, "", "PRE_EXEC"], [0, 1, 1, "", "PRE_INST"], [0, 1, 1, "", "PRE_MNEM"], [0, 1, 1, "", "PRE_OPCODE"], [0, 1, 1, "", "PRE_RTN"], [0, 1, 1, "", "REG_READ"], [0, 1, 1, "", "REG_WRITE"], [0, 1, 1, "", "SYMEX_SOLVING"]], "tritondse.callbacks.ProbeInterface": [[0, 2, 1, "", "callbacks"]], "tritondse.coverage": [[2, 7, 1, "", "BranchSolvingStrategy"], [2, 5, 1, "", "CovItem"], [2, 0, 1, "", "CoverageSingleRun"], [2, 4, 1, "", "CoverageStrategy"], [2, 0, 1, "", "GlobalCoverage"]], "tritondse.coverage.BranchSolvingStrategy": [[2, 1, 1, "", "ALL_NOT_COVERED"], [2, 1, 1, "", "COVER_SYM_DYNJUMP"], [2, 1, 1, "", "COVER_SYM_READ"], [2, 1, 1, "", "COVER_SYM_WRITE"], [2, 1, 1, "", "FIRST_LAST_NOT_COVERED"], [2, 1, 1, "", "MANUAL"], [2, 1, 1, "", "SOUND_MEM_ACCESS"], [2, 1, 1, "", "TIMEOUT_ALWAYS"], [2, 1, 1, "", "TIMEOUT_ONCE"], [2, 1, 1, "", "UNSAT_ONCE"], [2, 3, 1, "", "as_integer_ratio"], [2, 3, 1, "", "bit_count"], [2, 3, 1, "", "bit_length"], [2, 3, 1, "", "conjugate"], [2, 1, 1, "", "denominator"], [2, 3, 1, "", "from_bytes"], [2, 1, 1, "", "imag"], [2, 1, 1, "", "numerator"], [2, 1, 1, "", "real"], [2, 3, 1, "", "to_bytes"]], "tritondse.coverage.CoverageSingleRun": [[2, 3, 1, "", "add_covered_address"], [2, 3, 1, "", "add_covered_branch"], [2, 3, 1, "", "add_covered_dynamic_branch"], [2, 1, 1, "", "covered_instructions"], [2, 1, 1, "", "covered_items"], [2, 3, 1, "", "difference"], [2, 3, 1, "", "is_covered"], [2, 3, 1, "", "post_execution"], [2, 3, 1, "", "pp_item"], [2, 1, 1, "", "strategy"], [2, 2, 1, "", "total_instruction_executed"], [2, 2, 1, "", "unique_covitem_covered"], [2, 2, 1, "", "unique_instruction_covered"]], "tritondse.coverage.CoverageStrategy": [[2, 1, 1, "", "BLOCK"], [2, 1, 1, "", "EDGE"], [2, 1, 1, "", "PATH"], [2, 1, 1, "", "PREFIXED_EDGE"], [2, 3, 1, "", "capitalize"], [2, 3, 1, "", "casefold"], [2, 3, 1, "", "center"], [2, 3, 1, "", "count"], [2, 3, 1, "", "encode"], [2, 3, 1, "", "endswith"], [2, 3, 1, "", "expandtabs"], [2, 3, 1, "", "find"], [2, 3, 1, "", "format"], [2, 3, 1, "", "format_map"], [2, 3, 1, "", "index"], [2, 3, 1, "", "isalnum"], [2, 3, 1, "", "isalpha"], [2, 3, 1, "", "isascii"], [2, 3, 1, "", "isdecimal"], [2, 3, 1, "", "isdigit"], [2, 3, 1, "", "isidentifier"], [2, 3, 1, "", "islower"], [2, 3, 1, "", "isnumeric"], [2, 3, 1, "", "isprintable"], [2, 3, 1, "", "isspace"], [2, 3, 1, "", "istitle"], [2, 3, 1, "", "isupper"], [2, 3, 1, "", "join"], [2, 3, 1, "", "ljust"], [2, 3, 1, "", "lower"], [2, 3, 1, "", "lstrip"], [2, 3, 1, "", "maketrans"], [2, 3, 1, "", "partition"], [2, 3, 1, "", "removeprefix"], [2, 3, 1, "", "removesuffix"], [2, 3, 1, "", "replace"], [2, 3, 1, "", "rfind"], [2, 3, 1, "", "rindex"], [2, 3, 1, "", "rjust"], [2, 3, 1, "", "rpartition"], [2, 3, 1, "", "rsplit"], [2, 3, 1, "", "rstrip"], [2, 3, 1, "", "split"], [2, 3, 1, "", "splitlines"], [2, 3, 1, "", "startswith"], [2, 3, 1, "", "strip"], [2, 3, 1, "", "swapcase"], [2, 3, 1, "", "title"], [2, 3, 1, "", "translate"], [2, 3, 1, "", "upper"], [2, 3, 1, "", "zfill"]], "tritondse.coverage.GlobalCoverage": [[2, 1, 1, "", "COVERAGE_FILE"], [2, 3, 1, "", "add_covered_address"], [2, 3, 1, "", "add_covered_branch"], [2, 3, 1, "", "add_covered_dynamic_branch"], [2, 3, 1, "", "can_cover_symbolic_pointers"], [2, 3, 1, "", "can_improve_coverage"], [2, 3, 1, "", "clone"], [2, 1, 1, "", "covered_instructions"], [2, 1, 1, "", "covered_items"], [2, 1, 1, "", "covered_symbolic_pointers"], [2, 3, 1, "", "difference"], [2, 3, 1, "", "from_file"], [2, 3, 1, "", "improve_coverage"], [2, 3, 1, "", "is_covered"], [2, 3, 1, "", "iter_new_paths"], [2, 3, 1, "", "merge"], [2, 3, 1, "", "new_items_to_cover"], [2, 1, 1, "", "not_covered_items"], [2, 1, 1, "", "pending_coverage"], [2, 3, 1, "", "post_execution"], [2, 3, 1, "", "post_exploration"], [2, 3, 1, "", "pp_item"], [2, 1, 1, "", "strategy"], [2, 3, 1, "", "to_file"], [2, 2, 1, "", "total_instruction_executed"], [2, 1, 1, "", "uncoverable_items"], [2, 2, 1, "", "unique_covitem_covered"], [2, 2, 1, "", "unique_instruction_covered"]], "tritondse.exception": [[3, 8, 1, "", "AbortExecutionException"], [3, 8, 1, "", "AllocatorException"], [3, 8, 1, "", "ProbeException"], [3, 8, 1, "", "SkipInstructionException"], [3, 8, 1, "", "StopExplorationException"]], "tritondse.heap_allocator": [[7, 0, 1, "", "AllocatorException"], [7, 0, 1, "", "HeapAllocator"]], "tritondse.heap_allocator.HeapAllocator": [[7, 3, 1, "", "alloc"], [7, 3, 1, "", "free"], [7, 3, 1, "", "is_ptr_allocated"], [7, 3, 1, "", "is_ptr_freed"]], "tritondse.memory": [[7, 0, 1, "", "Memory"]], "tritondse.memory.Memory": [[7, 3, 1, "", "callbacks_enabled"], [7, 1, 1, "", "ctx"], [7, 3, 1, "", "disable_segmentation"], [7, 3, 1, "", "enable_segmentation"], [7, 3, 1, "", "find_map"], [7, 3, 1, "", "get_map"], [7, 3, 1, "", "get_maps"], [7, 3, 1, "", "has_ever_been_written"], [7, 3, 1, "", "is_mapped"], [7, 3, 1, "", "map"], [7, 3, 1, "", "map_from_name"], [7, 3, 1, "", "mprotect"], [7, 3, 1, "", "read"], [7, 3, 1, "", "read_char"], [7, 3, 1, "", "read_dword"], [7, 3, 1, "", "read_int"], [7, 3, 1, "", "read_long"], [7, 3, 1, "", "read_long_long"], [7, 3, 1, "", "read_ptr"], [7, 3, 1, "", "read_qword"], [7, 3, 1, "", "read_sint"], [7, 3, 1, "", "read_string"], [7, 3, 1, "", "read_uchar"], [7, 3, 1, "", "read_uint"], [7, 3, 1, "", "read_ulong"], [7, 3, 1, "", "read_ulong_long"], [7, 3, 1, "", "read_word"], [7, 2, 1, "", "segmentation_enabled"], [7, 3, 1, "", "set_endianness"], [7, 3, 1, "", "set_segmentation"], [7, 3, 1, "", "unmap"], [7, 3, 1, "", "without_segmentation"], [7, 3, 1, "", "write"], [7, 3, 1, "", "write_char"], [7, 3, 1, "", "write_dword"], [7, 3, 1, "", "write_int"], [7, 3, 1, "", "write_long"], [7, 3, 1, "", "write_long_long"], [7, 3, 1, "", "write_ptr"], [7, 3, 1, "", "write_qword"], [7, 3, 1, "", "write_word"]], "tritondse.routines": [[13, 9, 1, "", "rtn___fprintf_chk"], [13, 9, 1, "", "rtn__setjmp"], [13, 9, 1, "", "rtn_abort"], [13, 9, 1, "", "rtn_assert_fail"], [13, 9, 1, "", "rtn_atexit"], [13, 9, 1, "", "rtn_atoi"], [13, 9, 1, "", "rtn_calloc"], [13, 9, 1, "", "rtn_clock_gettime"], [13, 9, 1, "", "rtn_ctype_b_loc"], [13, 9, 1, "", "rtn_ctype_toupper_loc"], [13, 9, 1, "", "rtn_errno_location"], [13, 9, 1, "", "rtn_exit"], [13, 9, 1, "", "rtn_fclose"], [13, 9, 1, "", "rtn_fgets"], [13, 9, 1, "", "rtn_fopen"], [13, 9, 1, "", "rtn_fprintf"], [13, 9, 1, "", "rtn_fputc"], [13, 9, 1, "", "rtn_fputs"], [13, 9, 1, "", "rtn_fread"], [13, 9, 1, "", "rtn_free"], [13, 9, 1, "", "rtn_fseek"], [13, 9, 1, "", "rtn_ftell"], [13, 9, 1, "", "rtn_fwrite"], [13, 9, 1, "", "rtn_getchar"], [13, 9, 1, "", "rtn_getenv"], [13, 9, 1, "", "rtn_gettimeofday"], [13, 9, 1, "", "rtn_isspace"], [13, 9, 1, "", "rtn_libc_start_main"], [13, 9, 1, "", "rtn_longjmp"], [13, 9, 1, "", "rtn_malloc"], [13, 9, 1, "", "rtn_memcmp"], [13, 9, 1, "", "rtn_memcpy"], [13, 9, 1, "", "rtn_memmem"], [13, 9, 1, "", "rtn_memmove"], [13, 9, 1, "", "rtn_mempcpy"], [13, 9, 1, "", "rtn_memset"], [13, 9, 1, "", "rtn_open"], [13, 9, 1, "", "rtn_printf"], [13, 9, 1, "", "rtn_pthread_create"], [13, 9, 1, "", "rtn_pthread_exit"], [13, 9, 1, "", "rtn_pthread_join"], [13, 9, 1, "", "rtn_pthread_mutex_destroy"], [13, 9, 1, "", "rtn_pthread_mutex_init"], [13, 9, 1, "", "rtn_pthread_mutex_lock"], [13, 9, 1, "", "rtn_pthread_mutex_unlock"], [13, 9, 1, "", "rtn_puts"], [13, 9, 1, "", "rtn_rand"], [13, 9, 1, "", "rtn_read"], [13, 9, 1, "", "rtn_realloc"], [13, 9, 1, "", "rtn_sem_destroy"], [13, 9, 1, "", "rtn_sem_getvalue"], [13, 9, 1, "", "rtn_sem_init"], [13, 9, 1, "", "rtn_sem_post"], [13, 9, 1, "", "rtn_sem_timedwait"], [13, 9, 1, "", "rtn_sem_trywait"], [13, 9, 1, "", "rtn_sem_wait"], [13, 9, 1, "", "rtn_setlocale"], [13, 9, 1, "", "rtn_sleep"], [13, 9, 1, "", "rtn_sprintf"], [13, 9, 1, "", "rtn_stack_chk_fail"], [13, 9, 1, "", "rtn_strcasecmp"], [13, 9, 1, "", "rtn_strchr"], [13, 9, 1, "", "rtn_strcmp"], [13, 9, 1, "", "rtn_strcpy"], [13, 9, 1, "", "rtn_strdup"], [13, 9, 1, "", "rtn_strerror"], [13, 9, 1, "", "rtn_strlen"], [13, 9, 1, "", "rtn_strncasecmp"], [13, 9, 1, "", "rtn_strncmp"], [13, 9, 1, "", "rtn_strncpy"], [13, 9, 1, "", "rtn_strtok_r"], [13, 9, 1, "", "rtn_strtoul"], [13, 9, 1, "", "rtn_write"], [13, 9, 1, "", "rtn_xstat"]], "tritondse.sanitizers": [[8, 0, 1, "", "FormatStringSanitizer"], [8, 0, 1, "", "IntegerOverflowSanitizer"], [8, 0, 1, "", "NullDerefSanitizer"], [8, 0, 1, "", "UAFSanitizer"]], "tritondse.sanitizers.FormatStringSanitizer": [[8, 2, 1, "", "callbacks"], [8, 3, 1, "", "check"]], "tritondse.sanitizers.IntegerOverflowSanitizer": [[8, 2, 1, "", "callbacks"], [8, 3, 1, "", "check"]], "tritondse.sanitizers.NullDerefSanitizer": [[8, 2, 1, "", "callbacks"], [8, 3, 1, "", "check"]], "tritondse.sanitizers.UAFSanitizer": [[8, 2, 1, "", "callbacks"], [8, 3, 1, "", "check"]], "tritondse.seed": [[9, 0, 1, "", "CompositeData"], [9, 0, 1, "", "Seed"], [9, 4, 1, "", "SeedFormat"], [9, 4, 1, "", "SeedStatus"]], "tritondse.seed.CompositeData": [[9, 1, 1, "", "__annotations__"], [9, 3, 1, "", "__bytes__"], [9, 1, 1, "", "__dataclass_fields__"], [9, 1, 1, "", "__dataclass_params__"], [9, 3, 1, "", "__delattr__"], [9, 1, 1, "", "__dict__"], [9, 3, 1, "", "__eq__"], [9, 3, 1, "", "__hash__"], [9, 3, 1, "", "__init__"], [9, 1, 1, "", "__match_args__"], [9, 1, 1, "", "__module__"], [9, 3, 1, "", "__repr__"], [9, 3, 1, "", "__setattr__"], [9, 1, 1, "", "__weakref__"], [9, 1, 1, "", "argv"], [9, 1, 1, "", "files"], [9, 3, 1, "", "from_dict"], [9, 1, 1, "", "variables"]], "tritondse.seed.Seed": [[9, 3, 1, "", "__bytes__"], [9, 1, 1, "", "__dict__"], [9, 3, 1, "", "__eq__"], [9, 3, 1, "", "__hash__"], [9, 3, 1, "", "__init__"], [9, 3, 1, "", "__len__"], [9, 1, 1, "", "__module__"], [9, 1, 1, "", "__weakref__"], [9, 3, 1, "", "bytes"], [9, 2, 1, "", "filename"], [9, 2, 1, "", "format"], [9, 3, 1, "", "from_bytes"], [9, 3, 1, "", "from_file"], [9, 3, 1, "", "get_file_input"], [9, 2, 1, "", "hash"], [9, 3, 1, "", "is_bootstrap_seed"], [9, 3, 1, "", "is_composite"], [9, 3, 1, "", "is_file_defined"], [9, 3, 1, "", "is_fresh"], [9, 3, 1, "", "is_raw"], [9, 3, 1, "", "is_status_set"], [9, 2, 1, "", "size"], [9, 2, 1, "", "status"]], "tritondse.seed.SeedFormat": [[9, 1, 1, "", "COMPOSITE"], [9, 1, 1, "", "RAW"], [9, 1, 1, "", "__module__"]], "tritondse.seed.SeedStatus": [[9, 1, 1, "", "CRASH"], [9, 1, 1, "", "FAIL"], [9, 1, 1, "", "HANG"], [9, 1, 1, "", "NEW"], [9, 1, 1, "", "OK_DONE"], [9, 1, 1, "", "__module__"]], "tritondse.seed_manager": [[5, 0, 1, "", "SeedManager"]], "tritondse.seed_manager.SeedManager": [[5, 3, 1, "", "add_new_seed"], [5, 3, 1, "", "add_seed_queue"], [5, 3, 1, "", "archive_seed"], [5, 3, 1, "", "drop_seed"], [5, 3, 1, "", "is_new_seed"], [5, 3, 1, "", "pick_seed"], [5, 3, 1, "", "post_execution"], [5, 3, 1, "", "post_exploration"], [5, 3, 1, "", "pp_meta_filename"], [5, 3, 1, "", "seeds_available"], [5, 2, 1, "", "total_solving_time"]], "tritondse.seed_scheduler": [[14, 0, 1, "", "FreshSeedPrioritizerWorklist"], [14, 0, 1, "", "SeedScheduler"], [14, 0, 1, "", "WorklistAddressToSet"], [14, 0, 1, "", "WorklistRand"]], "tritondse.seed_scheduler.FreshSeedPrioritizerWorklist": [[14, 3, 1, "", "__len__"], [14, 3, 1, "", "add"], [14, 3, 1, "", "can_solve_models"], [14, 3, 1, "", "has_seed_remaining"], [14, 3, 1, "", "pick"], [14, 3, 1, "", "post_execution"], [14, 3, 1, "", "post_exploration"], [14, 3, 1, "", "update_worklist"]], "tritondse.seed_scheduler.SeedScheduler": [[14, 3, 1, "", "add"], [14, 3, 1, "", "can_solve_models"], [14, 3, 1, "", "has_seed_remaining"], [14, 3, 1, "", "pick"], [14, 3, 1, "", "post_execution"], [14, 3, 1, "", "post_exploration"], [14, 3, 1, "", "update_worklist"]], "tritondse.seed_scheduler.WorklistAddressToSet": [[14, 3, 1, "", "__len__"], [14, 3, 1, "", "add"], [14, 3, 1, "", "can_solve_models"], [14, 3, 1, "", "has_seed_remaining"], [14, 3, 1, "", "pick"], [14, 3, 1, "", "post_execution"], [14, 3, 1, "", "post_exploration"], [14, 3, 1, "", "update_worklist"]], "tritondse.seed_scheduler.WorklistRand": [[14, 3, 1, "", "__len__"], [14, 3, 1, "", "add"], [14, 3, 1, "", "can_solve_models"], [14, 3, 1, "", "has_seed_remaining"], [14, 3, 1, "", "pick"], [14, 3, 1, "", "post_execution"], [14, 3, 1, "", "post_exploration"], [14, 3, 1, "", "update_worklist"]], "tritondse.thread_context": [[7, 0, 1, "", "ThreadContext"]], "tritondse.thread_context.ThreadContext": [[7, 3, 1, "", "cancel_join"], [7, 3, 1, "", "is_dead"], [7, 3, 1, "", "is_main_thread"], [7, 3, 1, "", "is_running"], [7, 3, 1, "", "is_waiting_to_join"], [7, 3, 1, "", "join_thread"], [7, 3, 1, "", "kill"], [7, 3, 1, "", "restore"], [7, 3, 1, "", "save"]], "tritondse.trace": [[10, 0, 1, "", "QBDITrace"], [10, 0, 1, "", "Trace"], [10, 8, 1, "", "TraceException"], [10, 0, 1, "", "TritonTrace"]], "tritondse.trace.QBDITrace": [[10, 1, 1, "", "QBDI_SCRIPT_FILEPATH"], [10, 2, 1, "", "coverage"], [10, 3, 1, "", "from_file"], [10, 3, 1, "", "run"], [10, 2, 1, "", "trace"]], "tritondse.trace.Trace": [[10, 2, 1, "", "coverage"], [10, 3, 1, "", "from_file"], [10, 3, 1, "", "get_coverage"], [10, 3, 1, "", "run"], [10, 2, 1, "", "strategy"], [10, 2, 1, "", "trace"]], "tritondse.trace.TritonTrace": [[10, 2, 1, "", "coverage"], [10, 3, 1, "", "from_file"], [10, 3, 1, "", "run"]], "tritondse.types": [[11, 1, 1, "", "Addr"], [11, 7, 1, "", "ArchMode"], [11, 4, 1, "", "Architecture"], [11, 0, 1, "", "AstNode"], [11, 1, 1, "", "BitSize"], [11, 1, 1, "", "ByteSize"], [11, 5, 1, "", "Edge"], [11, 4, 1, "", "Endian"], [11, 0, 1, "", "Expression"], [11, 0, 1, "", "FileDesc"], [11, 4, 1, "", "Format"], [11, 1, 1, "", "Input"], [11, 0, 1, "", "Model"], [11, 0, 1, "", "PathBranch"], [11, 0, 1, "", "PathConstraint"], [11, 1, 1, "", "PathHash"], [11, 5, 1, "", "PathLike"], [11, 7, 1, "", "Perm"], [11, 4, 1, "", "Platform"], [11, 0, 1, "", "Register"], [11, 0, 1, "", "Registers"], [11, 4, 1, "", "SmtSolver"], [11, 4, 1, "", "SolverStatus"], [11, 4, 1, "", "SymExType"], [11, 0, 1, "", "SymbolicVariable"], [11, 1, 1, "", "rAddr"]], "tritondse.types.ArchMode": [[11, 1, 1, "", "THUMB"]], "tritondse.types.Architecture": [[11, 1, 1, "", "AARCH64"], [11, 1, 1, "", "ARM32"], [11, 1, 1, "", "X86"], [11, 1, 1, "", "X86_64"]], "tritondse.types.Endian": [[11, 1, 1, "", "BIG"], [11, 1, 1, "", "LITTLE"]], "tritondse.types.FileDesc": [[11, 1, 1, "", "fd"], [11, 3, 1, "", "fgets"], [11, 1, 1, "", "id"], [11, 3, 1, "", "is_input_fd"], [11, 3, 1, "", "is_real_fd"], [11, 1, 1, "", "name"], [11, 2, 1, "", "offset"], [11, 3, 1, "", "read"]], "tritondse.types.Format": [[11, 1, 1, "", "ELF"], [11, 1, 1, "", "MACHO"], [11, 1, 1, "", "PE"]], "tritondse.types.PathBranch": [[11, 1, 1, "", "constraint"], [11, 1, 1, "", "dstAddr"], [11, 1, 1, "", "isTaken"], [11, 1, 1, "", "srcAddr"]], "tritondse.types.Perm": [[11, 1, 1, "", "R"], [11, 1, 1, "", "W"], [11, 1, 1, "", "X"]], "tritondse.types.Platform": [[11, 1, 1, "", "ANDROID"], [11, 1, 1, "", "IOS"], [11, 1, 1, "", "LINUX"], [11, 1, 1, "", "MACOS"], [11, 1, 1, "", "WINDOWS"]], "tritondse.types.SmtSolver": [[11, 1, 1, "", "BITWUZLA"], [11, 1, 1, "", "Z3"]], "tritondse.types.SolverStatus": [[11, 1, 1, "", "SAT"], [11, 1, 1, "", "TIMEOUT"], [11, 1, 1, "", "UNKNOWN"], [11, 1, 1, "", "UNSAT"]], "tritondse.types.SymExType": [[11, 1, 1, "", "CONDITIONAL_JMP"], [11, 1, 1, "", "DYNAMIC_JMP"], [11, 1, 1, "", "SYMBOLIC_READ"], [11, 1, 1, "", "SYMBOLIC_WRITE"]], "tritondse.workspace": [[12, 0, 1, "", "Workspace"]], "tritondse.workspace.Workspace": [[12, 1, 1, "", "BIN_DIR"], [12, 1, 1, "", "CORPUS_DIR"], [12, 1, 1, "", "CRASH_DIR"], [12, 1, 1, "", "DEFAULT_WORKSPACE"], [12, 1, 1, "", "FAIL_DIR"], [12, 1, 1, "", "HANG_DIR"], [12, 1, 1, "", "LOG_FILE"], [12, 1, 1, "", "METADATA_DIR"], [12, 1, 1, "", "WORKLIST_DIR"], [12, 3, 1, "", "get_binary_directory"], [12, 3, 1, "", "get_metadata_file"], [12, 3, 1, "", "get_metadata_file_path"], [12, 3, 1, "", "initialize"], [12, 3, 1, "", "iter_corpus"], [12, 3, 1, "", "iter_crashes"], [12, 3, 1, "", "iter_fails"], [12, 3, 1, "", "iter_hangs"], [12, 3, 1, "", "iter_worklist"], [12, 2, 1, "", "logfile_path"], [12, 1, 1, "", "root_dir"], [12, 3, 1, "", "save_file"], [12, 3, 1, "", "save_metadata_file"], [12, 3, 1, "", "save_seed"], [12, 3, 1, "", "update_seed_location"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "enum", "Python enum"], "5": ["py", "data", "Python data"], "6": ["py", "module", "Python module"], "7": ["py", "flag", "Python flag"], "8": ["py", "exception", "Python exception"], "9": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:property", "3": "py:method", "4": "py:enum", "5": "py:data", "6": "py:module", "7": "py:flag", "8": "py:exception", "9": "py:function"}, "terms": {"": [1, 2, 4, 6, 7, 8, 9, 18, 19, 21, 22, 23], "0": [1, 2, 4, 5, 6, 7, 8, 9, 11, 19, 20, 21, 22, 23], "0000": 2, "00000064": 22, "00001": 1, "0001": [1, 7], "0063e1d416400b0a0401dc471be64a8f": 19, "007f": 2, "05": 1, "0b100101": 2, "0b1101": 2, "0x": [19, 23], "0x0": 7, "0x0400597": 19, "0x08000000": 17, "0x1000000": 20, "0x12345678": 18, "0x14": 19, "0x18": 19, "0x20": 19, "0x200ab7": 19, "0x200bda": 19, "0x200be2": 19, "0x400000": 23, "0x400430": 19, "0x400440": 19, "0x400460": [19, 23], "0x400462": 19, "0x400465": 19, "0x400466": 19, "0x400469": 19, "0x40046d": 19, "0x40046e": 19, "0x40046f": 19, "0x400476": 19, "0x40047d": 19, "0x400484": 19, "0x400489": 23, "0x400556": 19, "0x400557": 19, "0x40055a": 19, "0x40055e": 19, "0x400565": 19, "0x400567": 19, "0x40056a": 19, "0x40056d": 19, "0x400571": 19, "0x400574": 19, "0x400577": 19, "0x40057a": 19, "0x40057d": 19, "0x400580": 19, "0x400582": 19, "0x400589": 19, "0x40058c": 19, "0x40058e": 19, "0x400591": 19, "0x400594": 19, "0x400597": 19, "0x400599": 19, "0x40059b": 19, "0x4005a0": 19, "0x4005a2": 19, "0x4005a6": 19, "0x4005aa": 19, "0x4005b1": 19, "0x4005b2": 19, "0x4005b3": 19, "0x4005b4": 19, "0x4005b7": 19, "0x4005bb": 19, "0x4005be": 19, "0x4005c2": 19, "0x4005c6": 19, "0x4005cf": 19, "0x4005d3": 19, "0x4005d7": 19, "0x4005da": 19, "0x4005dd": 19, "0x4005e2": 19, "0x4005e5": 19, "0x4005e9": 19, "0x4005f7": 19, "0x4005fc": 19, "0x400601": 19, "0x400606": 19, "0x400607": 19, "0x400610": 19, "0x400680": 19, "0x40069e": 19, "0x55": 19, "0x600e10": 23, "0x7ff6540": 7, "0x7ff6548": 7, "0x8000000": 20, "0x81dc46e": [17, 20], "0x89485ed18949ed31": 23, "0xdeadbeef": 23, "0xfffffffffffffff0": 19, "1": [0, 2, 5, 7, 9, 11, 17, 19, 21, 23], "10": [0, 1, 2, 6, 13, 23], "100u": 1, "1024": 20, "11": [0, 10], "116": 23, "119": 23, "12": [0, 7], "120": 23, "1200": 1, "121": 23, "123": 23, "124": 23, "125": 23, "126": 23, "127": 23, "128": [2, 22, 23], "129": 23, "13": [0, 2, 7], "130": 23, "131": 23, "132": 23, "133": 23, "134": 23, "135": 23, "136": 23, "137": 23, "139": 23, "1395900": 20, "14": 0, "140": 23, "141": 23, "14128": 20, "142": 23, "15": 0, "151249": 20, "152376": 20, "16": [0, 2], "17": 0, "18": 0, "1879048192": [6, 20], "19": 0, "1991643855": 23, "1e": 1, "2": [0, 1, 2, 5, 6, 7, 9, 11, 17, 19, 20, 21, 22, 23], "20": 0, "200": 1, "2036": [20, 23], "21": [0, 19], "2147483648": 20, "2147483649": 20, "22": 0, "23": 23, "2303323441": 23, "25": 18, "251662336": [6, 20], "255": [7, 23], "256": [2, 18], "2cb80846ef5684501c73e1e19f595230": 22, "3": [0, 2, 5, 9, 10, 11, 19, 21], "30": 18, "32": [2, 7, 11, 23], "338734": 20, "3464": 20, "37": 2, "3735928559": 23, "3735928563": 23, "38": 19, "39": [19, 20, 22, 23], "39932": 20, "4": [0, 2, 5, 7, 9, 11, 19, 20, 21, 23], "40": 1, "4026531840": 6, "4096": [6, 20], "41": 19, "415d0d4405119b88530788282aa06d7d": 19, "4194304": 20, "4195763": 23, "42": 19, "43": 19, "44": 19, "45": 19, "46": 19, "47": 19, "48": [18, 19], "4824": 20, "49": [19, 23], "496": 20, "5": [0, 11, 20], "50": 18, "5000": 1, "512": 2, "53": 19, "5664": 20, "576": [20, 23], "6": [0, 2, 20], "600": 6, "60721": 23, "61": 19, "61264": 20, "62": 19, "6295056": 20, "6295552": 20, "63": 23, "64": [2, 7, 11, 20, 23], "7": [0, 6, 7, 18, 20], "7340032": 20, "7495680": 20, "8": [0, 2, 7, 18, 19, 23], "80": [20, 22], "81": 22, "8192": 20, "82": 22, "83": 22, "84": 22, "8892416": 20, "9": [0, 10, 18], "9234640": 20, "9248768": 20, "9437184": 20, "9441280": 20, "9592832": 20, "9636320": 20, "9641984": 20, "9892260835563793713": 23, "A": [0, 1, 2, 6, 8, 9, 12, 19, 21, 22, 23], "As": [5, 14, 15, 20, 23], "At": [1, 7, 9, 14, 15, 22], "But": [14, 15], "By": [6, 7, 9, 18, 22, 23], "For": [1, 2, 7, 14, 18, 19, 21, 23], "If": [1, 2, 4, 5, 6, 7, 8, 9, 12, 19, 20, 23], "In": [0, 1, 2, 6, 7, 18, 19, 20, 22, 23], "It": [0, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 18, 20, 22, 23], "Its": [9, 17], "No": [6, 7, 23], "Not": 2, "One": [22, 23], "That": [0, 4, 5, 7, 8, 9, 14, 21, 22, 23], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "Their": 22, "Then": [5, 21, 23], "There": [21, 22], "These": [2, 5, 18, 21, 23], "To": [2, 4, 20, 23], "With": 2, "_": 23, "__annotations__": 9, "__assert_fail": 13, "__bytes__": 9, "__ctx": 7, "__ctype_b_loc": 13, "__ctype_toupper_loc": 13, "__dataclass_fields__": 9, "__dataclass_params__": 9, "__delattr__": 9, "__dict__": 9, "__doc__": 9, "__eq__": 9, "__errno_loc": 13, "__fprintf_chk": 13, "__getitem__": [2, 7], "__gmon_start__": [19, 22, 23], "__hash__": 9, "__init__": [9, 20, 21], "__len__": [9, 14], "__libc_start_main": 13, "__match_args__": 9, "__module__": 9, "__repr__": 9, "__setattr__": 9, "__stack_chk_fail": 13, "__weakref__": 9, "__xstat": 13, "_add_callback": 21, "_cb": 21, "_dataclassparam": 9, "_field": 9, "_field_typ": 9, "_missing_typ": 9, "_setjmp": 13, "_to_json": 9, "aaaaaaaaaaaa": 19, "aaaaaaaaaaaaaaa": [22, 23], "aaaaabbbbb": 9, "aarch64": 11, "ab": 2, "abl": [0, 7, 8, 23], "abort": [4, 13, 19], "abortexecutionexcept": [3, 4], "about": [0, 5], "absolut": [2, 12], "abstract": [7, 12, 14], "ac": 18, "accept": 0, "access": [0, 1, 2, 7, 23], "accessor": 6, "accord": [2, 5, 7, 12], "accordingli": 9, "account": [2, 7, 23], "accross": 4, "act": [2, 7, 10], "action": [7, 19], "activ": [1, 6, 7], "actx": [7, 23], "ad": [2, 4, 5, 7, 8, 22, 23], "adapt": 9, "add": [1, 2, 4, 5, 6, 7, 14, 19, 21, 22, 23], "add_covered_address": 2, "add_covered_branch": 2, "add_covered_dynamic_branch": 2, "add_input_se": [5, 19, 22, 23], "add_new_se": 5, "add_seed_queu": 5, "addit": [7, 8, 12, 20], "addr": [0, 2, 4, 6, 7, 8, 11, 19, 20, 21, 22], "addrcallback": 0, "address": [0, 2, 4, 6, 7, 8, 10, 11, 14, 17, 20, 21, 23], "addresst": 6, "adjust": [7, 20], "after": [0, 2, 5, 7, 8, 9, 14, 17, 19, 23], "afterward": 4, "again": 2, "against": 2, "aggreg": 0, "agnost": 7, "ahead": 0, "al": 19, "alert": 8, "algorithm": [6, 14], "alia": [0, 2, 7, 11, 23], "alias": 18, "alias_prefix": 7, "align": 7, "all": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 15, 19, 20, 21, 22, 23], "all_not_cov": 2, "alloc": [3, 7, 15, 21], "allocatorexcept": [3, 7], "allow": [0, 1, 6, 7, 14, 22, 23], "along": [5, 7], "alpha": 2, "alphabet": 2, "alreadi": [0, 2, 3, 4, 7, 9, 12, 14], "also": [0, 2, 5, 7, 8, 9, 12, 15, 19, 20, 23], "alwai": [2, 14], "among": 19, "an": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23], "analog": 23, "analyz": 5, "ancestor": 6, "android": 11, "angr": 20, "ani": [0, 2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 19, 22, 23], "anoth": [7, 21, 22], "anymor": 5, "anyon": 14, "anyth": [2, 9, 14, 23], "anywher": 4, "api": [7, 12, 13, 22], "append": [0, 19, 21], "appli": [0, 1, 7, 15, 23], "applic": 22, "appropri": [4, 5, 6, 7, 19, 22, 23], "approxim": 6, "ar": [0, 1, 2, 5, 6, 7, 9, 11, 12, 14, 15, 16, 17, 20, 21, 22, 23], "arbitrari": [12, 17, 20, 23], "arch": [7, 11, 23], "arch_info": 7, "arch_mod": [6, 20], "architectur": [6, 7, 11, 20, 23], "archive_se": 5, "archmod": [6, 11, 20], "area": [1, 7, 8, 17], "arg": [2, 7, 10, 21], "arg0": [21, 22], "argument": [0, 1, 2, 6, 7, 10, 23], "argv": [4, 9, 15, 18, 19, 22, 23], "ari": 18, "arm": [4, 6, 7, 11, 17], "arm32": [11, 20], "arr": 18, "arrai": 2, "as_integer_ratio": 2, "ascii": 2, "assertionerror": 7, "assign": [5, 6, 7, 9, 22, 23], "associ": [0, 1, 4, 6, 7, 9, 10, 11, 19, 22], "assum": [0, 2, 7], "ast": 7, "astcontext": 7, "astnod": [0, 7, 11, 23], "atoi": [13, 18], "atop": 7, "attach": [6, 7, 20], "attribut": [0, 6, 7, 9, 23], "attriubt": 0, "automat": [2, 7, 9, 15, 21, 22, 23], "auxiliari": 0, "av": 18, "avail": [5, 7, 14, 15, 17, 20, 23], "b": [9, 18, 19, 22], "b204f9c8720b4ee299a215ef4c9f168f": 22, "back": [5, 6], "backedge_on_ret": 6, "background": 7, "base": [2, 6, 7, 8, 9, 13, 14, 15, 17, 19, 20, 22, 23], "base_address": 20, "base_point": 7, "base_pointer_regist": [7, 23], "base_stack": 6, "basic": [2, 5, 8, 14, 15, 20], "basicconfig": 23, "becaus": 6, "been": [0, 2, 4, 6, 7, 8, 9, 14, 15, 20, 22, 23], "befor": [0, 1, 2, 4, 14, 19, 23], "begin": 2, "behav": 18, "behavior": [1, 7, 13], "being": [0, 2, 3, 5, 6, 7, 22, 23], "belong": [1, 6], "between": [2, 6], "big": [2, 7, 11], "bin": [2, 12, 20], "bin_dir": 12, "bin_path": 20, "binari": [2, 6, 10, 11, 16, 17, 20, 23], "binary_path": 10, "bind": [0, 4], "bind_to": 0, "bisect": 6, "bit": [2, 7, 11], "bit_count": 2, "bit_length": 2, "bitsiz": [7, 11], "bitvec": 23, "bitvector": 7, "bitwuzla": 11, "black": 2, "block": [1, 2, 6, 15], "block_index": 6, "bool": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 23], "boolean": 7, "bootstrap": 9, "both": [2, 7, 9, 17, 19, 23], "bound": [0, 7], "boundari": [0, 2, 5], "box": 2, "brace": 2, "branch": [0, 1, 2, 7, 14, 18, 22, 23], "branch_cov": 0, "branch_solving_strategi": [1, 23], "branch_strategi": 2, "branchcheckstrategi": 23, "branchcoveredcallback": 0, "branchsolvingcallback": 0, "branchsolvingstrategi": [1, 2], "break": [2, 23], "buf": 18, "buffer": [2, 7, 9, 17, 18, 22], "bug": [8, 17, 18], "bugged_json_pars": 20, "built": [2, 7], "bunch": 16, "bv": 23, "bv32": 23, "bv4": 23, "byte": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 19, 21, 22, 23], "bytearrai": 2, "byteord": 2, "bytes": [7, 11], "c": [6, 7, 15], "c8f3df9e460142aed1158aa354d7179d": 22, "cab6e4b729327d1e088c9d459e0340eb": 22, "call": [0, 1, 2, 4, 5, 6, 7, 12, 14, 17, 19, 21, 22, 23], "call_graph": 6, "callabl": [0, 7, 8, 19, 21], "callback": [2, 3, 4, 5, 7, 8, 17, 19, 20, 21, 22], "callback_manag": [4, 5, 19, 21, 22], "callbackmanag": [4, 5, 19], "callbacks_en": 7, "caller": 4, "calloc": 13, "can": [0, 2, 3, 4, 6, 7, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23], "can_cover_symbolic_point": 2, "can_improve_coverag": 2, "can_solve_model": 14, "cancel": 7, "cancel_join": 7, "candid": [5, 6], "cannot": [5, 6, 7, 9, 21, 22], "capabl": 15, "capit": 2, "capston": 6, "care": [3, 4, 9, 22, 23], "carri": 17, "carrier": 1, "case": [2, 6, 7, 17, 18, 19], "casefold": 2, "caseless": 2, "catch": 0, "caught": [0, 3, 4], "cautiou": 23, "cb": 0, "cb_type": 7, "cbm": [4, 5], "cbpo": 0, "cbtype": [0, 8, 21], "cdqe": 19, "cell": 7, "center": 2, "cfg": 2, "challeng": [16, 19, 22, 23], "chang": [0, 1, 2, 7, 22, 23], "char": [2, 7, 13, 17, 18, 22, 23], "charact": [2, 19], "charg": [4, 5], "check": [0, 2, 5, 7, 8, 9, 18, 21, 23], "checker": 21, "chr": 19, "chunk": [6, 7], "chunk_index": 6, "chunk_typ": 6, "chunkindex": 6, "chunkmissingerror": 6, "cl": 19, "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 20, 21, 22], "classif": 14, "classifi": 14, "cle": [15, 23], "clean": [2, 5, 14], "clear": 6, "clear_triton_callback": 7, "cleload": [20, 23], "clock_gettim": [1, 13], "clone": 2, "close": 7, "close_file_descriptor": 7, "cmp": 19, "coalesc": 7, "code": [0, 2, 4, 5, 9, 17, 23], "codec": 2, "coeffici": [1, 7], "combin": 11, "command": [1, 23], "comment": 7, "common": 11, "compar": [2, 9, 19], "comparison": [2, 19], "compat": 11, "complement": 2, "complet": 23, "complex": [2, 7, 9, 21, 22], "compliant": 14, "composit": [1, 4, 9, 18, 19, 22, 23], "composite_data": 22, "composite_se": 22, "composite_seed_1": 22, "composite_seed_2": 22, "compositedata": [9, 19, 22, 23], "comput": 6, "concaten": 2, "concret": [0, 1, 2, 4, 7, 13, 14, 22], "concretize_argu": 7, "concretize_memory_byt": 7, "concretize_memory_int": 7, "concretize_regist": 7, "concurr": 0, "cond": 11, "condit": [3, 7, 11, 22], "conditional_jmp": 11, "config": [1, 4, 5, 7, 19, 21, 22, 23], "configur": [4, 5], "conjug": 2, "conjunct": [2, 7], "consequ": 14, "consid": [2, 7, 9], "consist": 23, "const": [13, 18], "constant": [7, 23], "constraint": [2, 4, 5, 7, 11, 19, 21, 23], "constructor": [2, 6, 7, 14], "consum": [5, 12], "consumpt": 4, "contain": [0, 2, 5, 7, 8, 9, 12, 17, 18, 19, 22, 23], "content": [4, 6, 7, 9, 12, 18, 19, 22, 23], "context": [0, 6, 19, 23], "contigu": 22, "continu": 4, "control": [8, 21], "convent": 7, "convert": [1, 2, 9, 13], "copi": [2, 6], "corpu": [5, 12], "corpus_dir": 12, "correctli": [7, 9], "correspond": [6, 7], "could": [7, 19], "count": 2, "counter": [2, 4, 7, 23], "cov": 22, "cover": [0, 1, 2, 9, 14, 23], "cover_sym_dynjump": 2, "cover_sym_read": 2, "cover_sym_writ": 2, "coverag": [1, 4, 5, 6, 9, 10, 14, 15, 17, 18, 22, 23], "coverage_fil": 2, "coverage_path": 10, "coverage_strategi": [1, 22, 23], "coveragesingerun": 2, "coveragesinglerun": [2, 4, 6, 10, 23], "coveragestrategi": [1, 2, 10, 17, 21, 22, 23], "covered_instruct": 2, "covered_item": 2, "covered_symbolic_point": 2, "covitem": [2, 5], "covpro": 18, "cpu": [6, 7, 19, 22, 23], "cpustat": [6, 20], "crackm": [21, 22, 23], "crackme_xor": [19, 20, 21, 22, 23], "craft": 7, "crash": [0, 5, 8, 9, 12, 18, 21, 22, 23], "crash_dir": 12, "creat": [2, 4, 7, 9, 12, 20, 21, 22, 23], "create_file_descriptor": 7, "creation": [0, 19], "criteria": 6, "ctx": [7, 17], "ctx_switch": 0, "cur_ptr": 21, "current": [0, 1, 2, 3, 4, 5, 6, 7, 12, 13, 18, 22], "current_executor": 5, "current_instruct": 7, "current_pc": 4, "current_thread": 7, "custom": [1, 7, 15], "customiz": 15, "cwd": 10, "d": [6, 18], "data": [1, 2, 3, 4, 5, 6, 7, 9, 12, 18, 22, 23], "databas": 6, "database_fil": 6, "dataclass": 9, "dc1d802d1c2796a1a21d96827ce1cae7": 22, "de": 19, "dead": 7, "deal": 22, "debug": [4, 6, 23], "decim": 2, "decod": 19, "decreas": 7, "def": [2, 19, 20, 21, 22], "default": [1, 2, 6, 7, 9, 18, 22, 23], "default_factori": 9, "default_workspac": 12, "defin": [0, 1, 2, 6, 7, 9, 14, 18, 19, 20, 22, 23], "definit": 23, "delattr": 9, "delet": [2, 12], "delimit": 2, "denomin": 2, "depend": [2, 5, 7, 12, 14, 15, 23], "derefer": [7, 8], "describ": [4, 6, 9], "descript": [8, 13], "descriptor": [7, 11], "design": [0, 15], "detail": 23, "detect": [8, 17], "determin": [2, 9], "determinist": 1, "develop": [15, 21], "devic": 17, "dict": [2, 6, 7, 9, 20, 22], "dictionari": [2, 6, 7, 9, 11, 22], "dictionnari": 22, "did": [11, 19], "differ": [2, 5, 6, 14, 17, 21, 22, 23], "digit": 2, "digraph": 6, "directli": [6, 7, 9, 19, 22, 23], "directori": [1, 12, 22, 23], "disabl": [2, 7, 11], "disable_callback": 7, "disable_segment": 7, "disassembl": [6, 7], "disassembli": 19, "discard": 2, "disclaim": 23, "discov": 14, "discrimin": 9, "disk": 12, "distinct": 23, "dm": 6, "do": [0, 2, 4, 7, 12, 22], "doe": [0, 2, 4, 5, 6, 7, 8, 9, 12, 13, 18, 19], "don": 17, "done": [2, 21, 22, 23], "doubl": [7, 8], "down": 7, "dprintf": 8, "drop": [5, 14], "drop_se": 5, "dse": [6, 19, 21, 22, 23], "dse_using_composite_se": 22, "dse_using_raw_se": 22, "dst": 2, "dstaddr": 11, "dummi": [22, 23], "dump_trac": 10, "dure": [0, 2, 4, 7, 9, 18, 22, 23], "dword": [7, 19], "dyn": 11, "dynam": [1, 2, 7, 11, 23], "dynamic_jmp": 11, "dynamic_symbol_t": 7, "e": [0, 1, 6, 7, 11, 19], "e2f673d0fd7980a2bdad7910f0f6da7a": 22, "eaaaaaaaaaaa": 19, "eaaaaaaaaaaaaaa": 22, "each": [0, 1, 2, 5, 6, 7, 14, 19, 23], "eas": [15, 23], "easili": 21, "eax": 19, "ebp": 19, "ecx": 19, "edg": [2, 6, 11, 15], "edi": 19, "effect": [0, 23], "either": [1, 2, 4, 6, 7, 11, 23], "elaaaaaaaaaaaaa": 22, "element": 14, "elementari": 15, "elf": [6, 11, 15, 23], "eliaaaaaaaaaaaa": 22, "elitaaaaaaaaaaa": 22, "eliteaaaaaaaaaa": 22, "els": [6, 14, 18, 19, 23], "emploi": 2, "empti": [2, 4, 6, 7, 9], "emul": [0, 1, 4, 5, 15, 17, 18, 20, 23], "emulation_deinit": 4, "emulation_init": 4, "emulatoin": 18, "en": 7, "enabl": [0, 1, 2, 7, 9, 10, 11, 14, 15, 17, 19, 20, 21, 23], "enable_segment": 7, "encod": [2, 11, 19], "end": [0, 2, 4, 5, 6, 7, 9, 14, 17, 19, 22], "end_stack": 6, "end_tim": 4, "endian": [6, 7, 11, 23], "endswith": 2, "enforc": [1, 7], "engin": [0, 9], "enough": 21, "enqueu": 21, "enqueue_se": [4, 21, 22], "ensur": 0, "enter": 0, "entri": [0, 8, 18, 20], "entry_point": [6, 20, 23], "entrypoint": [6, 15, 17, 23], "enum": [0, 2, 5, 6, 7, 9, 11, 23], "enumer": [0, 1, 2, 21], "eq": 9, "equal": [2, 7, 9], "equival": [0, 23], "eras": 12, "error": [2, 7, 8], "especi": 0, "essenc": 20, "etc": [0, 5, 6, 7, 19, 21, 23], "evalu": [3, 7], "evaluate_expression_model": 7, "even": [2, 6, 15], "event": [0, 7, 15], "everi": [0, 6, 8, 14, 19], "evolv": 0, "exact": [12, 17], "exactli": [2, 6], "exampl": [1, 2, 20, 21, 22], "example_hook": 22, "except": [0, 4, 7, 9, 10, 18], "excerpt": 22, "exec": 19, "exec_path": 6, "execut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22], "execution_count": [5, 23], "execution_tim": 4, "execution_timeout": [1, 4, 23], "executor": [5, 8, 9, 18, 19, 20, 23], "executor_stop_at": 5, "exist": [1, 7, 9, 12, 22, 23], "exit": [0, 4, 7, 13, 14, 17, 18], "exitcod": [4, 19, 22, 23], "exp": 7, "expand": 2, "expandtab": 2, "expect": [0, 20], "experiment": 23, "explain": 22, "explicit": 23, "explor": [0, 1, 2, 3, 4, 5, 12, 14, 15, 17, 18, 21, 22], "exploration_limit": [1, 23], "exploration_timeout": [1, 23], "explorationstatu": [5, 19, 22, 23], "explorationstepcallback": 0, "explore_step": 0, "export": 6, "export_fil": 6, "expos": [21, 23], "expr": 7, "express": [0, 1, 2, 4, 7, 11, 23], "extern": [1, 6, 7, 20], "extern_seg": 7, "extern_sym_bas": 6, "extern_sym_s": 6, "extra_data": 8, "extract": 17, "f": [2, 6, 19, 20, 22, 23], "facil": 15, "factori": 9, "fail": [5, 9, 11, 12, 23], "fail_dir": 12, "failur": 2, "fals": [1, 2, 6, 7, 9, 10, 12, 19, 21, 22, 23], "fashion": 23, "faulti": 22, "fclose": [13, 18], "fd": 11, "fd_id": 7, "featur": [6, 15, 23], "fetch": [3, 7], "fetch_instruct": 7, "few": [21, 23], "fget": [11, 13, 18], "field": [0, 1, 2, 9, 22, 23], "file": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 17, 18, 20, 21, 22, 23], "file_descriptor_exist": 7, "filedesc": [7, 11], "filenam": [9, 12, 22], "filenotfounderror": 6, "filepath": [12, 21], "fill": [2, 22], "fillchar": 2, "final": 12, "find": [0, 2, 5, 6, 7, 17, 23], "find_function_addr": [6, 20, 22, 23], "find_function_from_addr": 6, "find_map": 7, "fine": 7, "finish": [0, 5, 6], "firmwar": [6, 17], "first": [0, 2, 6, 7, 14, 17, 21, 23], "first_last_not_cov": [1, 2], "fit": [4, 7, 21], "flag": [2, 8, 11, 18, 19], "float": [1, 5, 7, 23], "flush": 12, "fmt_addr": 7, "fmt_ptr": 8, "folder": [12, 22], "follow": [2, 3, 6, 7, 9, 11, 14, 15, 16, 17, 19, 20, 21, 22, 23], "fopen": [13, 18, 21], "fopen_check": 21, "forc": [3, 7, 19], "forev": 4, "fork": 0, "forma": 6, "format": [1, 2, 6, 7, 8, 9, 11, 20, 21, 22], "format_map": 2, "formatstringsanit": [8, 21], "formula": [11, 19, 21], "found": [2, 6, 7, 9, 18], "fp": 18, "fprintf": [8, 13], "fput": 13, "fputc": 13, "framework": [15, 22], "fread": [13, 18], "free": [3, 7, 8, 13], "freed": [3, 7, 8], "freopen": 21, "fresh": [0, 1, 9, 14, 22], "freshli": 7, "freshseedprioritizerworklist": 14, "friendli": 7, "frm": 6, "from": [0, 1, 2, 4, 5, 6, 7, 9, 10, 12, 14, 15, 17, 19, 20, 21, 22, 23], "from_binari": 6, "from_byt": [2, 9], "from_dict": 9, "from_fil": [1, 2, 9, 10], "from_json": 1, "from_load": [7, 20], "fromkei": 6, "front": 2, "frozen": 9, "fseek": 13, "ftell": 13, "fulfil": 11, "fulli": [7, 11, 12], "fun": 23, "func_chunk_index": 6, "func_nam": 0, "function": [0, 1, 2, 4, 5, 6, 7, 8, 9, 13, 14, 17, 18, 20, 21, 22], "functionmissingerror": 6, "functiontyp": 6, "further": [7, 15], "furthermor": [15, 18], "fwrite": 13, "g": [0, 1, 6, 7, 11], "gather": [4, 10], "gener": [0, 2, 4, 5, 6, 7, 8, 10, 12, 14, 20, 23], "get": [0, 4, 5, 6, 7, 12, 14, 19, 20], "get_address_callback": 0, "get_argument_symbol": 7, "get_argument_valu": [7, 19, 21, 22], "get_binary_directori": 12, "get_call_graph": 6, "get_caller_instruct": 6, "get_chunk": 6, "get_context_switch_callback": 0, "get_coverag": 10, "get_data": 6, "get_execution_callback": 0, "get_exploration_step_callback": 0, "get_expression_variable_values_model": [7, 19], "get_file_descriptor": 7, "get_file_input": 9, "get_first_function_by_chunk": 6, "get_format_argu": 7, "get_format_str": 7, "get_full_argu": 7, "get_funct": 6, "get_function_by_chunk": 6, "get_imported_routine_callback": 0, "get_instruct": 6, "get_instruction_callback": 0, "get_map": [7, 20], "get_memory_violation_callback": 0, "get_metadata_fil": 12, "get_metadata_file_path": 12, "get_mnemonic_callback": 0, "get_new_input_callback": 0, "get_on_branch_covered_callback": 0, "get_on_solving_callback": 0, "get_opcode_callback": 0, "get_path_constraint": 7, "get_seg": 6, "get_slic": 6, "get_stack_valu": 7, "get_string_argu": 7, "getaddress": 19, "getast": [19, 21, 22, 23], "getchar": 13, "getconcreteregistervalu": 7, "getdisassembli": 19, "getenv": 13, "getthreadid": 19, "gettimeofdai": [1, 13], "give": [5, 6, 7, 9], "given": [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 14, 19, 20, 21, 22, 23], "global": [2, 5, 14], "globalcoverag": [2, 5, 14], "go": [0, 21, 22, 23], "goal": [2, 15, 17, 18], "got": 7, "graph": 6, "gt": [19, 20, 22, 23], "h": [18, 23], "ha": [0, 2, 4, 6, 7, 8, 9, 14, 15, 20, 22, 23], "halt": 7, "hand": 5, "handl": [2, 15], "hang": [1, 4, 5, 9, 12, 22], "hang_dir": 12, "hardli": 18, "has_ever_been_written": 7, "has_seed_remain": 14, "hash": [6, 9, 11, 19, 22], "have": [0, 2, 3, 4, 7, 9, 14, 15, 19, 20, 21, 22, 23], "head": [6, 7], "header": 6, "heap": [3, 7, 8, 15], "heap_alloc": [7, 8], "heapalloc": 8, "hello": 23, "help": [6, 14], "helper": 7, "here": [18, 19, 21, 22], "hex": 23, "high": 7, "higher": 15, "highest": 2, "hijack": 21, "himself": 22, "hint": 18, "hit": 1, "hold": [1, 2, 5, 7, 9], "hood": 2, "hook": [7, 8, 15, 17, 21, 22], "hook_cmp": [19, 22], "hook_cmp2": 19, "hook_put": 19, "hopefulli": 23, "host": [2, 20], "hostedtoolcach": 10, "how": [4, 6, 9, 17, 18, 20, 23], "howev": [6, 8, 22], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22], "id": [4, 7, 11], "id_": 7, "ida": 6, "identifi": [2, 4, 6, 7, 11, 23], "idl": [5, 19, 22, 23], "idx": 7, "ignor": 2, "imag": 2, "imaginari": 2, "implement": [0, 2, 4, 7, 9, 14, 17, 20], "impli": 7, "import": [0, 6, 19, 20, 21, 22, 23], "imported_functions_reloc": [6, 20], "imported_variable_symbols_reloc": [6, 20], "improv": [6, 14], "improve_coverag": 2, "includ": [2, 5, 7, 18, 23], "incompat": 2, "increment": [1, 7], "inde": 15, "independ": 7, "index": [2, 4, 6, 7], "indexerror": [6, 7], "indic": [2, 7, 8, 23], "indiffer": 0, "individu": 6, "infam": 20, "infer": 18, "info": [8, 23], "inform": [0, 1, 5, 7], "inherit": 20, "init": 9, "initi": [0, 4, 6, 7, 12, 13, 20], "initialize_context": 7, "inject": [4, 9, 15, 17, 18], "inject_symbolic_argv_memori": 4, "inject_symbolic_file_memori": 4, "inject_symbolic_file_regist": 4, "inject_symbolic_raw_input": 4, "inject_symbolic_variable_memori": [4, 22], "inject_symbolic_variable_regist": [4, 22], "input": [0, 1, 2, 4, 5, 8, 9, 11, 13, 14, 15, 17, 19, 21, 22, 23], "ins": 7, "insert": [2, 4, 6, 14], "insid": [0, 7], "inst": [4, 19], "instal": 6, "instanc": [0, 1, 2, 4, 5, 6, 9, 13, 14, 19, 22], "instanci": [4, 7], "instanti": [4, 5], "instead": [2, 6], "instrcallback": 0, "instruct": [0, 1, 2, 3, 4, 6, 7, 8, 15, 17, 23], "instrument": 15, "int": [0, 1, 2, 4, 5, 6, 7, 9, 10, 11, 13, 14, 17, 18, 19, 20, 22, 23], "integ": [2, 4, 7, 8, 11, 13, 23], "integeroverflowsanit": 8, "intend": [9, 21], "intention": 2, "interact": [0, 7], "interest": [5, 18], "interfac": [7, 14, 19, 20, 21, 23], "intermedi": 14, "intern": [0, 4, 5, 6, 11, 14], "interpret": 2, "interrupt": [5, 8, 23], "intersect": 6, "intflag": 2, "intrins": 18, "intro": 20, "introduc": [19, 21, 23], "inttyp": 18, "invalid": 0, "invit": 12, "involv": [7, 19], "io": 11, "iobas": [7, 11], "iot": 17, "is_bind": 0, "is_bootstrap_se": 9, "is_composit": 9, "is_cov": 2, "is_dead": 7, "is_empti": 0, "is_file_defin": 9, "is_format_composit": 1, "is_format_raw": 1, "is_fresh": 9, "is_halt_instruct": 7, "is_heap_ptr": 7, "is_input_fd": 11, "is_main_thread": 7, "is_map": [7, 23], "is_memory_symbol": [7, 21], "is_new_se": 5, "is_path_predicate_upd": 7, "is_ptr_alloc": 7, "is_ptr_fre": 7, "is_raw": 9, "is_real_fd": 11, "is_register_symbol": 7, "is_run": 7, "is_seed_inject": 4, "is_status_set": 9, "is_syscal": 7, "is_waiting_to_join": 7, "isalnum": 2, "isalpha": 2, "isascii": 2, "isdecim": 2, "isdigit": 2, "isidentifi": 2, "iskeyword": 2, "islow": 2, "isnumer": 2, "isprint": 2, "isspac": [2, 13], "issu": [8, 18], "istaken": 11, "istitl": 2, "isupp": 2, "item": [2, 4, 6, 7, 19], "iter": [0, 1, 2, 4, 5, 6, 7, 12, 14, 19, 22, 23], "iter_chunk": 6, "iter_corpu": [12, 22], "iter_crash": 12, "iter_fail": 12, "iter_hang": 12, "iter_new_path": 2, "iter_worklist": [12, 22], "ith": [4, 7], "its": [0, 2, 5, 6, 7, 9, 12, 13, 14, 15, 18, 19, 20, 21, 23], "itself": [0, 2, 9, 11, 20], "j": 18, "jcc": 11, "je": 19, "jle": 19, "jmp": [11, 19], "jne": 19, "join": [2, 7], "join_thread": 7, "json": [1, 2, 9], "json_ctx": 17, "json_data": 9, "json_pars": 17, "jump": [1, 2, 11], "just": [0, 7, 8, 9, 14, 17, 18, 21, 22, 23], "justifi": 2, "k": 6, "keep": [0, 2, 7, 14, 18, 23], "keepend": 2, "kei": [2, 6, 11, 22], "kept": 5, "keyerror": [6, 7, 9], "keyword": 2, "kill": 7, "kind": [0, 18], "know": [2, 5, 14, 17, 18], "known": [2, 9], "kw_onli": 9, "kwarg": 2, "l": 19, "lack": [6, 23], "last": [2, 5, 6, 7, 14], "last_branch_constraint": 7, "later": [4, 22], "ld": 20, "ld_path": 6, "ldr": 20, "lead": [2, 5, 8, 15], "least": [2, 7], "leav": 19, "left": 2, "len": [2, 6, 17, 20, 21, 22, 23], "length": 2, "let": [19, 21, 22, 23], "level": [7, 15, 20, 23], "lib": 10, "libc": [7, 8, 15, 20, 21, 23], "librari": [15, 19, 20, 23], "lief": [6, 15, 20, 23], "lifo": 6, "lighthous": 17, "like": [6, 7, 8, 22], "limit": [1, 2, 7, 23], "line": [1, 2, 23], "linux": [11, 15, 23], "list": [0, 1, 2, 4, 6, 7, 8, 9, 10, 20, 21, 22, 23], "littl": [2, 6, 7, 11, 23], "ljust": 2, "load": [0, 1, 4, 6, 7, 10, 15, 17, 19, 23], "load_process": 4, "loadableseg": [6, 20], "loader": [4, 5, 7, 15, 17, 23], "local": 0, "locat": [7, 9, 12, 18, 21, 22], "log": [0, 6, 7, 12, 23], "log_fil": 12, "logfile_path": 12, "logger": [6, 8], "logic": [7, 11], "long": [6, 7, 19], "longjmp": 13, "look": 7, "lookup": 2, "lookuperror": 2, "loop": 19, "lot": 18, "low": [15, 20], "lower": 2, "lowercas": 2, "lowest": 2, "lstrip": 2, "lt": [19, 20, 22, 23], "mac": 11, "mach": 11, "macho": [6, 11, 20], "maco": 11, "made": [0, 9, 19], "mai": [2, 7], "main": [7, 18, 19, 20, 23], "mainli": 2, "make": [2, 8, 17, 22], "maketran": 2, "malloc": [7, 13], "man": 13, "manag": [0, 4, 5, 7, 14, 19, 21], "mani": [8, 23], "manipul": [2, 5, 7, 22], "manner": [1, 2, 7, 23], "manual": [2, 7, 15, 18, 20, 22, 23], "map": [0, 1, 2, 6, 7, 14, 20, 23], "map_from_nam": 7, "mapoverlapexcept": 7, "mappingproxi": 9, "mark": [1, 4, 8, 13, 21], "match": [2, 6, 12, 19], "max_arg_len": 18, "max_siz": 11, "maximum": [2, 5], "maxsplit": 2, "mcu": 17, "md5": [2, 6, 9], "mean": [1, 2, 5, 9, 23], "meant": [0, 4, 5, 7, 9, 11, 14, 22], "mechan": [7, 15], "mem_usage_str": 4, "mem_viol": 0, "member": [2, 9, 11], "memcallback": 0, "memcmp": 13, "memcpi": 13, "memmap": 7, "memmem": 13, "memmov": 13, "memori": [0, 1, 2, 4, 6, 8, 11, 15, 17, 19, 20, 21, 22], "memory_read": 0, "memory_seg": [6, 20, 23], "memory_segment": 1, "memory_writ": 0, "memoryaccess": 0, "memoryaccessviol": [0, 7], "memoryviolationcallback": 0, "mempcpi": 13, "memreadcallback": 0, "memset": 13, "memwritecallback": 0, "merg": [2, 6], "messag": [3, 7], "meta": 18, "metadata": [9, 12, 23], "metadata_dir": 12, "method": [0, 2, 4, 6, 7, 8, 9, 14, 20, 21, 22, 23], "metric": 2, "might": [0, 4, 5, 8, 12, 14, 23], "millisecond": [1, 7, 23], "min": 6, "minus_on": 7, "mix": 22, "mk_new_seed_from_model": [4, 21, 22], "mnemon": 0, "mnemoniccallback": 0, "mode": [6, 7, 11], "model": [0, 1, 4, 7, 11, 19, 21, 22, 23], "modifi": [0, 7, 19, 23], "modul": [0, 2, 4, 5], "moment": [1, 2, 15], "monolith": [6, 20], "more": [1, 2, 9, 15, 20, 21, 22, 23], "most": [0, 2, 14, 23], "mostli": 6, "mov": 19, "move": [5, 12, 22], "movsx": 19, "movsxd": 19, "movzx": 19, "mprotect": 7, "multipl": [0, 17, 23], "must": [0, 1, 2, 6, 7, 9, 22], "mutat": 18, "n": [0, 2, 7, 9, 18], "name": [0, 1, 2, 4, 5, 6, 7, 9, 11, 12, 19, 20, 23], "nativ": 2, "natur": 2, "ncorpu": 22, "necessari": [0, 2, 4, 22], "need": [14, 17, 18, 23], "neg": [2, 7, 13], "negat": [2, 14, 18, 22], "nest": 13, "networkx": 6, "never": [2, 7, 9, 22], "new": [0, 1, 2, 4, 5, 7, 8, 9, 12, 14, 19, 21, 22, 23], "new_input": 0, "new_items_to_cov": 2, "new_pc": 7, "new_se": [21, 22], "new_sym": 23, "newinputcallback": 0, "newli": 7, "next": [1, 3, 5, 14, 23], "node": [6, 7], "non": [1, 2, 3, 7], "none": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 19, 20, 21], "nor": 13, "noreturn": 4, "normal": [5, 6], "not_covered_item": 2, "not_run": 5, "not_taken_addr": 2, "notat": 2, "note": [2, 5, 6, 22, 23], "noth": 4, "notimplementederror": [6, 20], "now": [14, 15, 21, 23], "nptr": 13, "null": [8, 18], "nullderefsanit": [8, 21], "nullptr": 18, "number": [1, 2, 5, 7, 14, 23], "numer": 2, "o": [7, 11], "obj": 2, "object": [0, 2, 4, 5, 6, 7, 9, 10, 11, 12, 19, 20, 21, 23], "obtain": [4, 15, 18], "occur": 0, "occurr": [1, 2], "off": [0, 7, 14], "offset": [4, 7, 11], "ok": [5, 13], "ok_don": [5, 9, 19, 22], "old": 2, "onc": [0, 12, 14], "one": [2, 5, 6, 7, 8, 9, 14, 15, 17, 19, 20, 21, 22, 23], "ones": [2, 12, 15, 17, 22], "onli": [0, 2, 4, 6, 11, 14, 17, 19, 20, 22, 23], "opcod": 0, "opcodecallback": 0, "open": [13, 21], "opensanit": 21, "oper": [0, 2, 7], "opportunist": 23, "opt": 10, "option": [1, 2, 4, 5, 6, 7, 9, 12, 20, 21], "ord": 21, "order": [2, 6, 9, 14, 19], "ordin": 2, "origin": [2, 6, 7], "other": [0, 2, 7, 9, 14, 15, 19, 20, 21, 23], "otherwis": [2, 6, 7, 9, 14], "our": [2, 19, 21, 23], "out": [6, 7, 17, 18], "output": [1, 6], "output_fil": 6, "output_path": 10, "over": [6, 12], "overal": [1, 2, 23], "overflow": [3, 7, 8, 18], "overflowerror": 2, "overlap": [2, 7], "overrid": [4, 7, 12, 22], "overriden": 9, "overwrit": 1, "own": [0, 1, 12, 20, 21, 23], "p": [19, 20, 22, 23], "pack": 7, "pack_integ": 7, "packag": 10, "pad": 2, "page": [11, 13], "pair": [2, 6], "param": 7, "paramet": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 22, 23], "parent": 12, "pars": [9, 17], "parse_buff": 22, "parser_program": 22, "part": [2, 4, 17], "partial": [4, 6], "partit": 2, "pass": 10, "passwd": 21, "passwd_fil": 21, "pasti": 23, "patch": 19, "patchconstraint": 2, "path": [1, 2, 5, 6, 7, 9, 10, 11, 12, 14, 15, 20, 22, 23], "path_constraint": 2, "path_coverag": 22, "path_predicate_s": 7, "pathbranch": [2, 11], "pathbranchobject": 11, "pathconstraint": [2, 7, 11], "pathhash": [2, 11], "pathlik": [6, 9, 11, 12], "pc": [7, 20], "pe": [6, 11, 20], "peform": 23, "pend": [2, 4, 5, 12, 14], "pending_coverag": 2, "pending_se": 4, "per": 0, "perform": [0, 1, 2, 4, 5, 7, 8, 14, 15, 18, 19, 20, 21, 23], "perm": [6, 7, 11, 20], "permiss": [0, 6, 7, 11], "perspect": 2, "pick": [14, 21, 22], "pick_se": 5, "pip": 15, "pip3": 15, "pipe": [1, 23], "pipe_stderr": [1, 23], "pipe_stdout": [1, 19, 22, 23], "place": [18, 21, 22], "plai": 22, "plain": 9, "platform": [6, 11, 15, 20], "plt": 23, "plug": 0, "plugin": 6, "po": 0, "point": [2, 7, 8, 13, 17, 20, 23], "pointer": [2, 3, 7, 8, 15, 18, 22, 23], "pool": [0, 19], "pop": [6, 7, 14, 19], "pop_stack_valu": 7, "popitem": 6, "popul": 2, "portabl": 23, "portion": [9, 13], "posit": [0, 2, 7], "posixpath": 10, "possibl": [2, 8, 13, 22, 23], "post": [0, 2, 5, 19], "post_addr": 0, "post_exec": 0, "post_exec_hook": [19, 22], "post_execut": [2, 5, 14], "post_explor": [2, 5, 14], "post_inst": 0, "post_mnem": 0, "post_opcod": 0, "post_rtn": 0, "potenti": [17, 18], "pp_item": 2, "pp_meta_filenam": 5, "pq": 2, "pre": [0, 3, 4, 19], "pre_addr": 0, "pre_exec": 0, "pre_exec_hook": 19, "pre_inst": 0, "pre_mnem": 0, "pre_opcod": 0, "pre_rtn": [0, 21], "precis": 9, "predic": [2, 7, 23], "prefix": [2, 7, 13], "prefixed_edg": 2, "presenc": 0, "present": [2, 6, 7, 8, 18], "pretti": [2, 5], "prevent": 19, "previou": [4, 12, 23], "previous": [7, 22], "previous_pc": 4, "primarili": 15, "primarli": 20, "primit": [7, 15, 23], "principl": 18, "print": [2, 5, 8, 14, 19, 22, 23], "printabl": 2, "printf": [8, 13, 18], "priorit": 5, "probe": [3, 8, 15], "probeexcept": 3, "probeintefac": 0, "probeinterfac": [0, 8, 21], "process": [0, 2, 4, 5, 7, 8, 9, 13, 14, 22, 23], "process_instruct": 7, "processst": [0, 3, 4, 8, 13, 19, 20, 21, 22, 23], "produc": [2, 22, 23], "program": [0, 1, 3, 4, 5, 7, 9, 11, 15, 18, 19, 20, 21, 22], "program_argv": [1, 23], "program_count": [2, 7, 23], "program_counter_regist": [7, 23], "project": 20, "properli": [6, 7], "properti": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 18, 20, 21], "protect": 7, "protocol": 2, "prototyp": 17, "provid": [0, 1, 5, 6, 7, 12, 14, 15, 18, 20, 21, 22, 23], "proxi": 7, "pseudo": 6, "pstate": [4, 8, 13, 19, 21, 22, 23], "pthread_creat": 13, "pthread_exit": 13, "pthread_join": 13, "pthread_mutex_destroi": 13, "pthread_mutex_init": 13, "pthread_mutex_lock": 13, "pthread_mutex_unlock": 13, "ptr": [7, 8, 19, 21], "ptr_bit_siz": [7, 23], "ptr_size": 7, "ptrsize": 23, "punctuat": 2, "pure": [15, 23], "purpos": [7, 19, 21, 22], "push": [7, 19, 23], "push_constraint": [7, 23], "push_stack_valu": 7, "put": [0, 7, 13, 19, 21, 22], "pwd_byte": 21, "py": [1, 2, 10, 18, 22], "pypcod": 6, "pypi": 15, "python": [1, 2, 7, 10, 11, 15], "python3": 10, "qbdi": 15, "qbdi_script_filepath": 10, "qbdi_trac": 10, "qbditrac": 10, "qualnam": [0, 5], "queri": [1, 5, 6, 7, 8, 23], "question": 23, "queue": [0, 4, 5], "quokka": 6, "qword": [7, 19], "r": [2, 6, 7, 11, 18, 20], "r0": 4, "r8": 19, "r9": 19, "raddr": 11, "rai": 3, "rais": [2, 3, 4, 6, 7, 8, 9, 18, 20], "rand": [13, 14], "random": 14, "rang": [2, 7], "rather": 23, "ratio": 2, "ration": 2, "raw": [1, 4, 6, 9, 22, 23], "raw_f": 20, "raw_se": 9, "rawbinaryload": 20, "rax": [4, 7, 19, 23], "rbp": [19, 23], "rcx": 19, "rdi": 19, "rdtsc": 23, "rdx": 19, "re": [5, 7, 14], "reach": [0, 14, 19], "reachabl": 6, "read": [0, 2, 6, 7, 8, 9, 11, 12, 13, 19, 21, 22], "read_byt": [6, 20], "read_char": [7, 23], "read_dword": [7, 23], "read_int": [7, 23], "read_long": 7, "read_long_long": 7, "read_memory_int": 21, "read_ptr": [7, 23], "read_qword": [7, 23], "read_regist": [7, 23], "read_sint": 7, "read_str": [7, 19], "read_symbolic_memory_byt": [7, 21, 23], "read_symbolic_memory_int": [7, 23], "read_symbolic_regist": [7, 19, 22, 23], "read_uchar": [7, 23], "read_uint": [7, 23], "read_ulong": 7, "read_ulong_long": 7, "read_word": [7, 23], "real": 2, "realli": [5, 19], "realloc": 13, "receiv": 9, "recent": 7, "recogn": 6, "recogniz": [9, 17], "recomput": 0, "ref": 23, "refer": [0, 7, 9], "refin": 15, "reg": 4, "reg_read": 0, "reg_writ": 0, "regardless": [6, 12, 19], "region": 7, "regist": [0, 2, 4, 5, 7, 11, 19, 20, 21, 22], "register_addr_callback": 0, "register_error": 2, "register_exploration_step_callback": 0, "register_function_callback": 0, "register_instruction_callback": 0, "register_memory_read_callback": 0, "register_memory_violation_callback": 0, "register_memory_write_callback": 0, "register_mnemonic_callback": 0, "register_nam": 6, "register_new_input_callback": 0, "register_on_branch_covered_callback": 0, "register_on_solving_callback": 0, "register_opcode_callback": 0, "register_post_addr_callback": [0, 19], "register_post_execution_callback": [0, 19, 22], "register_post_imported_routine_callback": [0, 19], "register_post_instruction_callback": [0, 19], "register_post_mnemonic_callback": 0, "register_post_opcode_callback": 0, "register_pre_addr_callback": [0, 22], "register_pre_execution_callback": [0, 19], "register_pre_imported_routine_callback": 0, "register_pre_instruction_callback": [0, 19], "register_pre_mnemonic_callback": 0, "register_pre_opcode_callback": 0, "register_prob": [0, 21], "register_register_read_callback": 0, "register_register_write_callback": 0, "register_thread_context_switch_callback": 0, "register_triton_callback": 7, "register_valu": 6, "registr": 21, "regreadcallback": 0, "regular": 2, "regwritecallback": 0, "rel": [7, 11, 12], "rel_path": 12, "relat": [0, 2, 5, 7], "relev": [2, 4, 14], "reloc": [6, 23], "relocation_aarch64": 6, "relocation_arm": 6, "relocation_enum": 6, "relocation_i386": 6, "relocation_ppc": 6, "relocation_ppc64": 6, "relocation_x86_64": 6, "remain": 2, "remov": [0, 2, 5, 6, 7, 14, 19], "removeprefix": 2, "removesuffix": 2, "replac": [2, 7], "replai": 15, "repr": [2, 9, 22], "repres": [0, 2, 3, 5, 6, 7, 11, 13, 23], "represent": [1, 2, 6, 7, 9, 13], "request": [2, 7], "requir": [0, 7, 12, 18, 20, 23], "research": 6, "reserv": 2, "reset": [0, 7, 19], "resolv": [0, 6, 18, 20], "respect": [0, 7, 20], "respons": 22, "rest": 2, "restart": 23, "restor": 7, "restrain": 7, "result": [0, 2, 4, 6, 7, 17], "ret": 19, "retriev": [1, 6, 7, 9, 19, 22, 23], "return": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 20, 21, 23], "return_regist": [4, 7, 23], "reus": [19, 22], "revert": 22, "rfind": 2, "right": [2, 9, 22], "rindex": 2, "rip": [3, 7, 19, 23], "rjust": 2, "robin": 1, "root": [12, 19, 22, 23], "root_dir": 12, "round": 1, "routin": [0, 1, 7, 8, 18, 19, 23], "routine_nam": 0, "rpartit": 2, "rsi": 19, "rsp": [7, 19, 23], "rsplit": 2, "rstrip": 2, "rtn___fprintf_chk": 13, "rtn__setjmp": 13, "rtn_abort": 13, "rtn_assert_fail": 13, "rtn_atexit": 13, "rtn_atoi": 13, "rtn_calloc": 13, "rtn_clock_gettim": 13, "rtn_ctype_b_loc": 13, "rtn_ctype_toupper_loc": 13, "rtn_errno_loc": 13, "rtn_exit": 13, "rtn_fclose": 13, "rtn_fget": 13, "rtn_fopen": 13, "rtn_fprintf": 13, "rtn_fput": 13, "rtn_fputc": 13, "rtn_fread": 13, "rtn_free": 13, "rtn_fseek": 13, "rtn_ftell": 13, "rtn_fwrite": 13, "rtn_getchar": 13, "rtn_getenv": 13, "rtn_gettimeofdai": 13, "rtn_isspac": 13, "rtn_libc_start_main": 13, "rtn_longjmp": 13, "rtn_malloc": 13, "rtn_memcmp": 13, "rtn_memcpi": 13, "rtn_memmem": 13, "rtn_memmov": 13, "rtn_mempcpi": 13, "rtn_memset": 13, "rtn_name": 21, "rtn_open": 13, "rtn_printf": 13, "rtn_pthread_creat": 13, "rtn_pthread_exit": 13, "rtn_pthread_join": 13, "rtn_pthread_mutex_destroi": 13, "rtn_pthread_mutex_init": 13, "rtn_pthread_mutex_lock": 13, "rtn_pthread_mutex_unlock": 13, "rtn_put": 13, "rtn_rand": 13, "rtn_read": 13, "rtn_realloc": 13, "rtn_sem_destroi": 13, "rtn_sem_getvalu": 13, "rtn_sem_init": 13, "rtn_sem_post": 13, "rtn_sem_timedwait": 13, "rtn_sem_trywait": 13, "rtn_sem_wait": 13, "rtn_setlocal": 13, "rtn_sleep": 13, "rtn_sprintf": 13, "rtn_stack_chk_fail": 13, "rtn_strcasecmp": 13, "rtn_strchr": 13, "rtn_strcmp": 13, "rtn_strcpy": 13, "rtn_strdup": 13, "rtn_strerror": 13, "rtn_strlen": 13, "rtn_strncasecmp": 13, "rtn_strncmp": 13, "rtn_strncpy": 13, "rtn_strtok_r": 13, "rtn_strtoul": 13, "rtn_write": 13, "rtn_xstat": 13, "rtncallback": 0, "run": [0, 4, 5, 7, 9, 10, 14, 17, 19, 23], "runtim": [7, 15, 23], "runtimeerror": 7, "rw": 11, "rx": 7, "s1": 18, "s2": 18, "sai": 22, "same": [2, 4, 13, 18, 19, 20, 22, 23], "sanit": [15, 17, 18], "sat": [7, 11, 19, 21, 22], "satisfi": [8, 11, 14, 21, 23], "save": [1, 2, 7, 12], "save_fil": 12, "save_metadata_fil": 12, "save_se": 12, "schedul": [0, 1, 5, 15], "scheme": 2, "script": 22, "se": [0, 8, 13, 19, 21, 22], "search": [2, 6], "sec": 23, "second": [1, 2, 4], "section": [16, 17], "see": [1, 7, 17, 22, 23], "seed": [0, 1, 3, 4, 5, 12, 13, 15, 17, 18, 19, 21, 23], "seed_format": [1, 19, 22, 23], "seed_manag": [5, 14], "seed_schedul": 14, "seed_scheduler_class": 5, "seedformat": [1, 9, 19, 22, 23], "seedmanag": [2, 14], "seeds_avail": 5, "seeds_manag": 5, "seedschedul": [5, 14], "seedstatu": [5, 9, 21], "seen": 23, "seg": [20, 23], "seg2": 20, "seg3": 20, "segment": [1, 6, 7, 15, 20, 23], "segmentation_en": 7, "seldomli": 1, "select": [5, 7, 14], "self": [0, 2, 9, 20, 21], "sem_destroi": 13, "sem_getvalu": 13, "sem_init": 13, "sem_post": 13, "sem_timedwait": 13, "sem_trywait": 13, "sem_wait": 13, "semant": 1, "send": 5, "sep": 2, "separ": 2, "serial": 9, "session": 0, "set": [2, 3, 4, 5, 6, 7, 8, 9, 11, 14, 15, 17, 19, 21, 23], "set_as_curr": 7, "set_endian": 7, "set_segment": 7, "set_solv": 7, "set_solver_timeout": 7, "set_thumb": [6, 7, 20], "set_triton_mod": 7, "setattr": 9, "setdefault": 6, "setlocal": 13, "sha256": 6, "shall": [0, 19, 23], "shallow": 6, "share": [19, 20, 23], "should": [2, 3, 4, 6, 7, 12, 14, 22, 23], "show": [8, 14, 20, 22], "shown": 8, "shutdown": 5, "side": [0, 23], "sign": [2, 7, 23], "signatur": 19, "signific": 2, "similar": [7, 23], "similarli": [18, 19], "simpl": [0, 7, 15, 18, 21, 23], "simpli": [4, 8], "singl": [1, 2, 4, 5, 6, 7, 22], "site": [0, 10], "size": [2, 3, 6, 7, 9, 11, 18, 20, 23], "sizeof": 18, "skip": [0, 3, 4, 23], "skip_instruct": 4, "skip_sleep_routin": [1, 23], "skip_unsupported_import": 1, "skip_unsupported_instruct": 1, "skipinstructionexcept": [3, 4], "sleep": [1, 13, 23], "slice": [2, 6, 7, 23], "small": 20, "smt": [0, 1, 2, 4, 5, 7, 8, 11, 14, 19, 21, 23], "smt_enumeration_limit": 1, "smt_queries_limit": [1, 5, 23], "smt_solver": 1, "smt_timeout": [1, 23], "smtsolver": [1, 11], "snippet": [19, 22], "snprintf": 8, "so": [2, 4, 8, 19, 20, 21, 23], "sole": [6, 14, 15, 22], "solv": [0, 1, 2, 5, 7, 8, 11, 14, 16, 21, 22, 23], "solve_enumerate_express": 7, "solve_new_path": 5, "solve_no_pp": 7, "solver": [0, 1, 7, 11], "solverstatu": [2, 7, 11, 19, 21, 22], "some": [0, 2, 5, 9, 14, 15, 17, 18, 19, 21, 23], "somehow": 12, "sort": 6, "sound": [7, 23], "sound_mem_access": 2, "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "sp": 20, "space": [2, 6, 13], "spawn_new_thread": 7, "specif": [0, 2, 6, 7, 9, 11, 20, 23], "specifi": [2, 6, 7, 22, 23], "split": [2, 6], "splitlin": 2, "sprintf": [8, 13], "src": 2, "srcaddr": 11, "sscanf": 18, "st": 21, "stack": [7, 14, 18, 20, 23], "stack_addr": 20, "stack_point": 7, "stack_pointer_regist": [7, 23], "stack_seg": 7, "stack_siz": 20, "standard": [8, 9, 23], "start": [0, 2, 4, 5, 6, 7, 14, 20, 22], "start_tim": 4, "startswith": 2, "stat": 5, "state": [0, 2, 4, 5, 6, 7, 8, 13, 14, 18, 19, 22], "static": [1, 2, 4, 6, 7, 8, 9, 10], "staticmethod": 9, "statist": [5, 14, 19], "statu": [3, 5, 7, 9, 12, 19, 21], "stderr": [1, 23], "stdin": [4, 9, 10, 15, 18, 22, 23], "stdin_fil": 10, "stdint": 18, "stdio": 18, "stdlib": 18, "stdout": [1, 23], "step": [0, 4, 5, 23], "still": [5, 14], "stm32f412": 17, "stop": [1, 2, 3, 4, 5, 13], "stop_at": 4, "stop_explor": [4, 5], "stopexplorationexcept": [3, 4], "store": [2, 6, 7, 9, 23], "str": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 20, 21, 22, 23], "straightforward": 17, "strategi": [1, 2, 5, 10, 15, 17, 22, 23], "strcasecmp": 13, "strchr": 13, "strcmp": 13, "strcpy": 13, "strdup": 13, "stream": 11, "strerror": 13, "strict": 2, "string": [2, 6, 7, 8, 9, 12, 13, 19, 21, 23], "string_ptr": 21, "strip": 2, "strlen": [13, 18], "strncasecmp": 13, "strncmp": 13, "strncpy": [13, 18], "strtok_r": 13, "strtoul": 13, "struct": 7, "structur": [0, 4, 6, 7, 17], "stub": [15, 17], "stuff": 23, "style": [7, 23], "sub": [2, 6, 12, 19], "subclass": [0, 14], "subgraph": 6, "subject": 23, "subsequ": [7, 8, 19], "subset": 23, "substitut": 2, "substr": 2, "succeed": 7, "successfulli": 23, "suffix": 2, "suitabl": 2, "super": 21, "superchunk": 6, "support": [1, 2, 6, 15, 18, 20, 22, 23], "suppos": 23, "sure": [17, 22], "swapcas": 2, "switch": [0, 1, 5, 7, 19, 23], "switch_thread": 7, "sy": 2, "sym": 11, "sym_al": 19, "sym_cl": 19, "sym_rax": 23, "sym_zf": 22, "symbol": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 13, 15, 19, 20, 21, 22], "symbolic_read": 11, "symbolic_se": 4, "symbolic_writ": 11, "symbolicexecutor": [0, 2, 3, 5, 8, 9, 13, 19, 21, 22, 23], "symbolicexplor": [0, 3, 4, 17, 19, 21, 22, 23], "symbolicexpress": [7, 11, 23], "symbolicvari": [7, 11], "symbolize_memory_byt": 7, "symbolize_regist": 7, "symbolizeregist": 7, "symex_solv": 0, "symexcallback": 0, "symexsolvingcallback": 0, "symextyp": [0, 2, 5, 11], "symptomat": 8, "symvar": 18, "symvar2": 18, "syscal": [7, 23], "sysent": 0, "system": 2, "t": [2, 5, 7, 17, 19], "tab": 2, "tabl": 2, "tabsiz": 2, "take": [2, 4, 7, 9, 18, 22, 23], "taken": [2, 4, 14, 23], "taken_addr": 2, "target": [2, 6, 7, 22], "task": 5, "temporarili": 7, "term": 2, "termin": [5, 9], "terminate_explor": 5, "test": [2, 5, 15, 18], "text": [1, 2], "th_id": 7, "than": [2, 4, 15, 20, 23], "thei": [2, 5, 11, 14, 19, 20, 21, 23], "theirs": [19, 23], "them": [0, 2, 5, 6, 7, 8, 9, 14, 18, 19, 20, 22], "theoret": [7, 20, 23], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 17, 18, 19, 20, 21, 22, 23], "thin": [7, 23], "thing": [2, 14], "third": [2, 17], "thoroughli": 14, "though": [2, 15], "thread": [0, 1, 7, 19, 23], "thread_context": 7, "thread_schedul": [1, 23], "threadcallback": 0, "threadcontext": 0, "three": 2, "through": [0, 5, 7, 8, 14, 15], "thu": [0, 3, 5, 6, 7, 8, 9, 11, 13, 23], "thumb": [6, 7, 11, 17], "tid": [7, 19], "time": [1, 4, 5, 7, 17, 23], "time_inc_coeffici": [1, 7, 23], "timeout": [1, 2, 6, 7, 10, 11, 23], "timeout_alwai": 2, "timeout_onc": 2, "timestamp": [5, 23], "tini": 7, "titl": 2, "titlecas": 2, "tmp": [12, 18, 23], "to_byt": 2, "to_fil": [1, 2], "to_json": 1, "todo": 6, "too": 2, "top": 7, "total": [2, 5], "total_emulation_tim": 5, "total_instruction_execut": [2, 23], "total_solving_tim": 5, "toward": 23, "trace": [2, 19], "trace_inst": 19, "trace_offset": 4, "traceexcept": 10, "track": [2, 4], "trail": 2, "translat": 2, "transmit": [0, 5, 19], "transpar": 23, "treat": 22, "treatment": 0, "tree": 12, "tri": [5, 8], "trigger": [0, 1, 8, 18], "triton": [0, 7, 11, 19, 23], "triton_workspac": [12, 23], "tritoncontext": 7, "tritonds": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23], "tritontrac": 10, "trivial": 14, "true": [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 14, 20, 21, 23], "truncat": 2, "try": [1, 2, 3, 7, 14, 17, 18, 21, 23], "tt_ctx": 7, "tune": 23, "tupe": 2, "tupl": [0, 2, 5, 6, 7, 8, 11, 20, 21], "turn": 7, "tutori": [17, 21, 22, 23], "two": [2, 6, 7, 17, 20, 22, 23], "txt": 22, "typ": [5, 21], "type": [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 14, 15, 19, 21, 22, 23], "typevar": 11, "typic": 12, "u": 2, "uaf": [8, 21], "uafsanit": [8, 21], "uid": 4, "uint32_t": 18, "unbind": 0, "unbound": 7, "uncas": 2, "uncoverable_item": 2, "under": [2, 15], "underli": [6, 7, 23], "underneath": 7, "unicod": 2, "unicodeencodeerror": 2, "union": [5, 6, 7, 12], "uniqu": [2, 4, 11], "unique_covitem_cov": 2, "unique_instruction_cov": 2, "unknown": 11, "unless": [2, 23], "unlik": 14, "unlimit": [1, 23], "unmap": 7, "unpack": 7, "unpack_integ": 7, "unregist": 0, "unregister_callback": 0, "unsafe_hash": 9, "unsat": [2, 5, 11], "unsat_onc": 2, "unsatisfi": 11, "unsign": [7, 18, 23], "unsound": 7, "unsupport": [19, 22, 23], "until": [5, 7, 14], "untouch": 2, "unwant": 21, "up": [2, 5, 7, 14, 22], "upcom": 0, "updat": [3, 5, 6, 7, 14, 23], "update_seed_loc": 12, "update_worklist": 14, "upon": 0, "upper": 2, "uppercas": 2, "upward": 7, "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23], "usabl": 2, "usag": [11, 15, 23], "user": [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 19, 22, 23], "userland": 20, "usual": [21, 23], "utf": 2, "util": 23, "v": 6, "v_addr": 6, "val": 7, "valid": [2, 9, 11, 22], "valu": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 13, 17, 18, 19, 22, 23], "valuat": 7, "valueerror": [2, 6], "values_blacklist": 7, "var": [18, 19], "var1": 22, "var_prefix": 22, "var_valu": 19, "vari": 7, "variabl": [0, 4, 6, 7, 9, 11, 17, 19, 23], "variant": [2, 21], "variou": [5, 6, 8, 11, 15, 18, 21, 23], "veri": [0, 2, 7, 23], "version": [0, 2], "via": [2, 8, 15, 22, 23], "view": 6, "violat": 0, "virtual": 6, "visual": 17, "void": [13, 22], "vulner": 17, "w": [6, 7, 11, 20], "wa": 10, "wai": [5, 7, 9, 22, 23], "wait": [6, 7], "want": [2, 7, 12, 14, 22], "warn": [6, 8, 19, 20, 22, 23], "we": [1, 2, 4, 6, 7, 14, 17, 19, 20, 21, 22, 23], "weak": [9, 23], "well": [0, 2], "were": 0, "what": [2, 19], "whatev": 2, "when": [0, 1, 2, 4, 6, 7, 14, 18, 22, 23], "where": [0, 2, 4, 5, 6, 7, 15, 19, 22, 23], "whether": [0, 1, 2, 4, 5, 7, 8, 9, 12, 19, 23], "which": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 14, 17, 19, 22, 23], "while": [17, 20, 21], "whitespac": 2, "whole": [0, 1, 3, 4, 7, 15, 23], "whose": [2, 22], "wich": 19, "width": 2, "willing": [0, 12], "win": 19, "window": [4, 11], "with_pp": 7, "within": [2, 4, 7, 9], "without": [2, 7, 14], "without_segment": 7, "woklist": 14, "won": 19, "word": [2, 7], "work": [2, 4, 7, 8, 14, 15, 23], "worklist": [0, 12, 14, 22], "worklist_dir": 12, "worklistaddresstoset": 14, "worklistrand": 14, "workspac": [1, 2, 4, 5, 14, 21, 22], "workspace_reset": 1, "world": 23, "would": [5, 19], "wrap": [6, 7], "wrapper": [7, 23], "write": [0, 2, 7, 8, 11, 12, 13], "write_argument_valu": 7, "write_char": 7, "write_dword": 7, "write_int": [7, 23], "write_long": [7, 23], "write_long_long": 7, "write_ptr": [7, 23], "write_qword": 7, "write_regist": [7, 23], "write_stack_valu": 7, "write_symbolic_memory_byt": 7, "write_symbolic_memory_int": 7, "write_symbolic_regist": [7, 23], "write_word": 7, "written": [0, 5, 7, 19, 23], "wrong": 6, "x": [2, 6, 7, 11, 14, 19, 20, 23], "x64": 10, "x86": [4, 7, 11, 20], "x86_64": [11, 23], "x89": 23, "xd1": 23, "xe2h": 23, "xedi": 23, "xmlcharrefreplac": 2, "xor": 19, "y": [2, 14], "yet": [7, 9, 14, 19], "yield": [2, 6, 20], "you": [0, 17, 18], "yourself": 18, "z3": [1, 11], "zero": 2, "zf": [19, 22], "zfill": 2}, "titles": ["Callback Mechanism", "Configuration", "Coverage", "Exception", "SymbolicExecutor", "SymbolicExplorator", "Loaders", "Context", "Sanitizers", "Seed", "Trace", "Types", "Workspace", "Supported Routines", "Seed Scheduling", "TritonDSE", "Crackme", "JSON Parser", "Toy Example", "Playing with Hooks", "Loaders", "Sanitizers &amp; Probes", "Managing Seeds", "Getting Started"], "titleterms": {"0": 18, "1": 18, "2": 18, "2015": 16, "2016": 16, "3": 18, "4": 18, "5": 18, "One": 18, "address": 19, "angri": 16, "api": 23, "arbitrari": 22, "b": 23, "built": 21, "c": 23, "callback": 0, "callbackmanag": 0, "cle": 20, "cleload": 6, "concret": 23, "configur": [1, 23], "context": 7, "corpu": [22, 23], "coverag": 2, "cpustat": 7, "crackm": 16, "creat": 6, "ctf": 16, "differ": 15, "elf": 20, "event": 19, "exampl": 18, "except": 3, "execut": 23, "exist": 14, "explor": [19, 23], "firmwar": 20, "function": [19, 23], "gener": 22, "get": [15, 23], "hackcon": 16, "hackov": 16, "heapalloc": 7, "hook": 19, "how": 22, "i": [19, 23], "ii": [19, 23], "iii": [19, 23], "inform": 17, "initi": 22, "inject": 22, "input": 18, "instal": 15, "instruct": 19, "interfac": 0, "introduct": 17, "iv": [19, 23], "json": 17, "length": 18, "linux": [13, 20], "load": 20, "loader": [6, 20], "manag": 22, "manipul": 23, "mechan": [0, 21], "memori": [7, 23], "multipl": 18, "new": 6, "non": 18, "object": 17, "off": 18, "parser": 17, "plai": 19, "practic": 17, "probe": [0, 21], "processst": 7, "program": [6, 23], "python": 23, "queri": 19, "quokkaprogram": 6, "r150": 16, "rawbinaryload": 6, "read": [18, 23], "regist": 23, "revers": 16, "routin": 13, "sanit": [8, 21], "schedul": 14, "seed": [9, 14, 22], "seedmanag": 5, "set": 22, "signatur": 0, "singl": 23, "solv": 19, "sourc": 18, "standard": 18, "start": [15, 23], "state": 23, "statu": 22, "strategi": 14, "string": 18, "support": 13, "symbol": [18, 23], "symbolicexecutor": 4, "symbolicexplor": 5, "threadcontext": 7, "tip": 17, "todo": [0, 7, 13], "toi": 18, "trace": 10, "triton": 15, "tritonds": 15, "type": 11, "us": 21, "v": 23, "variabl": 22, "vi": 23, "vii": 23, "window": 13, "workspac": [12, 23], "write": [18, 20, 21, 23]}})