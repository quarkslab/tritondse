Search.setIndex({"docnames": ["api/callbacks", "api/configuration", "api/coverage", "api/exception", "api/executor", "api/explorator", "api/loaders", "api/process", "api/sanitizers", "api/seeds", "api/tracing", "api/types", "api/workspace", "dev_doc/routines", "dev_doc/seedscheduling", "index", "practicals/crackme", "practicals/json_parser", "practicals/toy_example", "tutos/hooks", "tutos/loaders", "tutos/sanitizers", "tutos/seeds", "tutos/starting"], "filenames": ["api/callbacks.rst", "api/configuration.rst", "api/coverage.rst", "api/exception.rst", "api/executor.rst", "api/explorator.rst", "api/loaders.rst", "api/process.rst", "api/sanitizers.rst", "api/seeds.rst", "api/tracing.rst", "api/types.rst", "api/workspace.rst", "dev_doc/routines.rst", "dev_doc/seedscheduling.rst", "index.rst", "practicals/crackme.rst", "practicals/json_parser.rst", "practicals/toy_example.rst", "tutos/hooks.ipynb", "tutos/loaders.ipynb", "tutos/sanitizers.ipynb", "tutos/seeds.ipynb", "tutos/starting.ipynb"], "titles": ["Callback Mechanism", "Configuration", "Coverage", "Exception", "SymbolicExecutor", "SymbolicExplorator", "Loaders", "Context", "Sanitizers", "Seed", "Trace", "Types", "Workspace", "Supported Routines", "Seed Scheduling", "TritonDSE", "Crackme", "JSON Parser", "Toy Example", "Playing with Hooks", "Loaders", "Sanitizers &amp; Probes", "Managing Seeds", "Getting Started"], "terms": {"The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "whole": [0, 1, 3, 4, 7, 15, 23], "interact": [0, 7], "from": [0, 1, 2, 4, 5, 6, 7, 9, 10, 12, 14, 15, 17, 19, 20, 21, 22, 23], "tritonds": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23], "user": [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 19, 22, 23], "written": [0, 5, 7, 19, 23], "code": [0, 2, 4, 5, 9, 17, 23], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22], "perform": [0, 1, 2, 4, 5, 7, 8, 14, 15, 18, 19, 20, 21, 23], "through": [0, 5, 7, 8, 14, 15], "most": [0, 14, 23], "doe": [0, 2, 4, 5, 6, 7, 8, 9, 12, 13, 18, 19], "expect": [0, 20], "return": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 20, 21, 23], "valu": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 13, 17, 18, 19, 22, 23], "provid": [0, 1, 5, 6, 7, 12, 14, 15, 18, 20, 21, 22, 23], "argument": [0, 1, 6, 7, 10, 23], "all": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 15, 19, 20, 21, 22, 23], "necessari": [0, 4, 22], "variabl": [0, 4, 6, 7, 9, 11, 17, 19, 23], "which": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 14, 17, 19, 22, 23], "enabl": [0, 1, 2, 7, 9, 10, 11, 14, 15, 17, 19, 20, 21, 23], "chang": [0, 1, 2, 7, 22, 23], "state": [0, 2, 4, 5, 6, 7, 8, 13, 14, 18, 19, 22], "execut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22], "event": [0, 7, 15], "can": [0, 2, 3, 4, 6, 7, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23], "caught": [0, 3, 4], "ar": [0, 1, 2, 5, 6, 7, 9, 11, 12, 14, 15, 16, 17, 20, 21, 22, 23], "address": [0, 2, 4, 6, 7, 8, 10, 11, 14, 17, 20, 21, 23], "reach": [0, 14, 19], "instruct": [0, 1, 2, 3, 4, 6, 7, 8, 15, 17, 23], "them": [0, 2, 5, 6, 7, 8, 9, 14, 18, 19, 20, 22], "memori": [0, 1, 2, 4, 6, 8, 11, 15, 17, 19, 20, 21, 22], "read": [0, 2, 7, 8, 9, 11, 12, 13, 19, 21, 22], "regist": [0, 2, 4, 5, 7, 11, 19, 20, 21, 22], "function": [0, 1, 2, 4, 5, 6, 7, 8, 9, 13, 14, 17, 18, 20, 21, 22], "its": [0, 5, 6, 7, 9, 12, 13, 14, 15, 18, 19, 20, 21, 23], "name": [0, 1, 2, 4, 6, 7, 9, 11, 12, 19, 20, 23], "end": [0, 2, 4, 5, 6, 7, 9, 14, 17, 19, 22], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23], "thread": [0, 1, 7, 19, 23], "context": [0, 6, 19, 23], "switch": [0, 1, 5, 7, 19, 23], "specif": [0, 6, 7, 9, 11, 20, 23], "mnemon": 0, "e": [0, 1, 6, 7, 11, 19], "g": [0, 1, 6, 7, 11], "sysent": 0, "byte": [0, 1, 4, 5, 6, 7, 8, 9, 11, 12, 19, 21, 22, 23], "new": [0, 1, 2, 4, 5, 7, 8, 9, 12, 14, 19, 21, 22, 23], "input": [0, 1, 2, 4, 5, 8, 9, 11, 13, 14, 15, 17, 19, 21, 22, 23], "creation": [0, 19], "befor": [0, 1, 4, 14, 19, 23], "get": [0, 4, 5, 6, 7, 12, 14, 19, 20], "append": [0, 19, 21], "pool": [0, 19], "seed": [0, 1, 3, 4, 5, 12, 13, 15, 17, 18, 19, 21, 23], "except": [0, 4, 7, 10, 18], "access": [0, 1, 2, 7, 23], "invalid": 0, "map": [0, 1, 6, 7, 14, 20, 23], "permiss": [0, 6, 7, 11], "onli": [0, 2, 4, 6, 11, 14, 17, 19, 20, 22, 23], "accept": 0, "modifi": [0, 7, 19, 23], "That": [0, 4, 5, 7, 8, 9, 14, 21, 22, 23], "post": [0, 2, 5, 19], "process": [0, 2, 4, 5, 7, 8, 9, 13, 14, 22, 23], "just": [0, 7, 8, 9, 14, 17, 18, 21, 22, 23], "enter": 0, "especi": 0, "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23], "recomput": 0, "some": [0, 2, 5, 9, 14, 15, 17, 18, 19, 21, 23], "field": [0, 1, 9, 22, 23], "etc": [0, 5, 6, 7, 19, 21, 23], "meant": [0, 4, 5, 7, 9, 11, 14, 22], "object": [0, 2, 4, 5, 6, 7, 9, 10, 11, 12, 19, 20, 21, 23], "manag": [0, 4, 5, 7, 14, 19, 21], "symbolicexplor": [0, 3, 4, 17, 19, 21, 22, 23], "transmit": [0, 5, 19], "everi": [0, 6, 8, 14, 19], "symbolicexecutor": [0, 2, 3, 5, 8, 9, 13, 19, 21, 22, 23], "abl": [0, 7, 8, 23], "catch": 0, "In": [0, 1, 6, 7, 18, 19, 20, 22, 23], "trigger": [0, 1, 8, 18], "indiffer": 0, "ani": [0, 2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 19, 22, 23], "A": [0, 1, 2, 6, 8, 9, 12, 19, 21, 22, 23], "willing": [0, 12], "do": [0, 2, 4, 7, 12, 22], "per": 0, "oper": [0, 7], "shall": [0, 19, 23], "other": [0, 2, 7, 9, 14, 15, 19, 20, 21, 23], "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 20, 21, 22], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "aggreg": 0, "plug": 0, "insid": [0, 7], "run": [0, 4, 5, 7, 9, 10, 14, 17, 19, 23], "session": 0, "intern": [0, 4, 5, 6, 11, 14], "structur": [0, 6, 7, 17], "ensur": 0, "check": [0, 2, 5, 7, 8, 9, 18, 21, 23], "presenc": 0, "made": [0, 9, 19], "log": [0, 6, 7, 12, 23], "n": [0, 7, 9], "design": [0, 15], "bind_to": 0, "se": [0, 8, 13, 19, 21, 22], "none": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 19, 20, 21], "bind": [0, 4], "given": [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 14, 19, 20, 21, 22, 23], "step": [0, 4, 5, 23], "requir": [0, 7, 12, 18, 20, 23], "triton": [0, 7, 11, 19, 23], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 17, 18, 19, 20, 21, 22, 23], "also": [0, 2, 5, 7, 8, 9, 12, 15, 19, 20, 23], "keep": [0, 2, 7, 14, 23], "refer": [0, 7, 9], "import": [0, 6, 19, 20, 21, 22, 23], "you": [0, 17, 18], "must": [0, 1, 6, 7, 9, 22], "call": [0, 1, 2, 4, 5, 6, 7, 12, 14, 17, 19, 21, 22, 23], "unbind": 0, "onc": [0, 12, 14], "finish": [0, 5, 6], "paramet": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 22, 23], "fork": 0, "current": [0, 1, 2, 3, 4, 5, 6, 7, 12, 13, 18, 22], "instanc": [0, 1, 2, 4, 5, 6, 9, 13, 14, 19, 22], "method": [0, 4, 6, 7, 8, 9, 14, 20, 21, 22, 23], "each": [0, 1, 2, 5, 6, 7, 14, 19, 23], "concurr": 0, "have": [0, 2, 3, 4, 7, 9, 14, 15, 19, 20, 21, 22, 23], "own": [0, 1, 12, 20, 21, 23], "off": [0, 7, 14], "fresh": [0, 1, 9, 14, 22], "type": [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 14, 15, 19, 21, 22, 23], "get_address_callback": 0, "addr": [0, 2, 4, 6, 7, 8, 11, 19, 20, 21, 22], "tupl": [0, 2, 5, 6, 7, 8, 11, 20, 21], "list": [0, 1, 2, 4, 6, 7, 8, 9, 10, 20, 21, 22, 23], "addrcallback": 0, "pre": [0, 3, 4, 19], "where": [0, 4, 5, 6, 7, 15, 19, 22, 23], "contain": [0, 2, 5, 7, 8, 9, 12, 17, 18, 19, 22, 23], "respect": [0, 7, 20], "get_context_switch_callback": 0, "threadcallback": 0, "when": [0, 1, 2, 6, 7, 14, 18, 22, 23], "being": [0, 2, 3, 5, 6, 7, 22, 23], "schedul": [0, 1, 5, 15], "defin": [0, 1, 2, 6, 7, 9, 14, 19, 20, 22, 23], "get_execution_callback": 0, "symexcallback": 0, "symbol": [0, 1, 2, 4, 5, 6, 7, 8, 11, 13, 15, 19, 20, 21, 22], "get_exploration_step_callback": 0, "explorationstepcallback": 0, "explor": [0, 1, 2, 3, 4, 5, 12, 14, 15, 17, 18, 21, 22], "get_imported_routine_callback": 0, "routine_nam": 0, "str": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 20, 21, 22, 23], "rtncallback": 0, "routin": [0, 1, 7, 8, 18, 19, 23], "get_instruction_callback": 0, "instrcallback": 0, "get_memory_violation_callback": 0, "memoryviolationcallback": 0, "violat": 0, "get_mnemonic_callback": 0, "opcod": 0, "mnemoniccallback": 0, "get_new_input_callback": 0, "newinputcallback": 0, "gener": [0, 2, 4, 5, 6, 7, 8, 10, 12, 14, 20, 23], "smt": [0, 1, 2, 4, 5, 7, 8, 11, 14, 19, 21, 23], "get_on_branch_covered_callback": 0, "branchcoveredcallback": 0, "branch": [0, 1, 2, 7, 14, 18, 22, 23], "about": [0, 5], "solv": [0, 1, 2, 5, 7, 8, 11, 14, 16, 21, 22, 23], "cover": [0, 1, 2, 9, 14, 23], "get_on_solving_callback": 0, "symexsolvingcallback": 0, "get_opcode_callback": 0, "opcodecallback": 0, "is_bind": 0, "bool": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 23], "ha": [0, 2, 4, 6, 7, 8, 9, 14, 15, 20, 22, 23], "alreadi": [0, 2, 3, 4, 7, 9, 12, 14], "been": [0, 2, 4, 6, 7, 8, 9, 14, 15, 20, 22, 23], "true": [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 14, 20, 21, 23], "is_empti": 0, "whether": [0, 1, 2, 4, 5, 7, 8, 9, 12, 19, 23], "alredai": 0, "were": 0, "register_addr_callback": 0, "po": 0, "cbpo": 0, "after": [0, 2, 5, 7, 8, 9, 14, 17, 19, 23], "associ": [0, 1, 4, 6, 7, 9, 10, 11, 19, 22], "register_exploration_step_callback": 0, "itself": [0, 9, 11, 20], "register_function_callback": 0, "func_nam": 0, "resolv": [0, 6, 18, 20], "register_instruction_callback": 0, "side": [0, 23], "effect": [0, 23], "appli": [0, 1, 7, 15, 23], "processst": [0, 3, 4, 8, 13, 19, 20, 21, 22, 23], "register_memory_read_callback": 0, "memreadcallback": 0, "concret": [0, 1, 2, 4, 7, 13, 14, 22], "memcallback": 0, "register_memory_violation_callback": 0, "occur": [0, 1, 2], "dure": [0, 2, 4, 7, 9, 18, 22, 23], "emul": [0, 1, 4, 5, 15, 17, 18, 20, 23], "register_memory_write_callback": 0, "memwritecallback": 0, "write": [0, 2, 7, 8, 11, 12, 13], "register_mnemonic_callback": 0, "register_new_input_callback": 0, "solver": [0, 1, 7, 11], "find": [0, 5, 6, 7, 17, 23], "model": [0, 1, 4, 7, 11, 19, 21, 22, 23], "treatment": 0, "worklist": [0, 12, 14, 22], "It": [0, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 18, 20, 22, 23], "thu": [0, 3, 5, 6, 7, 8, 9, 11, 13, 23], "allow": [0, 1, 6, 7, 14, 22, 23], "put": [0, 7, 13, 19, 21, 22], "queue": [0, 4, 5], "register_on_branch_covered_callback": 0, "register_on_solving_callback": 0, "result": [0, 6, 7, 17], "go": [0, 21, 22, 23], "ahead": 0, "skip": [0, 3, 4, 23], "branchsolvingcallback": 0, "register_opcode_callback": 0, "register_post_addr_callback": [0, 19], "equival": [0, 23], "site": [0, 10], "assum": [0, 7], "register_post_execution_callback": [0, 19, 22], "program": [0, 1, 3, 4, 5, 7, 9, 11, 15, 18, 19, 20, 21, 22], "load": [0, 1, 4, 6, 7, 10, 15, 17, 19, 23], "initi": [0, 4, 6, 7, 12, 13, 20], "upon": 0, "exit": [0, 4, 7, 13, 14, 17, 18], "crash": [0, 5, 8, 9, 12, 18, 21, 22, 23], "register_post_imported_routine_callback": [0, 19], "register_post_instruction_callback": [0, 19], "engin": [0, 9], "register_post_mnemonic_callback": 0, "register_post_opcode_callback": 0, "register_pre_addr_callback": [0, 22], "register_pre_execution_callback": [0, 19], "first": [0, 2, 6, 7, 14, 17, 21, 23], "register_pre_imported_routine_callback": 0, "register_pre_instruction_callback": [0, 19], "register_pre_mnemonic_callback": 0, "register_pre_opcode_callback": 0, "register_prob": [0, 21], "probeinterfac": [0, 8, 21], "iter": [0, 1, 2, 4, 5, 6, 7, 12, 14, 19, 22, 23], "cb": 0, "attribut": [0, 6, 7, 9, 23], "entri": [0, 8, 18, 20], "self": [0, 2, 9, 20, 21], "implement": [0, 2, 7, 9, 14, 17, 20], "cbtype": [0, 8, 21], "register_register_read_callback": 0, "regreadcallback": 0, "register_register_write_callback": 0, "regwritecallback": 0, "register_thread_context_switch_callback": 0, "reset": [0, 7, 19], "well": 0, "unregister_callback": 0, "callabl": [0, 7, 8, 19, 21], "unregist": 0, "remov": [0, 5, 6, 7, 14, 19], "auxiliari": 0, "enumer": [0, 1, 2, 21], "enmu": 0, "repres": [0, 2, 3, 5, 6, 7, 11, 13, 23], "posit": [0, 7], "2": [0, 2, 5, 6, 7, 9, 11, 17, 19, 20, 21, 22, 23], "1": [0, 2, 5, 7, 9, 11, 17, 19, 21, 23], "probeintefac": 0, "veri": [0, 2, 7, 23], "simpl": [0, 7, 15, 18, 21, 23], "multipl": [0, 17, 23], "subclass": [0, 14], "local": 0, "attriubt": 0, "relat": [0, 2, 5, 7], "inform": [0, 1, 5, 7], "properti": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 18, 20, 21], "might": [0, 4, 5, 8, 12, 14, 23], "evolv": 0, "upcom": 0, "version": 0, "enum": [0, 2, 5, 6, 7, 9, 11, 23], "kind": [0, 18], "branch_cov": 0, "20": 0, "ctx_switch": 0, "explore_step": 0, "15": 0, "memory_read": 0, "memory_writ": 0, "3": [0, 5, 9, 10, 11, 19, 21], "mem_viol": 0, "22": 0, "new_input": 0, "14": 0, "post_addr": 0, "5": [0, 11, 20], "post_exec": 0, "6": [0, 20], "post_inst": 0, "7": [0, 6, 18, 20], "post_mnem": 0, "17": 0, "post_opcod": 0, "19": 0, "post_rtn": 0, "4": [0, 2, 5, 7, 11, 19, 20, 21, 23], "pre_addr": 0, "8": [0, 2, 7, 18, 19, 23], "pre_exec": 0, "9": [0, 18], "pre_inst": 0, "10": [0, 1, 6, 10, 13, 23], "pre_mnem": 0, "16": [0, 2], "pre_opcod": 0, "18": 0, "pre_rtn": [0, 21], "11": 0, "reg_read": 0, "12": [0, 7, 10], "reg_writ": 0, "13": [0, 7], "symex_solv": 0, "21": [0, 19], "alia": [0, 2, 7, 11, 23], "int": [0, 1, 2, 4, 5, 6, 7, 9, 10, 11, 13, 14, 17, 18, 19, 20, 22, 23], "memoryaccessviol": [0, 7], "memoryaccess": 0, "option": [0, 1, 4, 5, 6, 7, 9, 12, 20, 21], "union": [0, 2, 5, 6, 7, 11, 12], "express": [0, 1, 7, 11, 23], "symextyp": [0, 2, 5, 11], "threadcontext": 0, "config": [1, 4, 5, 7, 19, 21, 22, 23], "seed_format": [1, 19, 22, 23], "seedformat": [1, 9, 19, 22, 23], "raw": [1, 4, 6, 9, 22, 23], "pipe_stdout": [1, 19, 22, 23], "fals": [1, 6, 7, 9, 10, 12, 19, 21, 22, 23], "pipe_stderr": [1, 23], "skip_sleep_routin": [1, 23], "smt_solver": 1, "smtsolver": [1, 11], "z3": [1, 11], "smt_timeout": [1, 23], "5000": 1, "execution_timeout": [1, 4, 23], "0": [1, 4, 5, 6, 7, 8, 9, 11, 19, 20, 21, 22, 23], "exploration_timeout": [1, 23], "exploration_limit": [1, 23], "thread_schedul": [1, 23], "200": 1, "smt_queries_limit": [1, 5, 23], "1200": 1, "smt_enumeration_limit": 1, "40": 1, "coverage_strategi": [1, 22, 23], "coveragestrategi": [1, 2, 10, 17, 21, 22, 23], "block": [1, 2, 6, 15], "branch_solving_strategi": [1, 23], "branchsolvingstrategi": [1, 2], "first_last_not_cov": [1, 2], "workspac": [1, 2, 4, 5, 14, 21, 22], "program_argv": [1, 23], "time_inc_coeffici": [1, 7, 23], "float": [1, 5, 7, 23], "1e": 1, "05": 1, "skip_unsupported_import": 1, "skip_unsupported_instruct": 1, "memory_segment": 1, "data": [1, 2, 3, 4, 5, 6, 7, 9, 12, 18, 22, 23], "hold": [1, 5, 7, 9], "strategi": [1, 2, 5, 10, 15, 17, 22, 23], "singl": [1, 2, 4, 5, 6, 7, 22], "For": [1, 2, 7, 14, 18, 19, 21, 23], "non": [1, 2, 3, 7], "we": [1, 2, 4, 6, 7, 14, 17, 19, 20, 21, 22, 23], "try": [1, 2, 3, 7, 14, 17, 18, 21, 23], "more": [1, 2, 9, 15, 20, 21, 22, 23], "seldomli": 1, "default": [1, 2, 6, 7, 9, 18, 22, 23], "coverag": [1, 4, 5, 6, 9, 10, 14, 15, 17, 18, 22, 23], "custom": [1, 7, 15], "carrier": 1, "add": [1, 2, 4, 5, 6, 7, 14, 19, 21, 22, 23], "timeout": [1, 2, 6, 7, 10, 11, 23], "If": [1, 2, 4, 5, 6, 7, 8, 9, 12, 19, 20, 23], "file": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 17, 18, 20, 21, 22, 23], "mark": [1, 4, 8, 13, 21], "hang": [1, 4, 5, 9, 12, 22], "second": [1, 2, 4], "mean": [1, 5, 9, 23], "unlimit": [1, 23], "number": [1, 2, 5, 7, 14, 23], "overal": [1, 2, 23], "static": [1, 2, 4, 6, 7, 8, 9, 10], "from_fil": [1, 2, 9, 10], "path": [1, 2, 5, 6, 7, 9, 10, 11, 12, 14, 15, 20, 22, 23], "from_json": 1, "": [1, 4, 6, 7, 8, 9, 18, 19, 21, 22, 23], "json": [1, 2, 9], "text": 1, "is_format_composit": 1, "format": [1, 6, 7, 8, 9, 20, 21, 22], "composit": [1, 4, 9, 18, 19, 22, 23], "is_format_raw": 1, "segment": [1, 6, 7, 15, 20, 23], "enforc": [1, 7], "activ": [1, 6, 7], "belong": [1, 6], "area": [1, 7, 8, 17], "pipe": [1, 23], "stderr": [1, 23], "python": [1, 7, 10, 11, 15], "stdout": [1, 23], "command": [1, 23], "line": [1, 23], "either": [1, 4, 6, 7, 11, 23], "see": [1, 7, 17, 22, 23], "py": [1, 2, 10, 18, 22], "sleep": [1, 13, 23], "stop": [1, 3, 4, 5, 13], "hit": 1, "extern": [1, 6, 7, 20], "support": [1, 6, 15, 18, 20, 22, 23], "semant": 1, "limit": [1, 7, 23], "retriev": [1, 6, 7, 9, 19, 22, 23], "dynam": [1, 2, 7, 11, 23], "jump": [1, 2, 11], "queri": [1, 5, 6, 7, 8, 23], "millisecond": [1, 7, 23], "next": [1, 3, 5, 14, 23], "At": [1, 7, 9, 14, 15, 22], "moment": [1, 2, 15], "round": 1, "robin": 1, "manner": [1, 2, 7, 23], "time": [1, 4, 5, 7, 17, 23], "increment": [1, 7], "coeffici": [1, 7], "determinist": 1, "behavior": [1, 7, 13], "gettimeofdai": [1, 13], "clock_gettim": [1, 13], "exampl": [1, 20, 21, 22], "0001": [1, 7], "represent": [1, 6, 7, 9, 13], "100u": 1, "00001": 1, "to_fil": [1, 2], "save": [1, 2, 7, 12], "to_json": 1, "convert": [1, 9, 13], "output": [1, 6], "directori": [1, 12, 22, 23], "flag": [2, 8, 11, 18, 19], "base": [2, 6, 7, 8, 9, 13, 14, 15, 17, 19, 20, 22, 23], "intflag": 2, "trace": [2, 19], "coveragesinglerun": [2, 4, 6, 10, 23], "all_not_cov": 2, "last": [2, 5, 6, 7, 14], "member": [2, 9, 11], "valid": [2, 9, 11, 22], "follow": [2, 3, 6, 7, 9, 11, 14, 15, 16, 17, 19, 20, 21, 22, 23], "unsat_onc": 2, "unsat": [2, 5, 11], "again": 2, "timeout_onc": 2, "timeout_alwai": 2, "alwai": [2, 14], "incompat": 2, "cover_sym_dynjump": 2, "32": [2, 7, 11, 23], "cover_sym_read": 2, "64": [2, 7, 11, 20, 23], "cover_sym_writ": 2, "128": [2, 22, 23], "sound_mem_access": 2, "256": 2, "ad": [2, 4, 5, 7, 8, 22, 23], "constraint": [2, 5, 7, 11, 19, 21, 23], "manual": [2, 7, 15, 18, 20, 22, 23], "512": 2, "disabl": [2, 7], "automat": [2, 7, 9, 15, 21, 22, 23], "done": [2, 21, 22, 23], "callback": [2, 3, 4, 5, 7, 8, 17, 19, 20, 21, 22], "covitem": [2, 5], "variant": [2, 21], "item": [2, 4, 6, 7, 19], "edg": [2, 6, 11, 15], "string": [2, 6, 7, 8, 9, 12, 13, 19, 21, 23], "pathhash": [2, 11], "both": [2, 7, 9, 17, 19, 23], "produc": [2, 22, 23], "depend": [2, 5, 7, 12, 14, 15, 23], "constructor": [2, 6, 7, 14], "store": [2, 6, 7, 9, 23], "differ": [2, 5, 6, 14, 17, 21, 22, 23], "emploi": 2, "add_covered_address": 2, "obj": 2, "add_covered_branch": 2, "program_count": [2, 7, 23], "taken_addr": 2, "not_taken_addr": 2, "our": [2, 19, 21, 23], "encod": [2, 11, 19], "accord": [2, 5, 7, 12], "tupe": 2, "src": 2, "dst": 2, "md5": [2, 6, 9], "conjunct": 2, "taken": [2, 4, 14, 23], "target": [2, 6, 7, 22], "add_covered_dynamic_branch": 2, "covered_instruct": 2, "dict": [2, 6, 7, 9, 20, 22], "counter": [2, 4, 7, 23], "covered_item": 2, "whatev": 2, "thei": [2, 5, 11, 14, 19, 20, 21, 23], "set": [2, 3, 4, 5, 6, 7, 8, 9, 11, 14, 15, 17, 19, 21, 23], "is_cov": 2, "should": [2, 3, 4, 6, 7, 12, 14, 22, 23], "match": [2, 6, 12, 19], "post_execut": [2, 5, 14], "clean": [2, 5, 14], "up": [2, 5, 7, 14, 22], "Not": 2, "anythin": 2, "pp_item": 2, "pretti": [2, 5], "print": [2, 5, 8, 14, 19, 22, 23], "total_instruction_execut": [2, 23], "total": [2, 5], "unique_covitem_cov": 2, "uniqu": [2, 4, 11], "unique_instruction_cov": 2, "metric": 2, "track": [2, 4], "basic": [2, 5, 8, 14, 15, 20], "cfg": 2, "prefixed_edg": 2, "take": [2, 4, 7, 9, 18, 22, 23], "account": [2, 7, 23], "prefix": [2, 7, 13], "globalcoverag": [2, 5, 14], "branch_strategi": 2, "global": [2, 5, 14], "fill": [2, 22], "merg": [2, 6], "creat": [2, 4, 7, 9, 12, 20, 21, 22, 23], "coverage_fil": 2, "can_cover_symbolic_point": 2, "determin": [2, 9], "so": [2, 8, 19, 20, 21, 23], "mai": [2, 7], "want": [2, 7, 12, 14, 22], "even": [2, 6, 15], "though": [2, 15], "can_improve_coverag": 2, "know": [2, 5, 14, 17, 18], "relev": [2, 4, 14], "against": 2, "clone": 2, "covered_symbolic_point": 2, "pointer": [2, 3, 7, 8, 15, 18, 22, 23], "improve_coverag": 2, "than": [2, 15, 20, 23], "between": [2, 6], "two": [2, 6, 7, 17, 20, 22, 23], "iter_new_path": 2, "path_constraint": 2, "pathconstraint": [2, 7, 11], "pathbranch": [2, 11], "solverstatu": [2, 7, 11, 19, 21, 22], "predic": [2, 7, 23], "yield": [2, 6, 20], "patchconstraint": 2, "consid": [2, 7, 9], "act": [2, 7, 10], "black": 2, "box": 2, "seedmanag": [2, 14], "what": [2, 19], "under": [2, 15], "hood": 2, "perspect": 2, "goal": [2, 15, 17, 18], "manipul": [2, 5, 7, 22], "without": [2, 7, 14], "thing": [2, 14], "coveragesingerun": 2, "new_items_to_cov": 2, "addres": 2, "possibl": [2, 8, 13, 22, 23], "negat": [2, 14, 18, 22], "not_covered_item": 2, "pending_coverag": 2, "pend": [2, 4, 5, 12, 14], "These": [2, 5, 18, 21, 23], "post_explor": [2, 5, 14], "uncoverable_item": 2, "abortexecutionexcept": [3, 4], "rai": 3, "care": [3, 4, 9, 22, 23], "statu": [3, 5, 7, 9, 12, 19, 21], "allocatorexcept": [3, 7], "messag": [3, 7], "heap": [3, 7, 8, 15], "alloc": [3, 7, 15, 21], "rais": [3, 4, 6, 7, 8, 9, 18, 20], "condit": [3, 7, 11, 22], "overflow": [3, 7, 8, 18], "size": [3, 6, 7, 9, 11, 18, 20, 23], "free": [3, 7, 8, 13], "freed": [3, 7, 8], "skipinstructionexcept": [3, 4], "evalu": [3, 7], "forc": [3, 7, 19], "fetch": [3, 7], "updat": [3, 5, 6, 7, 14, 23], "rip": [3, 7, 19, 23], "stopexplorationexcept": [3, 4], "uid": 4, "modul": 4, "charg": [4, 5], "configur": [4, 5], "inject": [4, 9, 15, 17, 18], "stdin": [4, 9, 10, 15, 18, 22, 23], "argv": [4, 9, 15, 18, 19, 22, 23], "instanci": [4, 5, 7], "id": [4, 7, 11], "identifi": [4, 6, 7, 11, 23], "callbackmanag": [4, 5, 19], "empti": [4, 6, 7, 9], "abort": [4, 13, 19], "noreturn": 4, "work": [4, 7, 8, 14, 15, 23], "appropri": [4, 5, 6, 7, 19, 22, 23], "afterward": 4, "anywher": 4, "callback_manag": [4, 5, 19, 21, 22], "cbm": [4, 5], "current_pc": 4, "emulation_deinit": 4, "emulation_init": 4, "end_tim": 4, "enqueue_se": [4, 21, 22], "later": [4, 22], "execution_tim": 4, "exitcod": [4, 19, 22, 23], "simpli": [4, 8], "return_regist": [4, 7, 23], "rax": [4, 7, 19, 23], "x86": [4, 7, 11, 20], "r0": 4, "arm": [4, 6, 7, 11, 17], "inject_symbolic_argv_memori": 4, "index": [4, 6, 7], "ith": [4, 7], "To": [4, 20, 23], "inject_symbolic_file_memori": 4, "offset": [4, 7, 11], "part": [4, 17], "content": [4, 6, 7, 9, 12, 18, 19, 22, 23], "within": [4, 7, 9], "partial": [4, 6], "inject_symbolic_file_regist": 4, "reg": 4, "integ": [4, 7, 8, 11, 13, 23], "inject_symbolic_raw_input": 4, "inject_symbolic_variable_memori": [4, 22], "inject_symbolic_variable_regist": [4, 22], "is_seed_inject": 4, "insert": [4, 6, 14], "loader": [4, 5, 7, 15, 17, 23], "overrid": [4, 7, 12, 22], "describ": [4, 6, 9], "how": [4, 6, 9, 17, 18, 20, 23], "load_process": 4, "pstate": [4, 8, 13, 19, 21, 22, 23], "noth": 4, "prcoessstat": 4, "mem_usage_str": 4, "debug": [4, 6, 23], "consumpt": 4, "mk_new_seed_from_model": [4, 21, 22], "pending_se": 4, "gather": [4, 10], "previous_pc": 4, "previou": [4, 12, 23], "stop_at": 4, "forev": 4, "skip_instruct": 4, "inst": [4, 19], "start_tim": 4, "start": [4, 5, 6, 7, 14, 20, 22], "continu": 4, "stop_explor": [4, 5], "trace_offset": 4, "accross": 4, "executor_stop_at": 5, "seed_scheduler_class": 5, "seedschedul": [5, 14], "avail": [5, 7, 14, 15, 17, 20, 23], "along": [5, 7], "wai": [5, 7, 9, 22, 23], "add_input_se": [5, 19, 22, 23], "realli": [5, 19], "current_executor": 5, "executor": [5, 8, 18, 19, 20, 23], "execution_count": [5, 23], "explorationstatu": [5, 19, 22, 23], "until": [5, 7, 14], "interrupt": [5, 8, 23], "analyz": 5, "seeds_manag": [5, 14], "variou": [5, 6, 8, 11, 15, 18, 21, 23], "statist": [5, 14, 19], "Then": [5, 21, 23], "give": [5, 6, 7, 9], "hand": 5, "back": [5, 6], "terminate_explor": 5, "termin": [5, 9], "normal": [5, 6], "shutdown": 5, "total_emulation_tim": 5, "includ": [5, 7, 18, 23], "t": [5, 7, 17, 19], "timestamp": [5, 23], "idl": [5, 19, 22, 23], "not_run": 5, "priorit": 5, "corpu": [5, 12], "kept": 5, "select": [5, 7, 14], "consum": [5, 12], "re": [5, 7, 14], "cannot": [5, 6, 7, 9, 21, 22], "lead": [5, 8, 15], "candid": [5, 6], "maximum": 5, "add_new_se": 5, "add_seed_queu": 5, "ok": [5, 13], "note": [5, 6, 22, 23], "archive_se": 5, "seedstatu": [5, 9, 21], "send": 5, "As": [5, 14, 15, 20, 23], "anymor": 5, "assign": [5, 6, 7, 9, 22, 23], "drop_se": 5, "drop": [5, 14], "interest": [5, 18], "ok_don": [5, 9, 19, 22], "move": [5, 12, 22], "is_new_se": 5, "one": [5, 6, 7, 8, 9, 14, 15, 17, 19, 20, 21, 22, 23], "test": [5, 15, 18], "pick_se": 5, "solve_new_path": 5, "tri": [5, 8], "stat": 5, "would": [5, 19], "task": 5, "pp_meta_filenam": 5, "typ": [5, 21], "seeds_avail": 5, "still": [5, 14], "total_solving_tim": 5, "pathlik": [6, 9, 11, 12], "wrap": [6, 7], "lief": [6, 15, 20, 23], "featur": [6, 15, 23], "pseudo": 6, "regardless": [6, 12, 19], "filenotfounderror": 6, "properli": [6, 7], "recogn": 6, "wrong": 6, "architectur": [6, 7, 11, 20, 23], "base_stack": 6, "4026531840": 6, "end_stack": 6, "1879048192": [6, 20], "extern_sym_bas": 6, "251662336": [6, 20], "extern_sym_s": 6, "4096": [6, 20], "arch_mod": [6, 20], "archmod": [6, 11, 20], "mode": [6, 7, 11], "thumb": [6, 7, 11, 17], "cpustat": [6, 20], "cpu": [6, 7, 19, 22, 23], "forma": 6, "dictionari": [6, 22], "register_nam": 6, "register_valu": 6, "endian": [6, 7, 11, 23], "endia": [6, 7, 11], "entry_point": [6, 20, 23], "entrypoint": [6, 15, 17, 23], "binari": [6, 10, 11, 16, 17, 20, 23], "header": 6, "find_function_addr": [6, 20, 22, 23], "search": 6, "fonction": 6, "found": [6, 7, 9, 18], "exe_format": 6, "elf": [6, 15, 23], "pe": [6, 20], "macho": [6, 20], "imported_functions_reloc": [6, 20], "over": [6, 12], "reloc": [6, 23], "imported_variable_symbols_reloc": [6, 20], "memory_seg": [6, 20, 23], "loadableseg": [6, 20], "notimplementederror": [6, 20], "platform": [6, 11, 15, 20], "Its": [6, 9, 17], "sole": [6, 14, 15, 22], "relocation_enum": 6, "relocation_aarch64": 6, "relocation_arm": 6, "relocation_ppc64": 6, "relocation_ppc": 6, "relocation_i386": 6, "relocation_x86_64": 6, "ld_path": 6, "export_fil": 6, "exec_path": 6, "call_graph": 6, "digraph": 6, "comput": 6, "graph": 6, "node": [6, 7], "chunk": [6, 7], "networkx": 6, "capston": 6, "c": [6, 7, 15], "clear": 6, "d": [6, 18], "copi": 6, "shallow": 6, "find_function_from_addr": 6, "from_binari": 6, "output_fil": 6, "database_fil": 6, "600": 6, "export": 6, "directli": [6, 7, 9, 19, 22, 23], "quokka": 6, "ida": 6, "plugin": 6, "instal": 6, "databas": 6, "long": [6, 7, 19], "wait": [6, 7], "min": 6, "fromkei": 6, "kei": [6, 11, 22], "func_chunk_index": 6, "attach": [6, 7, 20], "howev": [6, 8, 22], "mostli": 6, "instead": 6, "get_function_by_chunk": 6, "chunkindex": 6, "els": [6, 14, 18, 19, 23], "get_call_graph": 6, "backedge_on_ret": 6, "get_caller_instruct": 6, "get_chunk": 6, "chunk_index": 6, "block_index": 6, "superchunk": 6, "criteria": 6, "chunkmissingerror": 6, "get_data": 6, "get_first_function_by_chunk": 6, "functionmissingerror": 6, "No": [6, 7, 23], "get_funct": 6, "approxim": 6, "exactli": 6, "functiontyp": 6, "research": 6, "valueerror": 6, "correspond": [6, 7], "indexerror": [6, 7], "get_instruct": 6, "head": [6, 7], "todo": 6, "dm": 6, "improv": [6, 14], "algorithm": [6, 14], "becaus": 6, "sort": 6, "bisect": 6, "addresst": 6, "get_seg": 6, "keyerror": [6, 7, 9], "get_slic": 6, "frm": 6, "slice": [6, 7, 23], "intersect": 6, "reachabl": 6, "ancestor": 6, "subgraph": 6, "origin": [6, 7], "sub": [6, 19], "hash": [6, 9, 11, 19, 22], "sha256": 6, "like": [6, 7, 8, 22], "view": 6, "iter_chunk": 6, "chunk_typ": 6, "split": 6, "individu": 6, "By": [6, 7, 9, 18, 22, 23], "logger": [6, 8], "warn": [6, 8, 19, 20, 22, 23], "underli": [6, 7, 23], "pop": [6, 7, 14, 19], "k": 6, "v": 6, "specifi": [6, 7, 22, 23], "otherwis": [6, 7, 9, 14], "popitem": 6, "pair": 6, "lifo": 6, "out": [6, 7, 17, 18], "order": [6, 9, 14, 19], "pypcod": 6, "setdefault": 6, "accessor": 6, "disassembl": [6, 7], "f": [6, 19, 20, 22, 23], "present": [6, 7, 8, 18], "lack": [6, 23], "case": [6, 7, 17, 18, 19], "set_thumb": [6, 7, 20], "littl": [6, 7, 11, 23], "monolith": [6, 20], "help": [6, 14], "firmwar": [6, 17], "dse": [6, 19, 21, 22, 23], "space": [6, 13], "perm": [6, 7, 11, 20], "virtual": 6, "len": [6, 17, 20, 21, 22, 23], "runtim": [7, 15, 23], "descriptor": [7, 11], "top": 7, "friendli": 7, "api": [7, 12, 13, 22], "extern_seg": 7, "stack_seg": 7, "stack": [7, 14, 18, 20, 23], "actx": [7, 23], "astcontext": 7, "craft": 7, "logic": [7, 11], "base_pointer_regist": [7, 23], "arch": [7, 11, 23], "clear_triton_callback": 7, "close_file_descriptor": 7, "close": 7, "concretize_argu": 7, "convent": 7, "concretize_memory_byt": 7, "bytes": [7, 11], "sound": [7, 23], "restrain": 7, "constant": [7, 23], "concretize_memory_int": 7, "concretize_regist": 7, "equal": [7, 9], "create_file_descriptor": 7, "iobas": [7, 11], "filedesc": [7, 11], "current_instruct": 7, "yet": [7, 9, 14, 19], "current_thread": 7, "dynamic_symbol_t": 7, "dictionnari": [7, 9, 11, 22], "evaluate_expression_model": 7, "exp": 7, "astnod": [7, 11, 23], "bitvector": 7, "fetch_instruct": 7, "set_as_curr": 7, "disable_callback": 7, "file_descriptor_exist": 7, "from_load": [7, 20], "get_argument_symbol": 7, "symbolicexpress": [7, 11, 23], "get_argument_valu": [7, 19, 21, 22], "request": 7, "get_expression_variable_values_model": [7, 19], "symbolicvari": [7, 11], "valuat": 7, "involv": [7, 19], "look": 7, "get_file_descriptor": 7, "get_format_argu": 7, "fmt_addr": 7, "arg": [7, 10, 21], "derefer": [7, 8], "replac": 7, "get_format_str": 7, "locat": [7, 9, 12, 18, 21, 22], "get_full_argu": 7, "get_path_constraint": 7, "get_stack_valu": 7, "further": [7, 15], "got": 7, "get_string_argu": 7, "idx": 7, "heap_alloc": [7, 8], "primit": [7, 15, 23], "atop": 7, "initialize_context": 7, "protect": 7, "is_halt_instruct": 7, "halt": 7, "independ": 7, "is_heap_ptr": 7, "ptr": [7, 8, 19, 21], "point": [7, 8, 13, 17, 20, 23], "is_memory_symbol": [7, 21], "least": 7, "buffer": [7, 9, 17, 18, 22], "rang": 7, "is_path_predicate_upd": 7, "is_register_symbol": 7, "is_syscal": 7, "instrut": 7, "syscal": [7, 23], "last_branch_constraint": 7, "minus_on": 7, "bit": [7, 11], "unsign": [7, 18, 23], "pack_integ": 7, "unpack": 7, "pack": 7, "path_predicate_s": 7, "conjonct": 7, "additionn": [7, 8], "pop_stack_valu": 7, "fulli": [7, 11, 12], "process_instruct": 7, "succeed": 7, "program_counter_regist": [7, 23], "pc": [7, 20], "ptr_bit_siz": [7, 23], "bitsiz": [7, 11], "ptr_size": 7, "push_constraint": [7, 23], "comment": 7, "thin": [7, 23], "wrapper": [7, 23], "underneath": 7, "push_stack_valu": 7, "push": [7, 19, 23], "decreement": 7, "read_regist": [7, 23], "read_symbolic_memory_byt": [7, 21, 23], "big": [7, 11], "read_symbolic_memory_int": [7, 23], "runtimeerror": 7, "align": 7, "read_symbolic_regist": [7, 19, 22, 23], "register_triton_callback": 7, "cb_type": 7, "hook": [7, 8, 15, 17, 21, 22], "tritoncontext": 7, "set_solv": 7, "background": 7, "set_solver_timeout": 7, "subsequ": [7, 8, 19], "wether": [7, 9], "set_triton_mod": 7, "with_pp": 7, "sat": [7, 11, 19, 21, 22], "solve_enumerate_express": 7, "values_blacklist": 7, "solve_no_pp": 7, "helper": 7, "theoret": [7, 20, 23], "unsound": 7, "spawn_new_thread": 7, "new_pc": 7, "newli": 7, "stack_pointer_regist": [7, 23], "switch_thread": 7, "restor": 7, "dead": 7, "fine": 7, "symbolize_memory_byt": 7, "cell": 7, "alias_prefix": 7, "symbolize_regist": 7, "proxi": 7, "symbolizeregist": 7, "tt_ctx": 7, "unpack_integ": 7, "write_argument_valu": 7, "val": 7, "write_regist": [7, 23], "write_stack_valu": 7, "rel": [7, 11, 12], "down": 7, "neg": [7, 13], "upward": 7, "write_symbolic_memory_byt": 7, "expr": 7, "write_symbolic_memory_int": 7, "write_symbolic_regist": [7, 23], "ast": 7, "ctx": [7, 17], "arch_info": 7, "abstract": [7, 12, 14], "agnost": 7, "action": [7, 19], "vari": 7, "__ctx": 7, "getconcreteregistervalu": 7, "rsp": [7, 19, 23], "0x7ff6540": 7, "stack_point": 7, "0x7ff6548": 7, "base_point": 7, "high": 7, "level": [7, 15, 20, 23], "__getitem__": 7, "mechan": [7, 15], "interfac": [7, 14, 19, 20, 21, 23], "callbacks_en": 7, "disable_segment": 7, "turn": 7, "enable_segment": 7, "find_map": 7, "memmap": 7, "get_map": [7, 20], "has_ever_been_written": 7, "previous": [7, 22], "is_map": [7, 23], "overlap": 7, "region": 7, "complex": [7, 9, 21, 22], "o": [7, 11], "mapoverlapexcept": 7, "exist": [7, 9, 12, 22, 23], "freshli": 7, "map_from_nam": 7, "assertionerror": 7, "mprotect": 7, "read_char": [7, 23], "char": [7, 13, 17, 18, 22, 23], "read_dword": [7, 23], "sign": [7, 23], "doubl": [7, 8], "word": 7, "dword": [7, 19], "read_int": [7, 23], "read_long": 7, "style": [7, 23], "read_long_long": 7, "read_ptr": [7, 23], "read_qword": [7, 23], "qword": [7, 19], "read_sint": 7, "struct": 7, "error": [7, 8], "fit": [7, 21], "read_str": [7, 19], "unbound": 7, "0x0": 7, "read_uchar": [7, 23], "read_uint": [7, 23], "read_ulong": 7, "read_ulong_long": 7, "read_word": [7, 23], "segmentation_en": 7, "set_endia": 7, "en": 7, "set_segment": 7, "boolean": 7, "unmap": 7, "without_segment": 7, "temporarili": 7, "rx": 7, "param": 7, "could": [7, 19], "write_char": 7, "255": [7, 23], "write_dword": 7, "write_int": [7, 23], "write_long": [7, 23], "write_long_long": 7, "write_ptr": [7, 23], "similar": [7, 23], "adjust": [7, 20], "write_qword": 7, "write_word": 7, "tini": 7, "built": 7, "ins": 7, "malloc": [7, 13], "coalesc": 7, "correctli": [7, 9], "libc": [7, 8, 15, 20, 21, 23], "bound": 7, "never": [7, 9, 22], "is_ptr_alloc": 7, "is_ptr_fre": 7, "recent": 7, "thread_context": 7, "tid": [7, 19], "purpos": [7, 19, 21, 22], "cancel_join": 7, "cancel": 7, "join": 7, "is_dead": 7, "kill": 7, "indic": [7, 8, 23], "is_main_thread": 7, "main": [7, 18, 19, 20, 23], "is_run": 7, "is_waiting_to_join": 7, "anoth": [7, 21, 22], "join_thread": 7, "th_id": 7, "impli": 7, "formatstringsanit": [8, 21], "probe": [8, 15], "standard": [8, 9, 23], "printf": [8, 13, 18], "fprintf": [8, 13], "sprintf": [8, 13], "dprintf": 8, "snprintf": 8, "control": [8, 21], "shown": 8, "mani": [8, 23], "satisfi": [8, 11, 14, 21, 23], "fmt_ptr": 8, "extra_data": 8, "show": [8, 14, 20, 22], "alert": 8, "info": [8, 23], "bug": [8, 17, 18], "integeroverflowsanit": 8, "via": [8, 15, 22, 23], "make": [8, 17, 22], "nullderefsanit": [8, 21], "null": [8, 18], "descript": [8, 13], "issu": [8, 18], "detect": [8, 17], "uafsanit": [8, 21], "uaf": [8, 21], "symptomat": 8, "heapalloc": 8, "compositedata": [9, 19, 22, 23], "factori": 9, "__annotations__": 9, "__bytes__": 9, "serial": 9, "__dataclass_fields__": 9, "dataclass": 9, "_missing_typ": 9, "default_factori": 9, "init": 9, "repr": [9, 22], "compar": [9, 19], "metadata": [9, 12, 23], "mappingproxi": 9, "kw_onli": 9, "_field_typ": 9, "_field": 9, "__dataclass_params__": 9, "_dataclassparam": 9, "eq": 9, "unsafe_hash": 9, "frozen": 9, "__delattr__": 9, "delattr": 9, "__dict__": 9, "__module__": 9, "_to_json": 9, "from_dict": 9, "staticmethod": 9, "__hash__": 9, "__weakref__": 9, "__doc__": 9, "__init__": [9, 20, 21], "__repr__": 9, "__eq__": 9, "__setattr__": 9, "__match_args__": 9, "setattr": 9, "weak": [9, 23], "json_data": 9, "right": [9, 22], "b": [9, 18, 19, 22], "portion": [9, 13], "bootstrap": 9, "known": 9, "is_composit": 9, "is_raw": 9, "is_bootstrap_se": 9, "is_fresh": 9, "is_status_set": 9, "__len__": [9, 14], "filenam": [9, 12, 22], "from_byt": 9, "is_file_defin": 9, "get_file_input": 9, "overriden": 9, "discrimin": 9, "anyth": [9, 14, 23], "intend": [9, 21], "raw_se": 9, "pars": [9, 17], "accordingli": 9, "receiv": 9, "adapt": 9, "recogniz": [9, 17], "aaaaabbbbb": 9, "precis": 9, "plain": 9, "qbditrac": 10, "qbdi_script_filepath": 10, "posixpath": 10, "opt": 10, "hostedtoolcach": 10, "x64": 10, "lib": 10, "python3": 10, "packag": 10, "qbdi_trac": 10, "coverage_path": 10, "binary_path": 10, "output_path": 10, "dump_trac": 10, "stdin_fil": 10, "cwd": 10, "pass": 10, "get_coverag": 10, "wa": 10, "traceexcept": 10, "tritontrac": 10, "disabledd": 11, "fullfil": 11, "arm32": [11, 20], "common": 11, "compat": 11, "aarch64": 11, "x86_64": [11, 23], "formula": [11, 19, 21], "typevar": 11, "fd": 11, "fget": [11, 13, 18], "max_siz": 11, "is_input_fd": 11, "is_real_fd": 11, "stream": 11, "pathbranchobject": 11, "dstaddr": 11, "istaken": 11, "srcaddr": 11, "page": [11, 13], "combin": 11, "rw": 11, "r": [11, 18, 20], "w": [11, 20], "x": [11, 14, 19, 20, 23], "linux": [11, 15, 23], "window": 11, "maco": 11, "mac": 11, "android": 11, "io": 11, "bitwuzla": 11, "unsatisfi": 11, "did": [11, 19], "unknown": 11, "fail": [11, 23], "symobol": 11, "usag": [11, 15, 23], "conditional_jmp": 11, "cond": 11, "jcc": 11, "dynamic_jmp": 11, "dyn": 11, "jmp": [11, 19], "symbolic_read": 11, "sym": 11, "symbolic_writ": 11, "raddr": 11, "root_dir": 12, "tree": 12, "addit": [12, 20], "invit": 12, "somehow": 12, "exact": [12, 17], "root": [12, 19, 22, 23], "bin_dir": 12, "bin": [12, 20], "corpus_dir": 12, "crash_dir": 12, "default_workspac": 12, "tmp": [12, 18, 23], "triton_workspac": [12, 23], "hang_dir": 12, "log_fil": 12, "metadata_dir": 12, "worklist_dir": 12, "get_binary_directori": 12, "get_metadata_fil": 12, "disk": 12, "get_metadata_file_path": 12, "parent": 12, "absolut": 12, "filepath": [12, 21], "flush": 12, "subfold": 12, "delet": 12, "iter_corpu": [12, 22], "iter_crash": 12, "iter_hang": 12, "iter_worklist": [12, 22], "logfile_path": 12, "save_fil": 12, "rel_path": 12, "arbitrari": [12, 17, 20, 23], "eras": 12, "save_metadata_fil": 12, "save_se": 12, "update_seed_loc": 12, "final": 12, "typic": 12, "ones": [12, 15, 17, 22], "rtn___fprintf_chk": 13, "__fprintf_chk": 13, "rtn__setjmp": 13, "_setjmp": 13, "rtn_abort": 13, "void": [13, 22], "man": 13, "rtn_assert_fail": 13, "__assert_fail": 13, "rtn_atexit": 13, "rtn_atoi": 13, "atoi": [13, 18], "const": [13, 18], "nptr": 13, "same": [13, 18, 19, 20, 22, 23], "nest": 13, "nor": 13, "rtn_calloc": 13, "calloc": 13, "rtn_clock_gettim": 13, "rtn_ctype_b_loc": 13, "__ctype_b_loc": 13, "rtn_ctype_toupper_loc": 13, "__ctype_toupper_loc": 13, "rtn_errno_loc": 13, "__errno_loc": 13, "rtn_exit": 13, "rtn_fclose": 13, "fclose": [13, 18], "rtn_fget": 13, "rtn_fopen": 13, "fopen": [13, 18, 21], "rtn_fprintf": 13, "rtn_fputc": 13, "fputc": 13, "rtn_fput": 13, "fput": 13, "rtn_fread": 13, "fread": [13, 18], "rtn_free": 13, "rtn_fseek": 13, "fseek": 13, "rtn_ftell": 13, "ftell": 13, "rtn_fwrite": 13, "fwrite": 13, "rtn_getchar": 13, "getchar": 13, "rtn_getenv": 13, "getenv": 13, "rtn_gettimeofdai": 13, "rtn_isspac": 13, "isspac": 13, "rtn_libc_start_main": 13, "__libc_start_main": 13, "rtn_longjmp": 13, "longjmp": 13, "rtn_malloc": 13, "rtn_memcmp": 13, "memcmp": 13, "rtn_memcpi": 13, "memcpi": 13, "rtn_memmem": 13, "memmem": 13, "rtn_memmov": 13, "memmov": 13, "rtn_mempcpi": 13, "mempcpi": 13, "rtn_memset": 13, "memset": 13, "rtn_open": 13, "open": [13, 21], "rtn_printf": 13, "rtn_pthread_creat": 13, "pthread_creat": 13, "rtn_pthread_exit": 13, "pthread_exit": 13, "rtn_pthread_join": 13, "pthread_join": 13, "rtn_pthread_mutex_destroi": 13, "pthread_mutex_destroi": 13, "rtn_pthread_mutex_init": 13, "pthread_mutex_init": 13, "rtn_pthread_mutex_lock": 13, "pthread_mutex_lock": 13, "rtn_pthread_mutex_unlock": 13, "pthread_mutex_unlock": 13, "rtn_put": 13, "rtn_rand": 13, "rand": [13, 14], "rtn_read": 13, "rtn_realloc": 13, "realloc": 13, "rtn_sem_destroi": 13, "sem_destroi": 13, "rtn_sem_getvalu": 13, "sem_getvalu": 13, "rtn_sem_init": 13, "sem_init": 13, "rtn_sem_post": 13, "sem_post": 13, "rtn_sem_timedwait": 13, "sem_timedwait": 13, "rtn_sem_trywait": 13, "sem_trywait": 13, "rtn_sem_wait": 13, "sem_wait": 13, "rtn_setlocal": 13, "setlocal": 13, "rtn_sleep": 13, "rtn_sprintf": 13, "rtn_stack_chk_fail": 13, "__stack_chk_fail": 13, "rtn_strcasecmp": 13, "strcasecmp": 13, "rtn_strchr": 13, "strchr": 13, "rtn_strcmp": 13, "strcmp": 13, "rtn_strcpy": 13, "strcpy": 13, "rtn_strdup": 13, "strdup": 13, "rtn_strerror": 13, "strerror": 13, "rtn_strlen": 13, "strlen": [13, 18], "rtn_strncasecmp": 13, "strncasecmp": 13, "rtn_strncmp": 13, "strncmp": 13, "rtn_strncpy": 13, "strncpy": [13, 18], "rtn_strtok_r": 13, "strtok_r": 13, "rtn_strtoul": 13, "strtoul": 13, "rtn_write": 13, "rtn_xstat": 13, "__xstat": 13, "need": [14, 17, 18, 23], "compliant": 14, "can_solve_model": 14, "discov": 14, "has_seed_remain": 14, "pick": [14, 21, 22], "update_worklist": 14, "now": [14, 15, 21, 23], "freshseedprioritizerworklist": 14, "thoroughtli": 14, "intermedi": 14, "worklistaddresstoset": 14, "classifi": 14, "y": 14, "anyon": 14, "consequ": 14, "But": [14, 15], "woklist": 14, "worklistrand": 14, "trivial": 14, "classif": 14, "random": 14, "element": 14, "unlik": 14, "executr": 14, "librari": [15, 19, 20, 23], "capabl": 15, "refin": 15, "eas": [15, 23], "primarili": 15, "pure": [15, 23], "elementari": 15, "instrument": 15, "obtain": [15, 18], "handl": 15, "develop": [15, 21], "furthermor": [15, 18], "facil": 15, "higher": 15, "inde": 15, "low": [15, 20], "framework": [15, 22], "cle": [15, 23], "replai": 15, "qbdi": 15, "customiz": 15, "sanit": [15, 17, 18], "stub": [15, 17], "pypi": 15, "pip": 15, "pip3": 15, "section": [16, 17], "bunch": 16, "challeng": [16, 19, 22, 23], "extract": 17, "iot": 17, "devic": 17, "mcu": 17, "stm32f412": 17, "vulner": 17, "0x08000000": 17, "0x81dc46e": [17, 20], "prototyp": 17, "json_pars": 17, "json_ctx": 17, "while": [17, 20, 21], "straightforward": 17, "third": 17, "don": 17, "tutori": [17, 21, 22, 23], "visual": 17, "lighthous": 17, "potenti": [17, 18], "carri": 17, "sure": [17, 22], "stdlib": 18, "h": [18, 23], "stdio": 18, "s1": 18, "s2": 18, "nullptr": 18, "ac": 18, "av": 18, "25": 18, "sizeof": 18, "here": [18, 19, 21, 22], "sscanf": 18, "yourself": 18, "hint": 18, "behav": 18, "similarli": [18, 19], "emulatoin": 18, "inttyp": 18, "j": 18, "uint32_t": 18, "fp": 18, "covpro": 18, "lot": 18, "symvar": 18, "48": [18, 19], "ari": 18, "principl": 18, "alias": 18, "symvar2": 18, "arr": 18, "30": 18, "hardli": 18, "infer": 18, "meta": 18, "mutat": 18, "max_arg_len": 18, "intrins": 18, "place": [18, 21, 22], "0x12345678": 18, "var": [18, 19], "buf": 18, "50": 18, "introduc": [19, 21, 23], "let": [19, 21, 22, 23], "reus": [19, 22], "snippet": [19, 22], "41": 19, "p": [19, 20, 22, 23], "crackme_xor": [19, 20, 21, 22, 23], "aaaaaaaaaaaa": 19, "__gmon_start__": [19, 22, 23], "unsupport": [19, 22, 23], "theirs": [19, 23], "signatur": 19, "42": 19, "def": [19, 20, 21, 22], "trace_inst": 19, "getthreadid": 19, "0x": [19, 23], "getaddress": 19, "getdisassembli": 19, "43": 19, "0x400460": [19, 23], "xor": 19, "ebp": 19, "0x400462": 19, "mov": 19, "r9": 19, "rdx": 19, "0x400465": 19, "rsi": 19, "0x400466": 19, "0x400469": 19, "0xfffffffffffffff0": 19, "0x40046d": 19, "0x40046e": 19, "0x40046f": 19, "r8": 19, "0x400680": 19, "0x400476": 19, "rcx": 19, "0x400610": 19, "0x40047d": 19, "rdi": 19, "0x4005b3": 19, "0x400484": 19, "0x400440": 19, "0x200bda": 19, "rbp": [19, 23], "0x4005b4": 19, "0x4005b7": 19, "0x20": 19, "0x4005bb": 19, "0x14": 19, "edi": 19, "0x4005be": 19, "0x4005c2": 19, "cmp": 19, "0x4005c6": 19, "je": 19, "0x4005cf": 19, "0x4005d3": 19, "0x4005d7": 19, "0x4005da": 19, "0x4005dd": 19, "0x400556": 19, "0x400557": 19, "0x40055a": 19, "0x18": 19, "0x40055e": 19, "0x400565": 19, "0x4005a6": 19, "0x4005aa": 19, "jle": 19, "0x400567": 19, "eax": 19, "0x40056a": 19, "movsxd": 19, "0x40056d": 19, "0x400571": 19, "0x400574": 19, "movzx": 19, "0x400577": 19, "movsx": 19, "al": 19, "0x40057a": 19, "0x40057d": 19, "0x55": 19, "0x400580": 19, "ecx": 19, "0x400582": 19, "0x200ab7": 19, "0x400589": 19, "0x40058c": 19, "cdqe": 19, "0x40058e": 19, "0x400591": 19, "0x400594": 19, "0x400597": 19, "0x400599": 19, "0x4005a2": 19, "0x40059b": 19, "0x4005a0": 19, "0x4005b1": 19, "0x4005b2": 19, "ret": 19, "0x4005e2": 19, "0x4005e5": 19, "0x4005e9": 19, "jne": 19, "0x4005f7": 19, "0x40069e": 19, "0x4005fc": 19, "0x400430": 19, "0x200be2": 19, "0x400601": 19, "0x400606": 19, "leav": 19, "0x400607": 19, "decod": 19, "prevent": 19, "disassembli": 19, "patch": 19, "de": 19, "zf": [19, 22], "loop": 19, "44": 19, "hook_cmp": [19, 22], "cl": 19, "exec": 19, "hook_put": 19, "45": 19, "0x0400597": 19, "46": 19, "49": [19, 23], "62": 19, "61": 19, "38": 19, "win": 19, "won": 19, "wich": 19, "comparison": 19, "47": 19, "hook_cmp2": 19, "charact": 19, "sym_al": 19, "sym_cl": 19, "getast": [19, 21, 22, 23], "var_valu": 19, "chr": 19, "l": 19, "share": [19, 20, 23], "among": 19, "53": 19, "pre_exec_hook": 19, "post_exec_hook": [19, 22], "0063e1d416400b0a0401dc471be64a8f": 19, "39": [19, 20, 22, 23], "415d0d4405119b88530788282aa06d7d": 19, "eaaaaaaaaaaa": 19, "lt": [19, 20, 22, 23], "gt": [19, 20, 22, 23], "intro": 20, "essenc": 20, "primarli": 20, "userland": 20, "4194304": 20, "2036": [20, 23], "seg2": 20, "6295056": 20, "576": [20, 23], "seg3": 20, "2147483648": 20, "infam": 20, "project": 20, "angr": 20, "cleload": [20, 23], "8192": 20, "seg": [20, 23], "496": 20, "6295552": 20, "80": [20, 22], "7340032": 20, "152376": 20, "7495680": 20, "1395900": 20, "8892416": 20, "338734": 20, "9234640": 20, "14128": 20, "9248768": 20, "61264": 20, "9437184": 20, "3464": 20, "ld": 20, "9441280": 20, "151249": 20, "9592832": 20, "39932": 20, "9636320": 20, "5664": 20, "9641984": 20, "4824": 20, "2147483649": 20, "host": 20, "monolithicload": 20, "small": 20, "base_address": 20, "0x8000000": 20, "stack_addr": 20, "0x1000000": 20, "stack_siz": 20, "1024": 20, "raw_f": 20, "bugged_json_pars": 20, "read_byt": 20, "ldr": 20, "sp": 20, "inherit": 20, "bin_path": 20, "expos": [21, 23], "checker": 21, "easili": 21, "_cb": 21, "_add_callback": 21, "usual": [21, 23], "few": [21, 23], "registr": 21, "freopen": 21, "hijack": 21, "unwant": 21, "passwd": 21, "opensanit": 21, "passwd_fil": 21, "super": 21, "fopen_check": 21, "rtn_name": 21, "arg0": [21, 22], "string_ptr": 21, "cur_ptr": 21, "read_memory_int": 21, "enough": 21, "ord": 21, "pwd_byte": 21, "st": 21, "new_se": [21, 22], "enqueu": 21, "There": [21, 22], "crackm": [21, 22, 23], "explain": 22, "deal": 22, "path_coverag": 22, "aaaaaaaaaaaaaaa": [22, 23], "e2f673d0fd7980a2bdad7910f0f6da7a": 22, "b204f9c8720b4ee299a215ef4c9f168f": 22, "eaaaaaaaaaaaaaa": 22, "cab6e4b729327d1e088c9d459e0340eb": 22, "elaaaaaaaaaaaaa": 22, "c8f3df9e460142aed1158aa354d7179d": 22, "eliaaaaaaaaaaaa": 22, "2cb80846ef5684501c73e1e19f595230": 22, "elitaaaaaaaaaaa": 22, "dc1d802d1c2796a1a21d96827ce1cae7": 22, "eliteaaaaaaaaaa": 22, "plai": 22, "dummi": [22, 23], "81": 22, "sym_zf": 22, "revert": 22, "faulti": 22, "folder": 22, "One": [22, 23], "82": 22, "ncorpu": 22, "00000064": 22, "cov": 22, "contigu": 22, "treat": 22, "Their": 22, "excerpt": 22, "txt": 22, "var1": 22, "himself": 22, "composite_se": 22, "respons": 22, "83": 22, "composite_seed_1": 22, "composite_seed_2": 22, "mix": 22, "84": 22, "dse_using_raw_se": 22, "dse_using_composite_se": 22, "sai": 22, "applic": 22, "parse_buff": 22, "script": 22, "example_hook": 22, "var_prefix": 22, "parser_program": 22, "composite_data": 22, "whose": 22, "experiment": 23, "toward": 23, "pasti": 23, "subject": 23, "opportunist": 23, "subset": 23, "119": 23, "hex": 23, "peform": 23, "util": 23, "120": 23, "4195763": 23, "121": 23, "0x400000": 23, "0x600e10": 23, "hopefulli": 23, "transpar": 23, "123": 23, "hello": 23, "world": 23, "plt": 23, "stuff": 23, "124": 23, "successfulli": 23, "125": 23, "23": 23, "126": 23, "127": 23, "ptrsize": 23, "129": 23, "bv": 23, "63": 23, "portabl": 23, "130": 23, "131": 23, "0xdeadbeef": 23, "132": 23, "3735928559": 23, "133": 23, "3735928563": 23, "134": 23, "0x400489": 23, "135": 23, "xedi": 23, "x89": 23, "xd1": 23, "xe2h": 23, "0x89485ed18949ed31": 23, "1991643855": 23, "2303323441": 23, "60721": 23, "9892260835563793713": 23, "analog": 23, "136": 23, "fashion": 23, "cautiou": 23, "consist": 23, "137": 23, "new_sym": 23, "fun": 23, "ref": 23, "116": 23, "_": 23, "bitvec": 23, "bv32": 23, "disclaim": 23, "break": 23, "definit": 23, "suppos": 23, "rather": 23, "139": 23, "sym_rax": 23, "bv4": 23, "seen": 23, "tune": 23, "detail": 23, "sec": 23, "branchcheckstrategi": 23, "rdtsc": 23, "140": 23, "141": 23, "basicconfig": 23, "142": 23, "complet": 23, "distinct": 23, "question": 23, "unless": 23, "explicit": 23, "restart": 23}, "objects": {"tritondse": [[6, 0, 1, "", "CleLoader"], [1, 0, 1, "", "Config"], [2, 4, 1, "", "CoverageStrategy"], [5, 0, 1, "", "ExplorationStatus"], [6, 0, 1, "", "LoadableSegment"], [6, 0, 1, "", "Loader"], [6, 0, 1, "", "MonolithicLoader"], [7, 0, 1, "", "ProcessState"], [6, 0, 1, "", "Program"], [6, 0, 1, "", "QuokkaProgram"], [4, 0, 1, "", "SymbolicExecutor"], [5, 0, 1, "", "SymbolicExplorator"], [2, 6, 0, "-", "coverage"], [3, 6, 0, "-", "exception"], [13, 6, 0, "-", "routines"], [8, 6, 0, "-", "sanitizers"], [9, 6, 0, "-", "seed"], [10, 6, 0, "-", "trace"], [11, 6, 0, "-", "types"], [14, 6, 0, "-", "worklist"]], "tritondse.CleLoader": [[6, 1, 1, "", "BASE_STACK"], [6, 1, 1, "", "END_STACK"], [6, 1, 1, "", "EXTERN_SYM_BASE"], [6, 1, 1, "", "EXTERN_SYM_SIZE"], [6, 2, 1, "", "arch_mode"], [6, 2, 1, "", "architecture"], [6, 2, 1, "", "cpustate"], [6, 2, 1, "", "endianness"], [6, 2, 1, "", "entry_point"], [6, 3, 1, "", "find_function_addr"], [6, 3, 1, "", "imported_functions_relocations"], [6, 3, 1, "", "imported_variable_symbols_relocations"], [6, 3, 1, "", "memory_segments"], [6, 2, 1, "", "name"], [6, 1, 1, "", "path"], [6, 2, 1, "", "platform"]], "tritondse.Config": [[1, 1, 1, "", "branch_solving_strategy"], [1, 1, 1, "", "coverage_strategy"], [1, 1, 1, "", "custom"], [1, 1, 1, "", "execution_timeout"], [1, 1, 1, "", "exploration_limit"], [1, 1, 1, "", "exploration_timeout"], [1, 3, 1, "", "from_file"], [1, 3, 1, "", "from_json"], [1, 3, 1, "", "is_format_composite"], [1, 3, 1, "", "is_format_raw"], [1, 1, 1, "", "memory_segmentation"], [1, 1, 1, "", "pipe_stderr"], [1, 1, 1, "", "pipe_stdout"], [1, 1, 1, "", "program_argv"], [1, 1, 1, "", "seed_format"], [1, 1, 1, "", "skip_sleep_routine"], [1, 1, 1, "", "skip_unsupported_import"], [1, 1, 1, "", "skip_unsupported_instruction"], [1, 1, 1, "", "smt_enumeration_limit"], [1, 1, 1, "", "smt_queries_limit"], [1, 1, 1, "", "smt_solver"], [1, 1, 1, "", "smt_timeout"], [1, 1, 1, "", "thread_scheduling"], [1, 1, 1, "", "time_inc_coefficient"], [1, 3, 1, "", "to_file"], [1, 3, 1, "", "to_json"], [1, 1, 1, "", "workspace"]], "tritondse.CoverageStrategy": [[2, 1, 1, "", "BLOCK"], [2, 1, 1, "", "EDGE"], [2, 1, 1, "", "PATH"], [2, 1, 1, "", "PREFIXED_EDGE"]], "tritondse.ExplorationStatus": [[5, 1, 1, "", "IDLE"], [5, 1, 1, "", "NOT_RUNNING"], [5, 1, 1, "", "RUNNING"], [5, 1, 1, "", "STOPPED"], [5, 1, 1, "", "TERMINATED"]], "tritondse.LoadableSegment": [[6, 1, 1, "", "address"], [6, 1, 1, "", "content"], [6, 1, 1, "", "name"], [6, 1, 1, "", "perms"], [6, 1, 1, "", "size"]], "tritondse.Loader": [[6, 2, 1, "", "arch_mode"], [6, 2, 1, "", "architecture"], [6, 2, 1, "", "cpustate"], [6, 2, 1, "", "endianness"], [6, 2, 1, "", "entry_point"], [6, 3, 1, "", "find_function_addr"], [6, 3, 1, "", "imported_functions_relocations"], [6, 3, 1, "", "imported_variable_symbols_relocations"], [6, 3, 1, "", "memory_segments"], [6, 2, 1, "", "name"], [6, 2, 1, "", "platform"]], "tritondse.MonolithicLoader": [[6, 2, 1, "", "arch_mode"], [6, 2, 1, "", "architecture"], [6, 2, 1, "", "cpustate"], [6, 2, 1, "", "endianness"], [6, 2, 1, "", "entry_point"], [6, 3, 1, "", "find_function_addr"], [6, 3, 1, "", "imported_functions_relocations"], [6, 3, 1, "", "imported_variable_symbols_relocations"], [6, 3, 1, "", "memory_segments"], [6, 2, 1, "", "name"], [6, 2, 1, "", "platform"]], "tritondse.ProcessState": [[7, 1, 1, "", "EXTERN_SEG"], [7, 1, 1, "", "STACK_SEG"], [7, 1, 1, "", "actx"], [7, 2, 1, "", "architecture"], [7, 2, 1, "", "base_pointer_register"], [7, 3, 1, "", "clear_triton_callbacks"], [7, 3, 1, "", "close_file_descriptor"], [7, 3, 1, "", "concretize_argument"], [7, 3, 1, "", "concretize_memory_bytes"], [7, 3, 1, "", "concretize_memory_int"], [7, 3, 1, "", "concretize_register"], [7, 1, 1, "", "cpu"], [7, 3, 1, "", "create_file_descriptor"], [7, 2, 1, "", "current_instruction"], [7, 2, 1, "", "current_thread"], [7, 1, 1, "", "dynamic_symbol_table"], [7, 1, 1, "", "endianness"], [7, 3, 1, "", "evaluate_expression_model"], [7, 3, 1, "", "fetch_instruction"], [7, 3, 1, "", "file_descriptor_exists"], [7, 3, 1, "", "from_loader"], [7, 3, 1, "", "get_argument_symbolic"], [7, 3, 1, "", "get_argument_value"], [7, 3, 1, "", "get_expression_variable_values_model"], [7, 3, 1, "", "get_file_descriptor"], [7, 3, 1, "", "get_format_arguments"], [7, 3, 1, "", "get_format_string"], [7, 3, 1, "", "get_full_argument"], [7, 3, 1, "", "get_path_constraints"], [7, 3, 1, "", "get_stack_value"], [7, 3, 1, "", "get_string_argument"], [7, 1, 1, "", "heap_allocator"], [7, 3, 1, "", "initialize_context"], [7, 3, 1, "", "is_halt_instruction"], [7, 3, 1, "", "is_heap_ptr"], [7, 3, 1, "", "is_memory_symbolic"], [7, 3, 1, "", "is_path_predicate_updated"], [7, 3, 1, "", "is_register_symbolic"], [7, 3, 1, "", "is_syscall"], [7, 2, 1, "", "last_branch_constraint"], [7, 1, 1, "", "memory"], [7, 2, 1, "", "minus_one"], [7, 3, 1, "", "pack_integer"], [7, 2, 1, "", "path_predicate_size"], [7, 3, 1, "", "pop_stack_value"], [7, 3, 1, "", "process_instruction"], [7, 2, 1, "", "program_counter_register"], [7, 2, 1, "", "ptr_bit_size"], [7, 2, 1, "", "ptr_size"], [7, 3, 1, "", "push_constraint"], [7, 3, 1, "", "push_stack_value"], [7, 3, 1, "", "read_register"], [7, 3, 1, "", "read_symbolic_memory_byte"], [7, 3, 1, "", "read_symbolic_memory_bytes"], [7, 3, 1, "", "read_symbolic_memory_int"], [7, 3, 1, "", "read_symbolic_register"], [7, 3, 1, "", "register_triton_callback"], [7, 2, 1, "", "registers"], [7, 2, 1, "", "return_register"], [7, 3, 1, "", "set_solver"], [7, 3, 1, "", "set_solver_timeout"], [7, 3, 1, "", "set_thumb"], [7, 3, 1, "", "set_triton_mode"], [7, 3, 1, "", "solve"], [7, 3, 1, "", "solve_enumerate_expression"], [7, 3, 1, "", "solve_no_pp"], [7, 3, 1, "", "spawn_new_thread"], [7, 2, 1, "", "stack_pointer_register"], [7, 3, 1, "", "switch_thread"], [7, 3, 1, "", "symbolize_memory_byte"], [7, 3, 1, "", "symbolize_memory_bytes"], [7, 3, 1, "", "symbolize_register"], [7, 2, 1, "", "threads"], [7, 1, 1, "", "tt_ctx"], [7, 3, 1, "", "unpack_integer"], [7, 3, 1, "", "write_argument_value"], [7, 3, 1, "", "write_register"], [7, 3, 1, "", "write_stack_value"], [7, 3, 1, "", "write_symbolic_memory_byte"], [7, 3, 1, "", "write_symbolic_memory_int"], [7, 3, 1, "", "write_symbolic_register"]], "tritondse.Program": [[6, 1, 1, "", "BASE_STACK"], [6, 1, 1, "", "END_STACK"], [6, 1, 1, "", "EXTERN_SYM_BASE"], [6, 1, 1, "", "EXTERN_SYM_SIZE"], [6, 2, 1, "", "arch_mode"], [6, 2, 1, "", "architecture"], [6, 2, 1, "", "cpustate"], [6, 2, 1, "", "endianness"], [6, 2, 1, "", "entry_point"], [6, 3, 1, "", "find_function_addr"], [6, 2, 1, "", "format"], [6, 3, 1, "", "imported_functions_relocations"], [6, 3, 1, "", "imported_variable_symbols_relocations"], [6, 3, 1, "", "memory_segments"], [6, 2, 1, "", "name"], [6, 1, 1, "", "path"], [6, 2, 1, "", "platform"], [6, 2, 1, "", "relocation_enum"]], "tritondse.QuokkaProgram": [[6, 2, 1, "", "architecture"], [6, 2, 1, "", "call_graph"], [6, 2, 1, "", "capstone"], [6, 3, 1, "", "clear"], [6, 3, 1, "", "copy"], [6, 2, 1, "", "endianness"], [6, 2, 1, "", "entry_point"], [6, 3, 1, "", "find_function_addr"], [6, 3, 1, "", "find_function_from_addr"], [6, 2, 1, "", "format"], [6, 3, 1, "", "from_binary"], [6, 3, 1, "", "fromkeys"], [6, 2, 1, "", "func_chunk_index"], [6, 3, 1, "", "get"], [6, 3, 1, "", "get_call_graph"], [6, 3, 1, "", "get_caller_instructions"], [6, 3, 1, "", "get_chunk"], [6, 3, 1, "", "get_data"], [6, 3, 1, "", "get_first_function_by_chunk"], [6, 3, 1, "", "get_function"], [6, 3, 1, "", "get_function_by_chunk"], [6, 3, 1, "", "get_instruction"], [6, 3, 1, "", "get_segment"], [6, 3, 1, "", "get_slice"], [6, 2, 1, "", "hash"], [6, 3, 1, "", "imported_functions_relocations"], [6, 3, 1, "", "imported_variable_symbols_relocations"], [6, 3, 1, "", "items"], [6, 3, 1, "", "iter_chunk"], [6, 3, 1, "", "keys"], [6, 1, 1, "", "logger"], [6, 3, 1, "", "memory_segments"], [6, 3, 1, "", "merge"], [6, 2, 1, "", "name"], [6, 2, 1, "", "path"], [6, 2, 1, "", "platform"], [6, 3, 1, "", "pop"], [6, 3, 1, "", "popitem"], [6, 2, 1, "", "pypcode"], [6, 2, 1, "", "relocation_enum"], [6, 2, 1, "", "segments"], [6, 3, 1, "", "setdefault"], [6, 2, 1, "", "strings"], [6, 2, 1, "", "structures"], [6, 3, 1, "", "update"], [6, 3, 1, "", "values"]], "tritondse.SymbolicExecutor": [[4, 3, 1, "", "abort"], [4, 2, 1, "", "callback_manager"], [4, 1, 1, "", "cbm"], [4, 1, 1, "", "config"], [4, 1, 1, "", "coverage"], [4, 1, 1, "", "current_pc"], [4, 3, 1, "", "emulate"], [4, 3, 1, "", "emulation_deinit"], [4, 3, 1, "", "emulation_init"], [4, 1, 1, "", "end_time"], [4, 3, 1, "", "enqueue_seed"], [4, 2, 1, "", "execution_time"], [4, 2, 1, "", "exitcode"], [4, 3, 1, "", "inject_symbolic_argv_memory"], [4, 3, 1, "", "inject_symbolic_file_memory"], [4, 3, 1, "", "inject_symbolic_file_register"], [4, 3, 1, "", "inject_symbolic_raw_input"], [4, 3, 1, "", "inject_symbolic_variable_memory"], [4, 3, 1, "", "inject_symbolic_variable_register"], [4, 3, 1, "", "is_seed_injected"], [4, 3, 1, "", "load"], [4, 3, 1, "", "load_process"], [4, 1, 1, "", "loader"], [4, 3, 1, "", "mem_usage_str"], [4, 3, 1, "", "mk_new_seed_from_model"], [4, 2, 1, "", "pending_seeds"], [4, 1, 1, "", "previous_pc"], [4, 1, 1, "", "pstate"], [4, 3, 1, "", "run"], [4, 1, 1, "", "seed"], [4, 3, 1, "", "skip_instruction"], [4, 1, 1, "", "start_time"], [4, 3, 1, "", "step"], [4, 3, 1, "", "stop_exploration"], [4, 1, 1, "", "trace_offset"], [4, 1, 1, "", "uid"], [4, 1, 1, "", "workspace"]], "tritondse.SymbolicExplorator": [[5, 3, 1, "", "add_input_seed"], [5, 2, 1, "", "callback_manager"], [5, 1, 1, "", "cbm"], [5, 1, 1, "", "config"], [5, 1, 1, "", "coverage"], [5, 1, 1, "", "current_executor"], [5, 2, 1, "", "execution_count"], [5, 3, 1, "", "explore"], [5, 1, 1, "", "loader"], [5, 3, 1, "", "post_exploration"], [5, 1, 1, "", "seeds_manager"], [5, 1, 1, "", "status"], [5, 3, 1, "", "step"], [5, 3, 1, "", "stop_exploration"], [5, 3, 1, "", "terminate_exploration"], [5, 2, 1, "", "total_emulation_time"], [5, 1, 1, "", "ts"], [5, 1, 1, "", "workspace"]], "tritondse.arch": [[7, 0, 1, "", "CpuState"]], "tritondse.arch.CpuState": [[7, 2, 1, "", "base_pointer"], [7, 2, 1, "", "program_counter"], [7, 2, 1, "", "stack_pointer"]], "tritondse.callbacks": [[0, 5, 1, "", "AddrCallback"], [0, 5, 1, "", "BranchCoveredCallback"], [0, 0, 1, "", "CallbackManager"], [0, 0, 1, "", "CbPos"], [0, 0, 1, "", "CbType"], [0, 5, 1, "", "ExplorationStepCallback"], [0, 5, 1, "", "InstrCallback"], [0, 5, 1, "", "MemReadCallback"], [0, 5, 1, "", "MemWriteCallback"], [0, 5, 1, "", "MemoryViolationCallback"], [0, 5, 1, "", "MnemonicCallback"], [0, 5, 1, "", "NewInputCallback"], [0, 5, 1, "", "OpcodeCallback"], [0, 0, 1, "", "ProbeInterface"], [0, 5, 1, "", "RegReadCallback"], [0, 5, 1, "", "RegWriteCallback"], [0, 5, 1, "", "RtnCallback"], [0, 5, 1, "", "SymExCallback"], [0, 5, 1, "", "SymExSolvingCallback"], [0, 5, 1, "", "ThreadCallback"]], "tritondse.callbacks.CallbackManager": [[0, 3, 1, "", "bind_to"], [0, 3, 1, "", "fork"], [0, 3, 1, "", "get_address_callbacks"], [0, 3, 1, "", "get_context_switch_callback"], [0, 3, 1, "", "get_execution_callbacks"], [0, 3, 1, "", "get_exploration_step_callbacks"], [0, 3, 1, "", "get_imported_routine_callbacks"], [0, 3, 1, "", "get_instruction_callbacks"], [0, 3, 1, "", "get_memory_violation_callbacks"], [0, 3, 1, "", "get_mnemonic_callbacks"], [0, 3, 1, "", "get_new_input_callback"], [0, 3, 1, "", "get_on_branch_covered_callback"], [0, 3, 1, "", "get_on_solving_callback"], [0, 3, 1, "", "get_opcode_callbacks"], [0, 3, 1, "", "is_binded"], [0, 3, 1, "", "is_empty"], [0, 3, 1, "", "register_addr_callback"], [0, 3, 1, "", "register_exploration_step_callback"], [0, 3, 1, "", "register_function_callback"], [0, 3, 1, "", "register_instruction_callback"], [0, 3, 1, "", "register_memory_read_callback"], [0, 3, 1, "", "register_memory_violation_callback"], [0, 3, 1, "", "register_memory_write_callback"], [0, 3, 1, "", "register_mnemonic_callback"], [0, 3, 1, "", "register_new_input_callback"], [0, 3, 1, "", "register_on_branch_covered_callback"], [0, 3, 1, "", "register_on_solving_callback"], [0, 3, 1, "", "register_opcode_callback"], [0, 3, 1, "", "register_post_addr_callback"], [0, 3, 1, "", "register_post_execution_callback"], [0, 3, 1, "", "register_post_imported_routine_callback"], [0, 3, 1, "", "register_post_instruction_callback"], [0, 3, 1, "", "register_post_mnemonic_callback"], [0, 3, 1, "", "register_post_opcode_callback"], [0, 3, 1, "", "register_pre_addr_callback"], [0, 3, 1, "", "register_pre_execution_callback"], [0, 3, 1, "", "register_pre_imported_routine_callback"], [0, 3, 1, "", "register_pre_instruction_callback"], [0, 3, 1, "", "register_pre_mnemonic_callback"], [0, 3, 1, "", "register_pre_opcode_callback"], [0, 3, 1, "", "register_probe"], [0, 3, 1, "", "register_register_read_callback"], [0, 3, 1, "", "register_register_write_callback"], [0, 3, 1, "", "register_thread_context_switch_callback"], [0, 3, 1, "", "reset"], [0, 3, 1, "", "unbind"], [0, 3, 1, "", "unregister_callback"]], "tritondse.callbacks.CbPos": [[0, 1, 1, "", "AFTER"], [0, 1, 1, "", "BEFORE"]], "tritondse.callbacks.CbType": [[0, 1, 1, "", "BRANCH_COV"], [0, 1, 1, "", "CTX_SWITCH"], [0, 1, 1, "", "EXPLORE_STEP"], [0, 1, 1, "", "MEMORY_READ"], [0, 1, 1, "", "MEMORY_WRITE"], [0, 1, 1, "", "MEM_VIOLATION"], [0, 1, 1, "", "NEW_INPUT"], [0, 1, 1, "", "POST_ADDR"], [0, 1, 1, "", "POST_EXEC"], [0, 1, 1, "", "POST_INST"], [0, 1, 1, "", "POST_MNEM"], [0, 1, 1, "", "POST_OPCODE"], [0, 1, 1, "", "POST_RTN"], [0, 1, 1, "", "PRE_ADDR"], [0, 1, 1, "", "PRE_EXEC"], [0, 1, 1, "", "PRE_INST"], [0, 1, 1, "", "PRE_MNEM"], [0, 1, 1, "", "PRE_OPCODE"], [0, 1, 1, "", "PRE_RTN"], [0, 1, 1, "", "REG_READ"], [0, 1, 1, "", "REG_WRITE"], [0, 1, 1, "", "SYMEX_SOLVING"]], "tritondse.callbacks.ProbeInterface": [[0, 2, 1, "", "callbacks"]], "tritondse.coverage": [[2, 7, 1, "", "BranchSolvingStrategy"], [2, 5, 1, "", "CovItem"], [2, 0, 1, "", "CoverageSingleRun"], [2, 4, 1, "", "CoverageStrategy"], [2, 0, 1, "", "GlobalCoverage"]], "tritondse.coverage.BranchSolvingStrategy": [[2, 1, 1, "", "ALL_NOT_COVERED"], [2, 1, 1, "", "COVER_SYM_DYNJUMP"], [2, 1, 1, "", "COVER_SYM_READ"], [2, 1, 1, "", "COVER_SYM_WRITE"], [2, 1, 1, "", "FIRST_LAST_NOT_COVERED"], [2, 1, 1, "", "MANUAL"], [2, 1, 1, "", "SOUND_MEM_ACCESS"], [2, 1, 1, "", "TIMEOUT_ALWAYS"], [2, 1, 1, "", "TIMEOUT_ONCE"], [2, 1, 1, "", "UNSAT_ONCE"]], "tritondse.coverage.CoverageSingleRun": [[2, 3, 1, "", "add_covered_address"], [2, 3, 1, "", "add_covered_branch"], [2, 3, 1, "", "add_covered_dynamic_branch"], [2, 1, 1, "", "covered_instructions"], [2, 1, 1, "", "covered_items"], [2, 3, 1, "", "difference"], [2, 3, 1, "", "is_covered"], [2, 3, 1, "", "post_execution"], [2, 3, 1, "", "pp_item"], [2, 1, 1, "", "strategy"], [2, 2, 1, "", "total_instruction_executed"], [2, 2, 1, "", "unique_covitem_covered"], [2, 2, 1, "", "unique_instruction_covered"]], "tritondse.coverage.CoverageStrategy": [[2, 1, 1, "", "BLOCK"], [2, 1, 1, "", "EDGE"], [2, 1, 1, "", "PATH"], [2, 1, 1, "", "PREFIXED_EDGE"]], "tritondse.coverage.GlobalCoverage": [[2, 1, 1, "", "COVERAGE_FILE"], [2, 3, 1, "", "add_covered_address"], [2, 3, 1, "", "add_covered_branch"], [2, 3, 1, "", "add_covered_dynamic_branch"], [2, 3, 1, "", "can_cover_symbolic_pointers"], [2, 3, 1, "", "can_improve_coverage"], [2, 3, 1, "", "clone"], [2, 1, 1, "", "covered_instructions"], [2, 1, 1, "", "covered_items"], [2, 1, 1, "", "covered_symbolic_pointers"], [2, 3, 1, "", "difference"], [2, 3, 1, "", "from_file"], [2, 3, 1, "", "improve_coverage"], [2, 3, 1, "", "is_covered"], [2, 3, 1, "", "iter_new_paths"], [2, 3, 1, "", "merge"], [2, 3, 1, "", "new_items_to_cover"], [2, 1, 1, "", "not_covered_items"], [2, 1, 1, "", "pending_coverage"], [2, 3, 1, "", "post_execution"], [2, 3, 1, "", "post_exploration"], [2, 3, 1, "", "pp_item"], [2, 1, 1, "", "strategy"], [2, 3, 1, "", "to_file"], [2, 2, 1, "", "total_instruction_executed"], [2, 1, 1, "", "uncoverable_items"], [2, 2, 1, "", "unique_covitem_covered"], [2, 2, 1, "", "unique_instruction_covered"]], "tritondse.exception": [[3, 8, 1, "", "AbortExecutionException"], [3, 8, 1, "", "AllocatorException"], [3, 8, 1, "", "SkipInstructionException"], [3, 8, 1, "", "StopExplorationException"]], "tritondse.heap_allocator": [[7, 0, 1, "", "AllocatorException"], [7, 0, 1, "", "HeapAllocator"]], "tritondse.heap_allocator.HeapAllocator": [[7, 3, 1, "", "alloc"], [7, 3, 1, "", "free"], [7, 3, 1, "", "is_ptr_allocated"], [7, 3, 1, "", "is_ptr_freed"]], "tritondse.memory": [[7, 0, 1, "", "Memory"]], "tritondse.memory.Memory": [[7, 3, 1, "", "callbacks_enabled"], [7, 1, 1, "", "ctx"], [7, 3, 1, "", "disable_segmentation"], [7, 3, 1, "", "enable_segmentation"], [7, 3, 1, "", "find_map"], [7, 3, 1, "", "get_map"], [7, 3, 1, "", "get_maps"], [7, 3, 1, "", "has_ever_been_written"], [7, 3, 1, "", "is_mapped"], [7, 3, 1, "", "map"], [7, 3, 1, "", "map_from_name"], [7, 3, 1, "", "mprotect"], [7, 3, 1, "", "read"], [7, 3, 1, "", "read_char"], [7, 3, 1, "", "read_dword"], [7, 3, 1, "", "read_int"], [7, 3, 1, "", "read_long"], [7, 3, 1, "", "read_long_long"], [7, 3, 1, "", "read_ptr"], [7, 3, 1, "", "read_qword"], [7, 3, 1, "", "read_sint"], [7, 3, 1, "", "read_string"], [7, 3, 1, "", "read_uchar"], [7, 3, 1, "", "read_uint"], [7, 3, 1, "", "read_ulong"], [7, 3, 1, "", "read_ulong_long"], [7, 3, 1, "", "read_word"], [7, 2, 1, "", "segmentation_enabled"], [7, 3, 1, "", "set_endianess"], [7, 3, 1, "", "set_segmentation"], [7, 3, 1, "", "unmap"], [7, 3, 1, "", "without_segmentation"], [7, 3, 1, "", "write"], [7, 3, 1, "", "write_char"], [7, 3, 1, "", "write_dword"], [7, 3, 1, "", "write_int"], [7, 3, 1, "", "write_long"], [7, 3, 1, "", "write_long_long"], [7, 3, 1, "", "write_ptr"], [7, 3, 1, "", "write_qword"], [7, 3, 1, "", "write_word"]], "tritondse.routines": [[13, 9, 1, "", "rtn___fprintf_chk"], [13, 9, 1, "", "rtn__setjmp"], [13, 9, 1, "", "rtn_abort"], [13, 9, 1, "", "rtn_assert_fail"], [13, 9, 1, "", "rtn_atexit"], [13, 9, 1, "", "rtn_atoi"], [13, 9, 1, "", "rtn_calloc"], [13, 9, 1, "", "rtn_clock_gettime"], [13, 9, 1, "", "rtn_ctype_b_loc"], [13, 9, 1, "", "rtn_ctype_toupper_loc"], [13, 9, 1, "", "rtn_errno_location"], [13, 9, 1, "", "rtn_exit"], [13, 9, 1, "", "rtn_fclose"], [13, 9, 1, "", "rtn_fgets"], [13, 9, 1, "", "rtn_fopen"], [13, 9, 1, "", "rtn_fprintf"], [13, 9, 1, "", "rtn_fputc"], [13, 9, 1, "", "rtn_fputs"], [13, 9, 1, "", "rtn_fread"], [13, 9, 1, "", "rtn_free"], [13, 9, 1, "", "rtn_fseek"], [13, 9, 1, "", "rtn_ftell"], [13, 9, 1, "", "rtn_fwrite"], [13, 9, 1, "", "rtn_getchar"], [13, 9, 1, "", "rtn_getenv"], [13, 9, 1, "", "rtn_gettimeofday"], [13, 9, 1, "", "rtn_isspace"], [13, 9, 1, "", "rtn_libc_start_main"], [13, 9, 1, "", "rtn_longjmp"], [13, 9, 1, "", "rtn_malloc"], [13, 9, 1, "", "rtn_memcmp"], [13, 9, 1, "", "rtn_memcpy"], [13, 9, 1, "", "rtn_memmem"], [13, 9, 1, "", "rtn_memmove"], [13, 9, 1, "", "rtn_mempcpy"], [13, 9, 1, "", "rtn_memset"], [13, 9, 1, "", "rtn_open"], [13, 9, 1, "", "rtn_printf"], [13, 9, 1, "", "rtn_pthread_create"], [13, 9, 1, "", "rtn_pthread_exit"], [13, 9, 1, "", "rtn_pthread_join"], [13, 9, 1, "", "rtn_pthread_mutex_destroy"], [13, 9, 1, "", "rtn_pthread_mutex_init"], [13, 9, 1, "", "rtn_pthread_mutex_lock"], [13, 9, 1, "", "rtn_pthread_mutex_unlock"], [13, 9, 1, "", "rtn_puts"], [13, 9, 1, "", "rtn_rand"], [13, 9, 1, "", "rtn_read"], [13, 9, 1, "", "rtn_realloc"], [13, 9, 1, "", "rtn_sem_destroy"], [13, 9, 1, "", "rtn_sem_getvalue"], [13, 9, 1, "", "rtn_sem_init"], [13, 9, 1, "", "rtn_sem_post"], [13, 9, 1, "", "rtn_sem_timedwait"], [13, 9, 1, "", "rtn_sem_trywait"], [13, 9, 1, "", "rtn_sem_wait"], [13, 9, 1, "", "rtn_setlocale"], [13, 9, 1, "", "rtn_sleep"], [13, 9, 1, "", "rtn_sprintf"], [13, 9, 1, "", "rtn_stack_chk_fail"], [13, 9, 1, "", "rtn_strcasecmp"], [13, 9, 1, "", "rtn_strchr"], [13, 9, 1, "", "rtn_strcmp"], [13, 9, 1, "", "rtn_strcpy"], [13, 9, 1, "", "rtn_strdup"], [13, 9, 1, "", "rtn_strerror"], [13, 9, 1, "", "rtn_strlen"], [13, 9, 1, "", "rtn_strncasecmp"], [13, 9, 1, "", "rtn_strncmp"], [13, 9, 1, "", "rtn_strncpy"], [13, 9, 1, "", "rtn_strtok_r"], [13, 9, 1, "", "rtn_strtoul"], [13, 9, 1, "", "rtn_write"], [13, 9, 1, "", "rtn_xstat"]], "tritondse.sanitizers": [[8, 0, 1, "", "FormatStringSanitizer"], [8, 0, 1, "", "IntegerOverflowSanitizer"], [8, 0, 1, "", "NullDerefSanitizer"], [8, 0, 1, "", "UAFSanitizer"]], "tritondse.sanitizers.FormatStringSanitizer": [[8, 2, 1, "", "callbacks"], [8, 3, 1, "", "check"]], "tritondse.sanitizers.IntegerOverflowSanitizer": [[8, 2, 1, "", "callbacks"], [8, 3, 1, "", "check"]], "tritondse.sanitizers.NullDerefSanitizer": [[8, 2, 1, "", "callbacks"], [8, 3, 1, "", "check"]], "tritondse.sanitizers.UAFSanitizer": [[8, 2, 1, "", "callbacks"], [8, 3, 1, "", "check"]], "tritondse.seed": [[9, 0, 1, "", "CompositeData"], [9, 0, 1, "", "Seed"], [9, 4, 1, "", "SeedFormat"], [9, 4, 1, "", "SeedStatus"]], "tritondse.seed.CompositeData": [[9, 1, 1, "", "__annotations__"], [9, 3, 1, "", "__bytes__"], [9, 1, 1, "", "__dataclass_fields__"], [9, 1, 1, "", "__dataclass_params__"], [9, 3, 1, "", "__delattr__"], [9, 1, 1, "", "__dict__"], [9, 3, 1, "", "__eq__"], [9, 3, 1, "", "__hash__"], [9, 3, 1, "", "__init__"], [9, 1, 1, "", "__match_args__"], [9, 1, 1, "", "__module__"], [9, 3, 1, "", "__repr__"], [9, 3, 1, "", "__setattr__"], [9, 1, 1, "", "__weakref__"], [9, 1, 1, "", "argv"], [9, 1, 1, "", "files"], [9, 3, 1, "", "from_dict"], [9, 1, 1, "", "variables"]], "tritondse.seed.Seed": [[9, 3, 1, "", "__bytes__"], [9, 1, 1, "", "__dict__"], [9, 3, 1, "", "__eq__"], [9, 3, 1, "", "__hash__"], [9, 3, 1, "", "__init__"], [9, 3, 1, "", "__len__"], [9, 1, 1, "", "__module__"], [9, 1, 1, "", "__weakref__"], [9, 3, 1, "", "bytes"], [9, 2, 1, "", "filename"], [9, 2, 1, "", "format"], [9, 3, 1, "", "from_bytes"], [9, 3, 1, "", "from_file"], [9, 3, 1, "", "get_file_input"], [9, 2, 1, "", "hash"], [9, 3, 1, "", "is_bootstrap_seed"], [9, 3, 1, "", "is_composite"], [9, 3, 1, "", "is_file_defined"], [9, 3, 1, "", "is_fresh"], [9, 3, 1, "", "is_raw"], [9, 3, 1, "", "is_status_set"], [9, 2, 1, "", "size"], [9, 2, 1, "", "status"]], "tritondse.seed.SeedFormat": [[9, 1, 1, "", "COMPOSITE"], [9, 1, 1, "", "RAW"], [9, 1, 1, "", "__module__"]], "tritondse.seed.SeedStatus": [[9, 1, 1, "", "CRASH"], [9, 1, 1, "", "HANG"], [9, 1, 1, "", "NEW"], [9, 1, 1, "", "OK_DONE"], [9, 1, 1, "", "__module__"]], "tritondse.seeds_manager": [[5, 0, 1, "", "SeedManager"]], "tritondse.seeds_manager.SeedManager": [[5, 3, 1, "", "add_new_seed"], [5, 3, 1, "", "add_seed_queue"], [5, 3, 1, "", "archive_seed"], [5, 3, 1, "", "drop_seed"], [5, 3, 1, "", "is_new_seed"], [5, 3, 1, "", "pick_seed"], [5, 3, 1, "", "post_execution"], [5, 3, 1, "", "post_exploration"], [5, 3, 1, "", "pp_meta_filename"], [5, 3, 1, "", "seeds_available"], [5, 2, 1, "", "total_solving_time"]], "tritondse.thread_context": [[7, 0, 1, "", "ThreadContext"]], "tritondse.thread_context.ThreadContext": [[7, 3, 1, "", "cancel_join"], [7, 3, 1, "", "is_dead"], [7, 3, 1, "", "is_main_thread"], [7, 3, 1, "", "is_running"], [7, 3, 1, "", "is_waiting_to_join"], [7, 3, 1, "", "join_thread"], [7, 3, 1, "", "kill"], [7, 3, 1, "", "restore"], [7, 3, 1, "", "save"]], "tritondse.trace": [[10, 0, 1, "", "QBDITrace"], [10, 0, 1, "", "Trace"], [10, 8, 1, "", "TraceException"], [10, 0, 1, "", "TritonTrace"]], "tritondse.trace.QBDITrace": [[10, 1, 1, "", "QBDI_SCRIPT_FILEPATH"], [10, 2, 1, "", "coverage"], [10, 3, 1, "", "from_file"], [10, 3, 1, "", "run"], [10, 2, 1, "", "trace"]], "tritondse.trace.Trace": [[10, 2, 1, "", "coverage"], [10, 3, 1, "", "from_file"], [10, 3, 1, "", "get_coverage"], [10, 3, 1, "", "run"], [10, 2, 1, "", "strategy"], [10, 2, 1, "", "trace"]], "tritondse.trace.TritonTrace": [[10, 2, 1, "", "coverage"], [10, 3, 1, "", "from_file"], [10, 3, 1, "", "run"]], "tritondse.types": [[11, 1, 1, "", "Addr"], [11, 7, 1, "", "ArchMode"], [11, 4, 1, "", "Architecture"], [11, 0, 1, "", "AstNode"], [11, 1, 1, "", "BitSize"], [11, 1, 1, "", "ByteSize"], [11, 5, 1, "", "Edge"], [11, 4, 1, "", "Endian"], [11, 0, 1, "", "Expression"], [11, 0, 1, "", "FileDesc"], [11, 1, 1, "", "Input"], [11, 0, 1, "", "Model"], [11, 0, 1, "", "PathBranch"], [11, 0, 1, "", "PathConstraint"], [11, 1, 1, "", "PathHash"], [11, 5, 1, "", "PathLike"], [11, 7, 1, "", "Perm"], [11, 4, 1, "", "Platform"], [11, 0, 1, "", "Register"], [11, 0, 1, "", "Registers"], [11, 4, 1, "", "SmtSolver"], [11, 4, 1, "", "SolverStatus"], [11, 4, 1, "", "SymExType"], [11, 0, 1, "", "SymbolicVariable"], [11, 1, 1, "", "rAddr"]], "tritondse.types.ArchMode": [[11, 1, 1, "", "THUMB"]], "tritondse.types.Architecture": [[11, 1, 1, "", "AARCH64"], [11, 1, 1, "", "ARM32"], [11, 1, 1, "", "X86"], [11, 1, 1, "", "X86_64"]], "tritondse.types.Endian": [[11, 1, 1, "", "BIG"], [11, 1, 1, "", "LITTLE"]], "tritondse.types.FileDesc": [[11, 1, 1, "", "fd"], [11, 3, 1, "", "fgets"], [11, 1, 1, "", "id"], [11, 3, 1, "", "is_input_fd"], [11, 3, 1, "", "is_real_fd"], [11, 1, 1, "", "name"], [11, 2, 1, "", "offset"], [11, 3, 1, "", "read"]], "tritondse.types.PathBranch": [[11, 1, 1, "", "constraint"], [11, 1, 1, "", "dstAddr"], [11, 1, 1, "", "isTaken"], [11, 1, 1, "", "srcAddr"]], "tritondse.types.Perm": [[11, 1, 1, "", "R"], [11, 1, 1, "", "W"], [11, 1, 1, "", "X"]], "tritondse.types.Platform": [[11, 1, 1, "", "ANDROID"], [11, 1, 1, "", "IOS"], [11, 1, 1, "", "LINUX"], [11, 1, 1, "", "MACOS"], [11, 1, 1, "", "WINDOWS"]], "tritondse.types.SmtSolver": [[11, 1, 1, "", "BITWUZLA"], [11, 1, 1, "", "Z3"]], "tritondse.types.SolverStatus": [[11, 1, 1, "", "SAT"], [11, 1, 1, "", "TIMEOUT"], [11, 1, 1, "", "UNKNOWN"], [11, 1, 1, "", "UNSAT"]], "tritondse.types.SymExType": [[11, 1, 1, "", "CONDITIONAL_JMP"], [11, 1, 1, "", "DYNAMIC_JMP"], [11, 1, 1, "", "SYMBOLIC_READ"], [11, 1, 1, "", "SYMBOLIC_WRITE"]], "tritondse.worklist": [[14, 0, 1, "", "FreshSeedPrioritizerWorklist"], [14, 0, 1, "", "SeedScheduler"], [14, 0, 1, "", "WorklistAddressToSet"], [14, 0, 1, "", "WorklistRand"]], "tritondse.worklist.FreshSeedPrioritizerWorklist": [[14, 3, 1, "", "__len__"], [14, 3, 1, "", "add"], [14, 3, 1, "", "can_solve_models"], [14, 3, 1, "", "has_seed_remaining"], [14, 3, 1, "", "pick"], [14, 3, 1, "", "post_execution"], [14, 3, 1, "", "post_exploration"], [14, 3, 1, "", "update_worklist"]], "tritondse.worklist.SeedScheduler": [[14, 3, 1, "", "add"], [14, 3, 1, "", "can_solve_models"], [14, 3, 1, "", "has_seed_remaining"], [14, 3, 1, "", "pick"], [14, 3, 1, "", "post_execution"], [14, 3, 1, "", "post_exploration"], [14, 3, 1, "", "update_worklist"]], "tritondse.worklist.WorklistAddressToSet": [[14, 3, 1, "", "__len__"], [14, 3, 1, "", "add"], [14, 3, 1, "", "can_solve_models"], [14, 3, 1, "", "has_seed_remaining"], [14, 3, 1, "", "pick"], [14, 3, 1, "", "post_execution"], [14, 3, 1, "", "post_exploration"], [14, 3, 1, "", "update_worklist"]], "tritondse.worklist.WorklistRand": [[14, 3, 1, "", "__len__"], [14, 3, 1, "", "add"], [14, 3, 1, "", "can_solve_models"], [14, 3, 1, "", "has_seed_remaining"], [14, 3, 1, "", "pick"], [14, 3, 1, "", "post_execution"], [14, 3, 1, "", "post_exploration"], [14, 3, 1, "", "update_worklist"]], "tritondse.workspace": [[12, 0, 1, "", "Workspace"]], "tritondse.workspace.Workspace": [[12, 1, 1, "", "BIN_DIR"], [12, 1, 1, "", "CORPUS_DIR"], [12, 1, 1, "", "CRASH_DIR"], [12, 1, 1, "", "DEFAULT_WORKSPACE"], [12, 1, 1, "", "HANG_DIR"], [12, 1, 1, "", "LOG_FILE"], [12, 1, 1, "", "METADATA_DIR"], [12, 1, 1, "", "WORKLIST_DIR"], [12, 3, 1, "", "get_binary_directory"], [12, 3, 1, "", "get_metadata_file"], [12, 3, 1, "", "get_metadata_file_path"], [12, 3, 1, "", "initialize"], [12, 3, 1, "", "iter_corpus"], [12, 3, 1, "", "iter_crashes"], [12, 3, 1, "", "iter_hangs"], [12, 3, 1, "", "iter_worklist"], [12, 2, 1, "", "logfile_path"], [12, 1, 1, "", "root_dir"], [12, 3, 1, "", "save_file"], [12, 3, 1, "", "save_metadata_file"], [12, 3, 1, "", "save_seed"], [12, 3, 1, "", "update_seed_location"]]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:property", "3": "py:method", "4": "py:enum", "5": "py:data", "6": "py:module", "7": "py:flag", "8": "py:exception", "9": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "enum", "Python enum"], "5": ["py", "data", "Python data"], "6": ["py", "module", "Python module"], "7": ["py", "flag", "Python flag"], "8": ["py", "exception", "Python exception"], "9": ["py", "function", "Python function"]}, "titleterms": {"callback": 0, "mechan": [0, 21], "callbackmanag": 0, "probe": [0, 21], "interfac": 0, "todo": [0, 7, 13], "signatur": 0, "configur": [1, 23], "coverag": 2, "except": 3, "symbolicexecutor": 4, "symbolicexplor": 5, "seedmanag": 5, "loader": [6, 20], "program": [6, 23], "cleload": 6, "quokkaprogram": 6, "monolithicload": 6, "creat": 6, "new": 6, "context": 7, "processst": 7, "cpustat": 7, "memori": [7, 23], "heapalloc": 7, "threadcontext": 7, "sanit": [8, 21], "seed": [9, 14, 22], "trace": 10, "type": 11, "workspac": [12, 23], "support": 13, "routin": 13, "linux": [13, 20], "window": 13, "schedul": 14, "exist": 14, "strategi": 14, "tritonds": 15, "differ": 15, "triton": 15, "instal": 15, "get": [15, 23], "start": [15, 23], "crackm": 16, "hackcon": 16, "2016": 16, "angri": 16, "revers": 16, "hackov": 16, "ctf": 16, "2015": 16, "r150": 16, "json": 17, "parser": 17, "introduct": 17, "practic": 17, "inform": 17, "object": 17, "tip": 17, "toi": 18, "exampl": 18, "0": 18, "multipl": 18, "input": 18, "sourc": 18, "1": 18, "non": 18, "standard": 18, "2": 18, "symbol": [18, 23], "read": [18, 23], "3": 18, "write": [18, 20, 21, 23], "4": 18, "string": 18, "length": 18, "5": 18, "off": 18, "One": 18, "plai": 19, "hook": 19, "i": [19, 23], "instruct": 19, "ii": [19, 23], "address": 19, "function": [19, 23], "iii": [19, 23], "solv": 19, "queri": 19, "iv": [19, 23], "explor": [19, 23], "event": 19, "elf": 20, "cle": 20, "firmwar": 20, "load": 20, "us": 21, "built": 21, "manag": 22, "initi": 22, "corpu": [22, 23], "gener": 22, "set": 22, "statu": 22, "how": 22, "inject": 22, "arbitrari": 22, "variabl": 22, "singl": 23, "execut": 23, "concret": 23, "state": 23, "manipul": 23, "regist": 23, "api": 23, "b": 23, "python": 23, "c": 23, "v": 23, "vi": 23, "vii": 23}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Callback Mechanism": [[0, "callback-mechanism"]], "CallbackManager": [[0, "callbackmanager"]], "Probe Interface": [[0, "probe-interface"]], "Todo": [[0, "id1"], [7, "id1"], [13, "id2"]], "Callback signatures": [[0, "callback-signatures"]], "Configuration": [[1, "configuration"]], "Coverage": [[2, "module-tritondse.coverage"]], "Exception": [[3, "module-tritondse.exception"]], "SymbolicExecutor": [[4, "symbolicexecutor"]], "SymbolicExplorator": [[5, "symbolicexplorator"]], "SeedManager": [[5, "seedmanager"]], "Loaders": [[6, "loaders"], [20, "Loaders"]], "Program": [[6, "program"]], "CleLoader": [[6, "cleloader"]], "QuokkaProgram": [[6, "quokkaprogram"]], "MonolithicLoader": [[6, "monolithicloader"]], "Creating a new Loader": [[6, "creating-a-new-loader"]], "Context": [[7, "context"]], "ProcessState": [[7, "processstate"]], "CpuState": [[7, "cpustate"]], "Memory": [[7, "memory"]], "HeapAllocator": [[7, "heapallocator"]], "ThreadContext": [[7, "threadcontext"]], "Sanitizers": [[8, "module-tritondse.sanitizers"]], "Seed": [[9, "module-tritondse.seed"]], "Trace": [[10, "module-tritondse.trace"]], "Types": [[11, "module-tritondse.types"]], "Workspace": [[12, "workspace"]], "Supported Routines": [[13, "supported-routines"]], "Linux": [[13, "module-tritondse.routines"]], "Windows": [[13, "windows"]], "Seed Scheduling": [[14, "seed-scheduling"]], "Existing strategies": [[14, "module-tritondse.worklist"]], "TritonDSE": [[15, "tritondse"]], "Difference with Triton": [[15, "difference-with-triton"]], "Installation": [[15, "installation"]], "Getting Started": [[15, null], [23, "Getting-Started"]], "Crackme": [[16, "crackme"]], "Hackcon-2016-angry-reverser": [[16, "hackcon-2016-angry-reverser"]], "Hackover-ctf-2015-r150": [[16, "hackover-ctf-2015-r150"]], "JSON Parser": [[17, "json-parser"]], "Introduction": [[17, "introduction"]], "Practical information": [[17, "practical-information"]], "Objectives": [[17, "objectives"]], "Tips": [[17, "tips"]], "Toy Example": [[18, "toy-example"]], "0. Multiple input sources": [[18, "multiple-input-sources"]], "1. Non standard input": [[18, "non-standard-input"]], "2. Symbolic read": [[18, "symbolic-read"]], "3. Symbolic read & write": [[18, "symbolic-read-write"]], "4. String length": [[18, "string-length"]], "5. Off-by-One example": [[18, "off-by-one-example"]], "Playing with Hooks": [[19, "Playing-with-Hooks"]], "I. Instruction hooking": [[19, "I.-Instruction-hooking"]], "II. Address/Function hooking": [[19, "II.-Address/Function-hooking"]], "III. Solving queries": [[19, "III.-Solving-queries"]], "IV. Hooking exploration events": [[19, "IV.-Hooking-exploration-events"]], "Linux ELF loader": [[20, "Linux-ELF-loader"]], "CLE Loader": [[20, "CLE-Loader"]], "Firmware Loading": [[20, "Firmware-Loading"]], "Writing a Loader": [[20, "Writing-a-Loader"]], "Sanitizers & Probes": [[21, "Sanitizers-&-Probes"]], "Probe mechanism": [[21, "Probe-mechanism"]], "Using built-in sanitizers": [[21, "Using-built-in-sanitizers"]], "Writing a sanitizer": [[21, "Writing-a-sanitizer"]], "Managing Seeds": [[22, "Managing-Seeds"]], "Initial Corpus": [[22, "Initial-Corpus"]], "Managing generated corpus": [[22, "Managing-generated-corpus"]], "Setting seed status": [[22, "Setting-seed-status"]], "How to inject arbitrary variables": [[22, "How-to-inject-arbitrary-variables"]], "I. Program": [[23, "I.-Program"]], "II. Single Execution": [[23, "II.-Single-Execution"]], "III. Concrete State Manipulation": [[23, "III.-Concrete-State-Manipulation"]], "a. Reading, writing registers (function API)": [[23, "a.-Reading,-writing-registers-(function-API)"]], "b. Reading, writing registers (Pythonic API)": [[23, "b.-Reading,-writing-registers-(Pythonic-API)"]], "c. Reading, writing memory": [[23, "c.-Reading,-writing-memory"]], "IV. Manipulating symbolic state": [[23, "IV.-Manipulating-symbolic-state"]], "V. Configuration": [[23, "V.-Configuration"]], "VI. Exploration": [[23, "VI.-Exploration"]], "VII. Workspace & Corpus": [[23, "VII.-Workspace-&-Corpus"]]}, "indexentries": {"after (tritondse.callbacks.cbpos attribute)": [[0, "tritondse.callbacks.CbPos.AFTER"]], "addrcallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.AddrCallback"]], "before (tritondse.callbacks.cbpos attribute)": [[0, "tritondse.callbacks.CbPos.BEFORE"]], "branch_cov (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.BRANCH_COV"]], "branchcoveredcallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.BranchCoveredCallback"]], "ctx_switch (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.CTX_SWITCH"]], "callbackmanager (class in tritondse.callbacks)": [[0, "tritondse.callbacks.CallbackManager"]], "cbpos (class in tritondse.callbacks)": [[0, "tritondse.callbacks.CbPos"]], "cbtype (class in tritondse.callbacks)": [[0, "tritondse.callbacks.CbType"]], "explore_step (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.EXPLORE_STEP"]], "explorationstepcallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.ExplorationStepCallback"]], "instrcallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.InstrCallback"]], "memory_read (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.MEMORY_READ"]], "memory_write (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.MEMORY_WRITE"]], "mem_violation (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.MEM_VIOLATION"]], "memreadcallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.MemReadCallback"]], "memwritecallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.MemWriteCallback"]], "memoryviolationcallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.MemoryViolationCallback"]], "mnemoniccallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.MnemonicCallback"]], "new_input (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.NEW_INPUT"]], "newinputcallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.NewInputCallback"]], "opcodecallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.OpcodeCallback"]], "post_addr (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.POST_ADDR"]], "post_exec (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.POST_EXEC"]], "post_inst (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.POST_INST"]], "post_mnem (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.POST_MNEM"]], "post_opcode (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.POST_OPCODE"]], "post_rtn (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.POST_RTN"]], "pre_addr (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.PRE_ADDR"]], "pre_exec (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.PRE_EXEC"]], "pre_inst (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.PRE_INST"]], "pre_mnem (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.PRE_MNEM"]], "pre_opcode (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.PRE_OPCODE"]], "pre_rtn (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.PRE_RTN"]], "probeinterface (class in tritondse.callbacks)": [[0, "tritondse.callbacks.ProbeInterface"]], "reg_read (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.REG_READ"]], "reg_write (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.REG_WRITE"]], "regreadcallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.RegReadCallback"]], "regwritecallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.RegWriteCallback"]], "rtncallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.RtnCallback"]], "symex_solving (tritondse.callbacks.cbtype attribute)": [[0, "tritondse.callbacks.CbType.SYMEX_SOLVING"]], "symexcallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.SymExCallback"]], "symexsolvingcallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.SymExSolvingCallback"]], "threadcallback (in module tritondse.callbacks)": [[0, "tritondse.callbacks.ThreadCallback"]], "bind_to() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.bind_to"]], "callbacks (tritondse.callbacks.probeinterface property)": [[0, "tritondse.callbacks.ProbeInterface.callbacks"]], "fork() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.fork"]], "get_address_callbacks() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.get_address_callbacks"]], "get_context_switch_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.get_context_switch_callback"]], "get_execution_callbacks() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.get_execution_callbacks"]], "get_exploration_step_callbacks() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.get_exploration_step_callbacks"]], "get_imported_routine_callbacks() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.get_imported_routine_callbacks"]], "get_instruction_callbacks() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.get_instruction_callbacks"]], "get_memory_violation_callbacks() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.get_memory_violation_callbacks"]], "get_mnemonic_callbacks() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.get_mnemonic_callbacks"]], "get_new_input_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.get_new_input_callback"]], "get_on_branch_covered_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.get_on_branch_covered_callback"]], "get_on_solving_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.get_on_solving_callback"]], "get_opcode_callbacks() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.get_opcode_callbacks"]], "is_binded() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.is_binded"]], "is_empty() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.is_empty"]], "register_addr_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_addr_callback"]], "register_exploration_step_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_exploration_step_callback"]], "register_function_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_function_callback"]], "register_instruction_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_instruction_callback"]], "register_memory_read_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_memory_read_callback"]], "register_memory_violation_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_memory_violation_callback"]], "register_memory_write_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_memory_write_callback"]], "register_mnemonic_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_mnemonic_callback"]], "register_new_input_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_new_input_callback"]], "register_on_branch_covered_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_on_branch_covered_callback"]], "register_on_solving_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_on_solving_callback"]], "register_opcode_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_opcode_callback"]], "register_post_addr_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_post_addr_callback"]], "register_post_execution_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_post_execution_callback"]], "register_post_imported_routine_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_post_imported_routine_callback"]], "register_post_instruction_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_post_instruction_callback"]], "register_post_mnemonic_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_post_mnemonic_callback"]], "register_post_opcode_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_post_opcode_callback"]], "register_pre_addr_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_pre_addr_callback"]], "register_pre_execution_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_pre_execution_callback"]], "register_pre_imported_routine_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_pre_imported_routine_callback"]], "register_pre_instruction_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_pre_instruction_callback"]], "register_pre_mnemonic_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_pre_mnemonic_callback"]], "register_pre_opcode_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_pre_opcode_callback"]], "register_probe() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_probe"]], "register_register_read_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_register_read_callback"]], "register_register_write_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_register_write_callback"]], "register_thread_context_switch_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.register_thread_context_switch_callback"]], "reset() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.reset"]], "unbind() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.unbind"]], "unregister_callback() (tritondse.callbacks.callbackmanager method)": [[0, "tritondse.callbacks.CallbackManager.unregister_callback"]], "config (class in tritondse)": [[1, "tritondse.Config"]], "branch_solving_strategy (tritondse.config attribute)": [[1, "tritondse.Config.branch_solving_strategy"]], "coverage_strategy (tritondse.config attribute)": [[1, "tritondse.Config.coverage_strategy"]], "custom (tritondse.config attribute)": [[1, "tritondse.Config.custom"]], "execution_timeout (tritondse.config attribute)": [[1, "tritondse.Config.execution_timeout"]], "exploration_limit (tritondse.config attribute)": [[1, "tritondse.Config.exploration_limit"]], "exploration_timeout (tritondse.config attribute)": [[1, "tritondse.Config.exploration_timeout"]], "from_file() (tritondse.config static method)": [[1, "tritondse.Config.from_file"]], "from_json() (tritondse.config static method)": [[1, "tritondse.Config.from_json"]], "is_format_composite() (tritondse.config method)": [[1, "tritondse.Config.is_format_composite"]], "is_format_raw() (tritondse.config method)": [[1, "tritondse.Config.is_format_raw"]], "memory_segmentation (tritondse.config attribute)": [[1, "tritondse.Config.memory_segmentation"]], "pipe_stderr (tritondse.config attribute)": [[1, "tritondse.Config.pipe_stderr"]], "pipe_stdout (tritondse.config attribute)": [[1, "tritondse.Config.pipe_stdout"]], "program_argv (tritondse.config attribute)": [[1, "tritondse.Config.program_argv"]], "seed_format (tritondse.config attribute)": [[1, "tritondse.Config.seed_format"]], "skip_sleep_routine (tritondse.config attribute)": [[1, "tritondse.Config.skip_sleep_routine"]], "skip_unsupported_import (tritondse.config attribute)": [[1, "tritondse.Config.skip_unsupported_import"]], "skip_unsupported_instruction (tritondse.config attribute)": [[1, "tritondse.Config.skip_unsupported_instruction"]], "smt_enumeration_limit (tritondse.config attribute)": [[1, "tritondse.Config.smt_enumeration_limit"]], "smt_queries_limit (tritondse.config attribute)": [[1, "tritondse.Config.smt_queries_limit"]], "smt_solver (tritondse.config attribute)": [[1, "tritondse.Config.smt_solver"]], "smt_timeout (tritondse.config attribute)": [[1, "tritondse.Config.smt_timeout"]], "thread_scheduling (tritondse.config attribute)": [[1, "tritondse.Config.thread_scheduling"]], "time_inc_coefficient (tritondse.config attribute)": [[1, "tritondse.Config.time_inc_coefficient"]], "to_file() (tritondse.config method)": [[1, "tritondse.Config.to_file"]], "to_json() (tritondse.config method)": [[1, "tritondse.Config.to_json"]], "workspace (tritondse.config attribute)": [[1, "tritondse.Config.workspace"]], "all_not_covered (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.ALL_NOT_COVERED"]], "block (tritondse.coveragestrategy attribute)": [[2, "tritondse.CoverageStrategy.BLOCK"]], "block (tritondse.coverage.coveragestrategy attribute)": [[2, "tritondse.coverage.CoverageStrategy.BLOCK"]], "coverage_file (tritondse.coverage.globalcoverage attribute)": [[2, "tritondse.coverage.GlobalCoverage.COVERAGE_FILE"]], "cover_sym_dynjump (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.COVER_SYM_DYNJUMP"]], "cover_sym_read (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.COVER_SYM_READ"]], "cover_sym_write (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.COVER_SYM_WRITE"]], "covitem (in module tritondse.coverage)": [[2, "tritondse.coverage.CovItem"]], "coveragesinglerun (class in tritondse.coverage)": [[2, "tritondse.coverage.CoverageSingleRun"]], "edge (tritondse.coveragestrategy attribute)": [[2, "tritondse.CoverageStrategy.EDGE"]], "edge (tritondse.coverage.coveragestrategy attribute)": [[2, "tritondse.coverage.CoverageStrategy.EDGE"]], "first_last_not_covered (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.FIRST_LAST_NOT_COVERED"]], "globalcoverage (class in tritondse.coverage)": [[2, "tritondse.coverage.GlobalCoverage"]], "manual (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.MANUAL"]], "path (tritondse.coveragestrategy attribute)": [[2, "tritondse.CoverageStrategy.PATH"]], "path (tritondse.coverage.coveragestrategy attribute)": [[2, "tritondse.coverage.CoverageStrategy.PATH"]], "prefixed_edge (tritondse.coveragestrategy attribute)": [[2, "tritondse.CoverageStrategy.PREFIXED_EDGE"]], "prefixed_edge (tritondse.coverage.coveragestrategy attribute)": [[2, "tritondse.coverage.CoverageStrategy.PREFIXED_EDGE"]], "sound_mem_access (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.SOUND_MEM_ACCESS"]], "timeout_always (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.TIMEOUT_ALWAYS"]], "timeout_once (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.TIMEOUT_ONCE"]], "unsat_once (tritondse.coverage.branchsolvingstrategy attribute)": [[2, "tritondse.coverage.BranchSolvingStrategy.UNSAT_ONCE"]], "add_covered_address() (tritondse.coverage.coveragesinglerun method)": [[2, "tritondse.coverage.CoverageSingleRun.add_covered_address"]], "add_covered_address() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.add_covered_address"]], "add_covered_branch() (tritondse.coverage.coveragesinglerun method)": [[2, "tritondse.coverage.CoverageSingleRun.add_covered_branch"]], "add_covered_branch() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.add_covered_branch"]], "add_covered_dynamic_branch() (tritondse.coverage.coveragesinglerun method)": [[2, "tritondse.coverage.CoverageSingleRun.add_covered_dynamic_branch"]], "add_covered_dynamic_branch() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.add_covered_dynamic_branch"]], "can_cover_symbolic_pointers() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.can_cover_symbolic_pointers"]], "can_improve_coverage() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.can_improve_coverage"]], "clone() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.clone"]], "covered_instructions (tritondse.coverage.coveragesinglerun attribute)": [[2, "tritondse.coverage.CoverageSingleRun.covered_instructions"]], "covered_instructions (tritondse.coverage.globalcoverage attribute)": [[2, "tritondse.coverage.GlobalCoverage.covered_instructions"]], "covered_items (tritondse.coverage.coveragesinglerun attribute)": [[2, "tritondse.coverage.CoverageSingleRun.covered_items"]], "covered_items (tritondse.coverage.globalcoverage attribute)": [[2, "tritondse.coverage.GlobalCoverage.covered_items"]], "covered_symbolic_pointers (tritondse.coverage.globalcoverage attribute)": [[2, "tritondse.coverage.GlobalCoverage.covered_symbolic_pointers"]], "difference() (tritondse.coverage.coveragesinglerun method)": [[2, "tritondse.coverage.CoverageSingleRun.difference"]], "difference() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.difference"]], "from_file() (tritondse.coverage.globalcoverage static method)": [[2, "tritondse.coverage.GlobalCoverage.from_file"]], "improve_coverage() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.improve_coverage"]], "is_covered() (tritondse.coverage.coveragesinglerun method)": [[2, "tritondse.coverage.CoverageSingleRun.is_covered"]], "is_covered() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.is_covered"]], "iter_new_paths() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.iter_new_paths"]], "merge() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.merge"]], "module": [[2, "module-tritondse.coverage"], [3, "module-tritondse.exception"], [8, "module-tritondse.sanitizers"], [9, "module-tritondse.seed"], [10, "module-tritondse.trace"], [11, "module-tritondse.types"], [13, "module-tritondse.routines"], [14, "module-tritondse.worklist"]], "new_items_to_cover() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.new_items_to_cover"]], "not_covered_items (tritondse.coverage.globalcoverage attribute)": [[2, "tritondse.coverage.GlobalCoverage.not_covered_items"]], "pending_coverage (tritondse.coverage.globalcoverage attribute)": [[2, "tritondse.coverage.GlobalCoverage.pending_coverage"]], "post_execution() (tritondse.coverage.coveragesinglerun method)": [[2, "tritondse.coverage.CoverageSingleRun.post_execution"]], "post_execution() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.post_execution"]], "post_exploration() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.post_exploration"]], "pp_item() (tritondse.coverage.coveragesinglerun method)": [[2, "tritondse.coverage.CoverageSingleRun.pp_item"]], "pp_item() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.pp_item"]], "strategy (tritondse.coverage.coveragesinglerun attribute)": [[2, "tritondse.coverage.CoverageSingleRun.strategy"]], "strategy (tritondse.coverage.globalcoverage attribute)": [[2, "tritondse.coverage.GlobalCoverage.strategy"]], "to_file() (tritondse.coverage.globalcoverage method)": [[2, "tritondse.coverage.GlobalCoverage.to_file"]], "total_instruction_executed (tritondse.coverage.coveragesinglerun property)": [[2, "tritondse.coverage.CoverageSingleRun.total_instruction_executed"]], "total_instruction_executed (tritondse.coverage.globalcoverage property)": [[2, "tritondse.coverage.GlobalCoverage.total_instruction_executed"]], "tritondse.coverage": [[2, "module-tritondse.coverage"]], "uncoverable_items (tritondse.coverage.globalcoverage attribute)": [[2, "tritondse.coverage.GlobalCoverage.uncoverable_items"]], "unique_covitem_covered (tritondse.coverage.coveragesinglerun property)": [[2, "tritondse.coverage.CoverageSingleRun.unique_covitem_covered"]], "unique_covitem_covered (tritondse.coverage.globalcoverage property)": [[2, "tritondse.coverage.GlobalCoverage.unique_covitem_covered"]], "unique_instruction_covered (tritondse.coverage.coveragesinglerun property)": [[2, "tritondse.coverage.CoverageSingleRun.unique_instruction_covered"]], "unique_instruction_covered (tritondse.coverage.globalcoverage property)": [[2, "tritondse.coverage.GlobalCoverage.unique_instruction_covered"]], "abortexecutionexception": [[3, "tritondse.exception.AbortExecutionException"]], "allocatorexception": [[3, "tritondse.exception.AllocatorException"]], "skipinstructionexception": [[3, "tritondse.exception.SkipInstructionException"]], "stopexplorationexception": [[3, "tritondse.exception.StopExplorationException"]], "tritondse.exception": [[3, "module-tritondse.exception"]], "symbolicexecutor (class in tritondse)": [[4, "tritondse.SymbolicExecutor"]], "abort() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.abort"]], "callback_manager (tritondse.symbolicexecutor property)": [[4, "tritondse.SymbolicExecutor.callback_manager"]], "cbm (tritondse.symbolicexecutor attribute)": [[4, "tritondse.SymbolicExecutor.cbm"]], "config (tritondse.symbolicexecutor attribute)": [[4, "tritondse.SymbolicExecutor.config"]], "coverage (tritondse.symbolicexecutor attribute)": [[4, "tritondse.SymbolicExecutor.coverage"]], "current_pc (tritondse.symbolicexecutor attribute)": [[4, "tritondse.SymbolicExecutor.current_pc"]], "emulate() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.emulate"]], "emulation_deinit() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.emulation_deinit"]], "emulation_init() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.emulation_init"]], "end_time (tritondse.symbolicexecutor attribute)": [[4, "tritondse.SymbolicExecutor.end_time"]], "enqueue_seed() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.enqueue_seed"]], "execution_time (tritondse.symbolicexecutor property)": [[4, "tritondse.SymbolicExecutor.execution_time"]], "exitcode (tritondse.symbolicexecutor property)": [[4, "tritondse.SymbolicExecutor.exitcode"]], "inject_symbolic_argv_memory() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.inject_symbolic_argv_memory"]], "inject_symbolic_file_memory() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.inject_symbolic_file_memory"]], "inject_symbolic_file_register() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.inject_symbolic_file_register"]], "inject_symbolic_raw_input() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.inject_symbolic_raw_input"]], "inject_symbolic_variable_memory() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.inject_symbolic_variable_memory"]], "inject_symbolic_variable_register() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.inject_symbolic_variable_register"]], "is_seed_injected() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.is_seed_injected"]], "load() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.load"]], "load_process() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.load_process"]], "loader (tritondse.symbolicexecutor attribute)": [[4, "tritondse.SymbolicExecutor.loader"]], "mem_usage_str() (tritondse.symbolicexecutor static method)": [[4, "tritondse.SymbolicExecutor.mem_usage_str"]], "mk_new_seed_from_model() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.mk_new_seed_from_model"]], "pending_seeds (tritondse.symbolicexecutor property)": [[4, "tritondse.SymbolicExecutor.pending_seeds"]], "previous_pc (tritondse.symbolicexecutor attribute)": [[4, "tritondse.SymbolicExecutor.previous_pc"]], "pstate (tritondse.symbolicexecutor attribute)": [[4, "tritondse.SymbolicExecutor.pstate"]], "run() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.run"]], "seed (tritondse.symbolicexecutor attribute)": [[4, "tritondse.SymbolicExecutor.seed"]], "skip_instruction() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.skip_instruction"]], "start_time (tritondse.symbolicexecutor attribute)": [[4, "tritondse.SymbolicExecutor.start_time"]], "step() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.step"]], "stop_exploration() (tritondse.symbolicexecutor method)": [[4, "tritondse.SymbolicExecutor.stop_exploration"]], "trace_offset (tritondse.symbolicexecutor attribute)": [[4, "tritondse.SymbolicExecutor.trace_offset"]], "uid (tritondse.symbolicexecutor attribute)": [[4, "tritondse.SymbolicExecutor.uid"]], "workspace (tritondse.symbolicexecutor attribute)": [[4, "tritondse.SymbolicExecutor.workspace"]], "explorationstatus (class in tritondse)": [[5, "tritondse.ExplorationStatus"]], "idle (tritondse.explorationstatus attribute)": [[5, "tritondse.ExplorationStatus.IDLE"]], "not_running (tritondse.explorationstatus attribute)": [[5, "tritondse.ExplorationStatus.NOT_RUNNING"]], "running (tritondse.explorationstatus attribute)": [[5, "tritondse.ExplorationStatus.RUNNING"]], "stopped (tritondse.explorationstatus attribute)": [[5, "tritondse.ExplorationStatus.STOPPED"]], "seedmanager (class in tritondse.seeds_manager)": [[5, "tritondse.seeds_manager.SeedManager"]], "symbolicexplorator (class in tritondse)": [[5, "tritondse.SymbolicExplorator"]], "terminated (tritondse.explorationstatus attribute)": [[5, "tritondse.ExplorationStatus.TERMINATED"]], "add_input_seed() (tritondse.symbolicexplorator method)": [[5, "tritondse.SymbolicExplorator.add_input_seed"]], "add_new_seed() (tritondse.seeds_manager.seedmanager method)": [[5, "tritondse.seeds_manager.SeedManager.add_new_seed"]], "add_seed_queue() (tritondse.seeds_manager.seedmanager method)": [[5, "tritondse.seeds_manager.SeedManager.add_seed_queue"]], "archive_seed() (tritondse.seeds_manager.seedmanager method)": [[5, "tritondse.seeds_manager.SeedManager.archive_seed"]], "callback_manager (tritondse.symbolicexplorator property)": [[5, "tritondse.SymbolicExplorator.callback_manager"]], "cbm (tritondse.symbolicexplorator attribute)": [[5, "tritondse.SymbolicExplorator.cbm"]], "config (tritondse.symbolicexplorator attribute)": [[5, "tritondse.SymbolicExplorator.config"]], "coverage (tritondse.symbolicexplorator attribute)": [[5, "tritondse.SymbolicExplorator.coverage"]], "current_executor (tritondse.symbolicexplorator attribute)": [[5, "tritondse.SymbolicExplorator.current_executor"]], "drop_seed() (tritondse.seeds_manager.seedmanager method)": [[5, "tritondse.seeds_manager.SeedManager.drop_seed"]], "execution_count (tritondse.symbolicexplorator property)": [[5, "tritondse.SymbolicExplorator.execution_count"]], "explore() (tritondse.symbolicexplorator method)": [[5, "tritondse.SymbolicExplorator.explore"]], "is_new_seed() (tritondse.seeds_manager.seedmanager method)": [[5, "tritondse.seeds_manager.SeedManager.is_new_seed"]], "loader (tritondse.symbolicexplorator attribute)": [[5, "tritondse.SymbolicExplorator.loader"]], "pick_seed() (tritondse.seeds_manager.seedmanager method)": [[5, "tritondse.seeds_manager.SeedManager.pick_seed"]], "post_execution() (tritondse.seeds_manager.seedmanager method)": [[5, "tritondse.seeds_manager.SeedManager.post_execution"]], "post_exploration() (tritondse.symbolicexplorator method)": [[5, "tritondse.SymbolicExplorator.post_exploration"]], "post_exploration() (tritondse.seeds_manager.seedmanager method)": [[5, "tritondse.seeds_manager.SeedManager.post_exploration"]], "pp_meta_filename() (tritondse.seeds_manager.seedmanager method)": [[5, "tritondse.seeds_manager.SeedManager.pp_meta_filename"]], "seeds_available() (tritondse.seeds_manager.seedmanager method)": [[5, "tritondse.seeds_manager.SeedManager.seeds_available"]], "seeds_manager (tritondse.symbolicexplorator attribute)": [[5, "tritondse.SymbolicExplorator.seeds_manager"]], "status (tritondse.symbolicexplorator attribute)": [[5, "tritondse.SymbolicExplorator.status"]], "step() (tritondse.symbolicexplorator method)": [[5, "tritondse.SymbolicExplorator.step"]], "stop_exploration() (tritondse.symbolicexplorator method)": [[5, "tritondse.SymbolicExplorator.stop_exploration"]], "terminate_exploration() (tritondse.symbolicexplorator method)": [[5, "tritondse.SymbolicExplorator.terminate_exploration"]], "total_emulation_time (tritondse.symbolicexplorator property)": [[5, "tritondse.SymbolicExplorator.total_emulation_time"]], "total_solving_time (tritondse.seeds_manager.seedmanager property)": [[5, "tritondse.seeds_manager.SeedManager.total_solving_time"]], "ts (tritondse.symbolicexplorator attribute)": [[5, "tritondse.SymbolicExplorator.ts"]], "workspace (tritondse.symbolicexplorator attribute)": [[5, "tritondse.SymbolicExplorator.workspace"]], "base_stack (tritondse.cleloader attribute)": [[6, "tritondse.CleLoader.BASE_STACK"]], "base_stack (tritondse.program attribute)": [[6, "tritondse.Program.BASE_STACK"]], "cleloader (class in tritondse)": [[6, "tritondse.CleLoader"]], "end_stack (tritondse.cleloader attribute)": [[6, "tritondse.CleLoader.END_STACK"]], "end_stack (tritondse.program attribute)": [[6, "tritondse.Program.END_STACK"]], "extern_sym_base (tritondse.cleloader attribute)": [[6, "tritondse.CleLoader.EXTERN_SYM_BASE"]], "extern_sym_base (tritondse.program attribute)": [[6, "tritondse.Program.EXTERN_SYM_BASE"]], "extern_sym_size (tritondse.cleloader attribute)": [[6, "tritondse.CleLoader.EXTERN_SYM_SIZE"]], "extern_sym_size (tritondse.program attribute)": [[6, "tritondse.Program.EXTERN_SYM_SIZE"]], "loadablesegment (class in tritondse)": [[6, "tritondse.LoadableSegment"]], "loader (class in tritondse)": [[6, "tritondse.Loader"]], "monolithicloader (class in tritondse)": [[6, "tritondse.MonolithicLoader"]], "program (class in tritondse)": [[6, "tritondse.Program"]], "quokkaprogram (class in tritondse)": [[6, "tritondse.QuokkaProgram"]], "address (tritondse.loadablesegment attribute)": [[6, "tritondse.LoadableSegment.address"]], "arch_mode (tritondse.cleloader property)": [[6, "tritondse.CleLoader.arch_mode"]], "arch_mode (tritondse.loader property)": [[6, "tritondse.Loader.arch_mode"]], "arch_mode (tritondse.monolithicloader property)": [[6, "tritondse.MonolithicLoader.arch_mode"]], "arch_mode (tritondse.program property)": [[6, "tritondse.Program.arch_mode"]], "architecture (tritondse.cleloader property)": [[6, "tritondse.CleLoader.architecture"]], "architecture (tritondse.loader property)": [[6, "tritondse.Loader.architecture"]], "architecture (tritondse.monolithicloader property)": [[6, "tritondse.MonolithicLoader.architecture"]], "architecture (tritondse.program property)": [[6, "tritondse.Program.architecture"]], "architecture (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.architecture"]], "call_graph (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.call_graph"]], "capstone (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.capstone"]], "clear() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.clear"]], "content (tritondse.loadablesegment attribute)": [[6, "tritondse.LoadableSegment.content"]], "copy() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.copy"]], "cpustate (tritondse.cleloader property)": [[6, "tritondse.CleLoader.cpustate"]], "cpustate (tritondse.loader property)": [[6, "tritondse.Loader.cpustate"]], "cpustate (tritondse.monolithicloader property)": [[6, "tritondse.MonolithicLoader.cpustate"]], "cpustate (tritondse.program property)": [[6, "tritondse.Program.cpustate"]], "endianness (tritondse.cleloader property)": [[6, "tritondse.CleLoader.endianness"]], "endianness (tritondse.loader property)": [[6, "tritondse.Loader.endianness"]], "endianness (tritondse.monolithicloader property)": [[6, "tritondse.MonolithicLoader.endianness"]], "endianness (tritondse.program property)": [[6, "tritondse.Program.endianness"]], "endianness (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.endianness"]], "entry_point (tritondse.cleloader property)": [[6, "tritondse.CleLoader.entry_point"]], "entry_point (tritondse.loader property)": [[6, "tritondse.Loader.entry_point"]], "entry_point (tritondse.monolithicloader property)": [[6, "tritondse.MonolithicLoader.entry_point"]], "entry_point (tritondse.program property)": [[6, "tritondse.Program.entry_point"]], "entry_point (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.entry_point"]], "find_function_addr() (tritondse.cleloader method)": [[6, "tritondse.CleLoader.find_function_addr"]], "find_function_addr() (tritondse.loader method)": [[6, "tritondse.Loader.find_function_addr"]], "find_function_addr() (tritondse.monolithicloader method)": [[6, "tritondse.MonolithicLoader.find_function_addr"]], "find_function_addr() (tritondse.program method)": [[6, "tritondse.Program.find_function_addr"]], "find_function_addr() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.find_function_addr"]], "find_function_from_addr() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.find_function_from_addr"]], "format (tritondse.program property)": [[6, "tritondse.Program.format"]], "format (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.format"]], "from_binary() (tritondse.quokkaprogram static method)": [[6, "tritondse.QuokkaProgram.from_binary"]], "fromkeys() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.fromkeys"]], "func_chunk_index (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.func_chunk_index"]], "get() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.get"]], "get_call_graph() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.get_call_graph"]], "get_caller_instructions() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.get_caller_instructions"]], "get_chunk() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.get_chunk"]], "get_data() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.get_data"]], "get_first_function_by_chunk() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.get_first_function_by_chunk"]], "get_function() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.get_function"]], "get_function_by_chunk() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.get_function_by_chunk"]], "get_instruction() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.get_instruction"]], "get_segment() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.get_segment"]], "get_slice() (tritondse.quokkaprogram static method)": [[6, "tritondse.QuokkaProgram.get_slice"]], "hash (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.hash"]], "imported_functions_relocations() (tritondse.cleloader method)": [[6, "tritondse.CleLoader.imported_functions_relocations"]], "imported_functions_relocations() (tritondse.loader method)": [[6, "tritondse.Loader.imported_functions_relocations"]], "imported_functions_relocations() (tritondse.monolithicloader method)": [[6, "tritondse.MonolithicLoader.imported_functions_relocations"]], "imported_functions_relocations() (tritondse.program method)": [[6, "tritondse.Program.imported_functions_relocations"]], "imported_functions_relocations() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.imported_functions_relocations"]], "imported_variable_symbols_relocations() (tritondse.cleloader method)": [[6, "tritondse.CleLoader.imported_variable_symbols_relocations"]], "imported_variable_symbols_relocations() (tritondse.loader method)": [[6, "tritondse.Loader.imported_variable_symbols_relocations"]], "imported_variable_symbols_relocations() (tritondse.monolithicloader method)": [[6, "tritondse.MonolithicLoader.imported_variable_symbols_relocations"]], "imported_variable_symbols_relocations() (tritondse.program method)": [[6, "tritondse.Program.imported_variable_symbols_relocations"]], "imported_variable_symbols_relocations() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.imported_variable_symbols_relocations"]], "items() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.items"]], "iter_chunk() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.iter_chunk"]], "keys() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.keys"]], "logger (tritondse.quokkaprogram attribute)": [[6, "tritondse.QuokkaProgram.logger"]], "memory_segments() (tritondse.cleloader method)": [[6, "tritondse.CleLoader.memory_segments"]], "memory_segments() (tritondse.loader method)": [[6, "tritondse.Loader.memory_segments"]], "memory_segments() (tritondse.monolithicloader method)": [[6, "tritondse.MonolithicLoader.memory_segments"]], "memory_segments() (tritondse.program method)": [[6, "tritondse.Program.memory_segments"]], "memory_segments() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.memory_segments"]], "merge() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.merge"]], "name (tritondse.cleloader property)": [[6, "tritondse.CleLoader.name"]], "name (tritondse.loadablesegment attribute)": [[6, "tritondse.LoadableSegment.name"]], "name (tritondse.loader property)": [[6, "tritondse.Loader.name"]], "name (tritondse.monolithicloader property)": [[6, "tritondse.MonolithicLoader.name"]], "name (tritondse.program property)": [[6, "tritondse.Program.name"]], "name (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.name"]], "path (tritondse.cleloader attribute)": [[6, "tritondse.CleLoader.path"]], "path (tritondse.program attribute)": [[6, "tritondse.Program.path"]], "path (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.path"]], "perms (tritondse.loadablesegment attribute)": [[6, "tritondse.LoadableSegment.perms"]], "platform (tritondse.cleloader property)": [[6, "tritondse.CleLoader.platform"]], "platform (tritondse.loader property)": [[6, "tritondse.Loader.platform"]], "platform (tritondse.monolithicloader property)": [[6, "tritondse.MonolithicLoader.platform"]], "platform (tritondse.program property)": [[6, "tritondse.Program.platform"]], "platform (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.platform"]], "pop() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.pop"]], "popitem() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.popitem"]], "pypcode (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.pypcode"]], "relocation_enum (tritondse.program property)": [[6, "tritondse.Program.relocation_enum"]], "relocation_enum (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.relocation_enum"]], "segments (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.segments"]], "setdefault() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.setdefault"]], "size (tritondse.loadablesegment attribute)": [[6, "tritondse.LoadableSegment.size"]], "strings (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.strings"]], "structures (tritondse.quokkaprogram property)": [[6, "tritondse.QuokkaProgram.structures"]], "update() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.update"]], "values() (tritondse.quokkaprogram method)": [[6, "tritondse.QuokkaProgram.values"]], "allocatorexception (class in tritondse.heap_allocator)": [[7, "tritondse.heap_allocator.AllocatorException"]], "cpustate (class in tritondse.arch)": [[7, "tritondse.arch.CpuState"]], "extern_seg (tritondse.processstate attribute)": [[7, "tritondse.ProcessState.EXTERN_SEG"]], "heapallocator (class in tritondse.heap_allocator)": [[7, "tritondse.heap_allocator.HeapAllocator"]], "memory (class in tritondse.memory)": [[7, "tritondse.memory.Memory"]], "processstate (class in tritondse)": [[7, "tritondse.ProcessState"]], "stack_seg (tritondse.processstate attribute)": [[7, "tritondse.ProcessState.STACK_SEG"]], "threadcontext (class in tritondse.thread_context)": [[7, "tritondse.thread_context.ThreadContext"]], "actx (tritondse.processstate attribute)": [[7, "tritondse.ProcessState.actx"]], "alloc() (tritondse.heap_allocator.heapallocator method)": [[7, "tritondse.heap_allocator.HeapAllocator.alloc"]], "architecture (tritondse.processstate property)": [[7, "tritondse.ProcessState.architecture"]], "base_pointer (tritondse.arch.cpustate property)": [[7, "tritondse.arch.CpuState.base_pointer"]], "base_pointer_register (tritondse.processstate property)": [[7, "tritondse.ProcessState.base_pointer_register"]], "callbacks_enabled() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.callbacks_enabled"]], "cancel_join() (tritondse.thread_context.threadcontext method)": [[7, "tritondse.thread_context.ThreadContext.cancel_join"]], "clear_triton_callbacks() (tritondse.processstate method)": [[7, "tritondse.ProcessState.clear_triton_callbacks"]], "close_file_descriptor() (tritondse.processstate method)": [[7, "tritondse.ProcessState.close_file_descriptor"]], "concretize_argument() (tritondse.processstate method)": [[7, "tritondse.ProcessState.concretize_argument"]], "concretize_memory_bytes() (tritondse.processstate method)": [[7, "tritondse.ProcessState.concretize_memory_bytes"]], "concretize_memory_int() (tritondse.processstate method)": [[7, "tritondse.ProcessState.concretize_memory_int"]], "concretize_register() (tritondse.processstate method)": [[7, "tritondse.ProcessState.concretize_register"]], "cpu (tritondse.processstate attribute)": [[7, "tritondse.ProcessState.cpu"]], "create_file_descriptor() (tritondse.processstate method)": [[7, "tritondse.ProcessState.create_file_descriptor"]], "ctx (tritondse.memory.memory attribute)": [[7, "tritondse.memory.Memory.ctx"]], "current_instruction (tritondse.processstate property)": [[7, "tritondse.ProcessState.current_instruction"]], "current_thread (tritondse.processstate property)": [[7, "tritondse.ProcessState.current_thread"]], "disable_segmentation() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.disable_segmentation"]], "dynamic_symbol_table (tritondse.processstate attribute)": [[7, "tritondse.ProcessState.dynamic_symbol_table"]], "enable_segmentation() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.enable_segmentation"]], "endianness (tritondse.processstate attribute)": [[7, "tritondse.ProcessState.endianness"]], "evaluate_expression_model() (tritondse.processstate method)": [[7, "tritondse.ProcessState.evaluate_expression_model"]], "fetch_instruction() (tritondse.processstate method)": [[7, "tritondse.ProcessState.fetch_instruction"]], "file_descriptor_exists() (tritondse.processstate method)": [[7, "tritondse.ProcessState.file_descriptor_exists"]], "find_map() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.find_map"]], "free() (tritondse.heap_allocator.heapallocator method)": [[7, "tritondse.heap_allocator.HeapAllocator.free"]], "from_loader() (tritondse.processstate static method)": [[7, "tritondse.ProcessState.from_loader"]], "get_argument_symbolic() (tritondse.processstate method)": [[7, "tritondse.ProcessState.get_argument_symbolic"]], "get_argument_value() (tritondse.processstate method)": [[7, "tritondse.ProcessState.get_argument_value"]], "get_expression_variable_values_model() (tritondse.processstate method)": [[7, "tritondse.ProcessState.get_expression_variable_values_model"]], "get_file_descriptor() (tritondse.processstate method)": [[7, "tritondse.ProcessState.get_file_descriptor"]], "get_format_arguments() (tritondse.processstate method)": [[7, "tritondse.ProcessState.get_format_arguments"]], "get_format_string() (tritondse.processstate method)": [[7, "tritondse.ProcessState.get_format_string"]], "get_full_argument() (tritondse.processstate method)": [[7, "tritondse.ProcessState.get_full_argument"]], "get_map() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.get_map"]], "get_maps() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.get_maps"]], "get_path_constraints() (tritondse.processstate method)": [[7, "tritondse.ProcessState.get_path_constraints"]], "get_stack_value() (tritondse.processstate method)": [[7, "tritondse.ProcessState.get_stack_value"]], "get_string_argument() (tritondse.processstate method)": [[7, "tritondse.ProcessState.get_string_argument"]], "has_ever_been_written() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.has_ever_been_written"]], "heap_allocator (tritondse.processstate attribute)": [[7, "tritondse.ProcessState.heap_allocator"]], "initialize_context() (tritondse.processstate method)": [[7, "tritondse.ProcessState.initialize_context"]], "is_dead() (tritondse.thread_context.threadcontext method)": [[7, "tritondse.thread_context.ThreadContext.is_dead"]], "is_halt_instruction() (tritondse.processstate method)": [[7, "tritondse.ProcessState.is_halt_instruction"]], "is_heap_ptr() (tritondse.processstate method)": [[7, "tritondse.ProcessState.is_heap_ptr"]], "is_main_thread() (tritondse.thread_context.threadcontext method)": [[7, "tritondse.thread_context.ThreadContext.is_main_thread"]], "is_mapped() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.is_mapped"]], "is_memory_symbolic() (tritondse.processstate method)": [[7, "tritondse.ProcessState.is_memory_symbolic"]], "is_path_predicate_updated() (tritondse.processstate method)": [[7, "tritondse.ProcessState.is_path_predicate_updated"]], "is_ptr_allocated() (tritondse.heap_allocator.heapallocator method)": [[7, "tritondse.heap_allocator.HeapAllocator.is_ptr_allocated"]], "is_ptr_freed() (tritondse.heap_allocator.heapallocator method)": [[7, "tritondse.heap_allocator.HeapAllocator.is_ptr_freed"]], "is_register_symbolic() (tritondse.processstate method)": [[7, "tritondse.ProcessState.is_register_symbolic"]], "is_running() (tritondse.thread_context.threadcontext method)": [[7, "tritondse.thread_context.ThreadContext.is_running"]], "is_syscall() (tritondse.processstate method)": [[7, "tritondse.ProcessState.is_syscall"]], "is_waiting_to_join() (tritondse.thread_context.threadcontext method)": [[7, "tritondse.thread_context.ThreadContext.is_waiting_to_join"]], "join_thread() (tritondse.thread_context.threadcontext method)": [[7, "tritondse.thread_context.ThreadContext.join_thread"]], "kill() (tritondse.thread_context.threadcontext method)": [[7, "tritondse.thread_context.ThreadContext.kill"]], "last_branch_constraint (tritondse.processstate property)": [[7, "tritondse.ProcessState.last_branch_constraint"]], "map() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.map"]], "map_from_name() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.map_from_name"]], "memory (tritondse.processstate attribute)": [[7, "tritondse.ProcessState.memory"]], "minus_one (tritondse.processstate property)": [[7, "tritondse.ProcessState.minus_one"]], "mprotect() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.mprotect"]], "pack_integer() (tritondse.processstate method)": [[7, "tritondse.ProcessState.pack_integer"]], "path_predicate_size (tritondse.processstate property)": [[7, "tritondse.ProcessState.path_predicate_size"]], "pop_stack_value() (tritondse.processstate method)": [[7, "tritondse.ProcessState.pop_stack_value"]], "process_instruction() (tritondse.processstate method)": [[7, "tritondse.ProcessState.process_instruction"]], "program_counter (tritondse.arch.cpustate property)": [[7, "tritondse.arch.CpuState.program_counter"]], "program_counter_register (tritondse.processstate property)": [[7, "tritondse.ProcessState.program_counter_register"]], "ptr_bit_size (tritondse.processstate property)": [[7, "tritondse.ProcessState.ptr_bit_size"]], "ptr_size (tritondse.processstate property)": [[7, "tritondse.ProcessState.ptr_size"]], "push_constraint() (tritondse.processstate method)": [[7, "tritondse.ProcessState.push_constraint"]], "push_stack_value() (tritondse.processstate method)": [[7, "tritondse.ProcessState.push_stack_value"]], "read() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read"]], "read_char() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read_char"]], "read_dword() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read_dword"]], "read_int() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read_int"]], "read_long() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read_long"]], "read_long_long() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read_long_long"]], "read_ptr() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read_ptr"]], "read_qword() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read_qword"]], "read_register() (tritondse.processstate method)": [[7, "tritondse.ProcessState.read_register"]], "read_sint() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read_sint"]], "read_string() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read_string"]], "read_symbolic_memory_byte() (tritondse.processstate method)": [[7, "tritondse.ProcessState.read_symbolic_memory_byte"]], "read_symbolic_memory_bytes() (tritondse.processstate method)": [[7, "tritondse.ProcessState.read_symbolic_memory_bytes"]], "read_symbolic_memory_int() (tritondse.processstate method)": [[7, "tritondse.ProcessState.read_symbolic_memory_int"]], "read_symbolic_register() (tritondse.processstate method)": [[7, "tritondse.ProcessState.read_symbolic_register"]], "read_uchar() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read_uchar"]], "read_uint() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read_uint"]], "read_ulong() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read_ulong"]], "read_ulong_long() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read_ulong_long"]], "read_word() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.read_word"]], "register_triton_callback() (tritondse.processstate method)": [[7, "tritondse.ProcessState.register_triton_callback"]], "registers (tritondse.processstate property)": [[7, "tritondse.ProcessState.registers"]], "restore() (tritondse.thread_context.threadcontext method)": [[7, "tritondse.thread_context.ThreadContext.restore"]], "return_register (tritondse.processstate property)": [[7, "tritondse.ProcessState.return_register"]], "save() (tritondse.thread_context.threadcontext method)": [[7, "tritondse.thread_context.ThreadContext.save"]], "segmentation_enabled (tritondse.memory.memory property)": [[7, "tritondse.memory.Memory.segmentation_enabled"]], "set_endianess() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.set_endianess"]], "set_segmentation() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.set_segmentation"]], "set_solver() (tritondse.processstate method)": [[7, "tritondse.ProcessState.set_solver"]], "set_solver_timeout() (tritondse.processstate method)": [[7, "tritondse.ProcessState.set_solver_timeout"]], "set_thumb() (tritondse.processstate method)": [[7, "tritondse.ProcessState.set_thumb"]], "set_triton_mode() (tritondse.processstate method)": [[7, "tritondse.ProcessState.set_triton_mode"]], "solve() (tritondse.processstate method)": [[7, "tritondse.ProcessState.solve"]], "solve_enumerate_expression() (tritondse.processstate method)": [[7, "tritondse.ProcessState.solve_enumerate_expression"]], "solve_no_pp() (tritondse.processstate method)": [[7, "tritondse.ProcessState.solve_no_pp"]], "spawn_new_thread() (tritondse.processstate method)": [[7, "tritondse.ProcessState.spawn_new_thread"]], "stack_pointer (tritondse.arch.cpustate property)": [[7, "tritondse.arch.CpuState.stack_pointer"]], "stack_pointer_register (tritondse.processstate property)": [[7, "tritondse.ProcessState.stack_pointer_register"]], "switch_thread() (tritondse.processstate method)": [[7, "tritondse.ProcessState.switch_thread"]], "symbolize_memory_byte() (tritondse.processstate method)": [[7, "tritondse.ProcessState.symbolize_memory_byte"]], "symbolize_memory_bytes() (tritondse.processstate method)": [[7, "tritondse.ProcessState.symbolize_memory_bytes"]], "symbolize_register() (tritondse.processstate method)": [[7, "tritondse.ProcessState.symbolize_register"]], "threads (tritondse.processstate property)": [[7, "tritondse.ProcessState.threads"]], "tt_ctx (tritondse.processstate attribute)": [[7, "tritondse.ProcessState.tt_ctx"]], "unmap() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.unmap"]], "unpack_integer() (tritondse.processstate method)": [[7, "tritondse.ProcessState.unpack_integer"]], "without_segmentation() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.without_segmentation"]], "write() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.write"]], "write_argument_value() (tritondse.processstate method)": [[7, "tritondse.ProcessState.write_argument_value"]], "write_char() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.write_char"]], "write_dword() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.write_dword"]], "write_int() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.write_int"]], "write_long() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.write_long"]], "write_long_long() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.write_long_long"]], "write_ptr() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.write_ptr"]], "write_qword() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.write_qword"]], "write_register() (tritondse.processstate method)": [[7, "tritondse.ProcessState.write_register"]], "write_stack_value() (tritondse.processstate method)": [[7, "tritondse.ProcessState.write_stack_value"]], "write_symbolic_memory_byte() (tritondse.processstate method)": [[7, "tritondse.ProcessState.write_symbolic_memory_byte"]], "write_symbolic_memory_int() (tritondse.processstate method)": [[7, "tritondse.ProcessState.write_symbolic_memory_int"]], "write_symbolic_register() (tritondse.processstate method)": [[7, "tritondse.ProcessState.write_symbolic_register"]], "write_word() (tritondse.memory.memory method)": [[7, "tritondse.memory.Memory.write_word"]], "formatstringsanitizer (class in tritondse.sanitizers)": [[8, "tritondse.sanitizers.FormatStringSanitizer"]], "integeroverflowsanitizer (class in tritondse.sanitizers)": [[8, "tritondse.sanitizers.IntegerOverflowSanitizer"]], "nullderefsanitizer (class in tritondse.sanitizers)": [[8, "tritondse.sanitizers.NullDerefSanitizer"]], "uafsanitizer (class in tritondse.sanitizers)": [[8, "tritondse.sanitizers.UAFSanitizer"]], "callbacks (tritondse.sanitizers.formatstringsanitizer property)": [[8, "tritondse.sanitizers.FormatStringSanitizer.callbacks"]], "callbacks (tritondse.sanitizers.integeroverflowsanitizer property)": [[8, "tritondse.sanitizers.IntegerOverflowSanitizer.callbacks"]], "callbacks (tritondse.sanitizers.nullderefsanitizer property)": [[8, "tritondse.sanitizers.NullDerefSanitizer.callbacks"]], "callbacks (tritondse.sanitizers.uafsanitizer property)": [[8, "tritondse.sanitizers.UAFSanitizer.callbacks"]], "check() (tritondse.sanitizers.formatstringsanitizer static method)": [[8, "tritondse.sanitizers.FormatStringSanitizer.check"]], "check() (tritondse.sanitizers.integeroverflowsanitizer static method)": [[8, "tritondse.sanitizers.IntegerOverflowSanitizer.check"]], "check() (tritondse.sanitizers.nullderefsanitizer static method)": [[8, "tritondse.sanitizers.NullDerefSanitizer.check"]], "check() (tritondse.sanitizers.uafsanitizer static method)": [[8, "tritondse.sanitizers.UAFSanitizer.check"]], "tritondse.sanitizers": [[8, "module-tritondse.sanitizers"]], "composite (tritondse.seed.seedformat attribute)": [[9, "tritondse.seed.SeedFormat.COMPOSITE"]], "crash (tritondse.seed.seedstatus attribute)": [[9, "tritondse.seed.SeedStatus.CRASH"]], "compositedata (class in tritondse.seed)": [[9, "tritondse.seed.CompositeData"]], "hang (tritondse.seed.seedstatus attribute)": [[9, "tritondse.seed.SeedStatus.HANG"]], "new (tritondse.seed.seedstatus attribute)": [[9, "tritondse.seed.SeedStatus.NEW"]], "ok_done (tritondse.seed.seedstatus attribute)": [[9, "tritondse.seed.SeedStatus.OK_DONE"]], "raw (tritondse.seed.seedformat attribute)": [[9, "tritondse.seed.SeedFormat.RAW"]], "seed (class in tritondse.seed)": [[9, "tritondse.seed.Seed"]], "__annotations__ (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.__annotations__"]], "__bytes__() (tritondse.seed.compositedata method)": [[9, "tritondse.seed.CompositeData.__bytes__"]], "__bytes__() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.__bytes__"]], "__dataclass_fields__ (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.__dataclass_fields__"]], "__dataclass_params__ (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.__dataclass_params__"]], "__delattr__() (tritondse.seed.compositedata method)": [[9, "tritondse.seed.CompositeData.__delattr__"]], "__dict__ (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.__dict__"]], "__dict__ (tritondse.seed.seed attribute)": [[9, "tritondse.seed.Seed.__dict__"]], "__eq__() (tritondse.seed.compositedata method)": [[9, "tritondse.seed.CompositeData.__eq__"]], "__eq__() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.__eq__"]], "__hash__() (tritondse.seed.compositedata method)": [[9, "tritondse.seed.CompositeData.__hash__"]], "__hash__() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.__hash__"]], "__init__() (tritondse.seed.compositedata method)": [[9, "tritondse.seed.CompositeData.__init__"]], "__init__() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.__init__"]], "__len__() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.__len__"]], "__match_args__ (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.__match_args__"]], "__module__ (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.__module__"]], "__module__ (tritondse.seed.seed attribute)": [[9, "tritondse.seed.Seed.__module__"]], "__module__ (tritondse.seed.seedformat attribute)": [[9, "tritondse.seed.SeedFormat.__module__"]], "__module__ (tritondse.seed.seedstatus attribute)": [[9, "tritondse.seed.SeedStatus.__module__"]], "__repr__() (tritondse.seed.compositedata method)": [[9, "tritondse.seed.CompositeData.__repr__"]], "__setattr__() (tritondse.seed.compositedata method)": [[9, "tritondse.seed.CompositeData.__setattr__"]], "__weakref__ (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.__weakref__"]], "__weakref__ (tritondse.seed.seed attribute)": [[9, "tritondse.seed.Seed.__weakref__"]], "argv (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.argv"]], "bytes() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.bytes"]], "filename (tritondse.seed.seed property)": [[9, "tritondse.seed.Seed.filename"]], "files (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.files"]], "format (tritondse.seed.seed property)": [[9, "tritondse.seed.Seed.format"]], "from_bytes() (tritondse.seed.seed static method)": [[9, "tritondse.seed.Seed.from_bytes"]], "from_dict() (tritondse.seed.compositedata static method)": [[9, "tritondse.seed.CompositeData.from_dict"]], "from_file() (tritondse.seed.seed static method)": [[9, "tritondse.seed.Seed.from_file"]], "get_file_input() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.get_file_input"]], "hash (tritondse.seed.seed property)": [[9, "tritondse.seed.Seed.hash"]], "is_bootstrap_seed() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.is_bootstrap_seed"]], "is_composite() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.is_composite"]], "is_file_defined() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.is_file_defined"]], "is_fresh() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.is_fresh"]], "is_raw() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.is_raw"]], "is_status_set() (tritondse.seed.seed method)": [[9, "tritondse.seed.Seed.is_status_set"]], "size (tritondse.seed.seed property)": [[9, "tritondse.seed.Seed.size"]], "status (tritondse.seed.seed property)": [[9, "tritondse.seed.Seed.status"]], "tritondse.seed": [[9, "module-tritondse.seed"]], "variables (tritondse.seed.compositedata attribute)": [[9, "tritondse.seed.CompositeData.variables"]], "qbditrace (class in tritondse.trace)": [[10, "tritondse.trace.QBDITrace"]], "qbdi_script_filepath (tritondse.trace.qbditrace attribute)": [[10, "tritondse.trace.QBDITrace.QBDI_SCRIPT_FILEPATH"]], "trace (class in tritondse.trace)": [[10, "tritondse.trace.Trace"]], "traceexception": [[10, "tritondse.trace.TraceException"]], "tritontrace (class in tritondse.trace)": [[10, "tritondse.trace.TritonTrace"]], "coverage (tritondse.trace.qbditrace property)": [[10, "tritondse.trace.QBDITrace.coverage"]], "coverage (tritondse.trace.trace property)": [[10, "tritondse.trace.Trace.coverage"]], "coverage (tritondse.trace.tritontrace property)": [[10, "tritondse.trace.TritonTrace.coverage"]], "from_file() (tritondse.trace.qbditrace static method)": [[10, "tritondse.trace.QBDITrace.from_file"]], "from_file() (tritondse.trace.trace static method)": [[10, "tritondse.trace.Trace.from_file"]], "from_file() (tritondse.trace.tritontrace static method)": [[10, "tritondse.trace.TritonTrace.from_file"]], "get_coverage() (tritondse.trace.trace method)": [[10, "tritondse.trace.Trace.get_coverage"]], "run() (tritondse.trace.qbditrace static method)": [[10, "tritondse.trace.QBDITrace.run"]], "run() (tritondse.trace.trace static method)": [[10, "tritondse.trace.Trace.run"]], "run() (tritondse.trace.tritontrace static method)": [[10, "tritondse.trace.TritonTrace.run"]], "strategy (tritondse.trace.trace property)": [[10, "tritondse.trace.Trace.strategy"]], "trace (tritondse.trace.qbditrace property)": [[10, "tritondse.trace.QBDITrace.trace"]], "trace (tritondse.trace.trace property)": [[10, "tritondse.trace.Trace.trace"]], "tritondse.trace": [[10, "module-tritondse.trace"]], "aarch64 (tritondse.types.architecture attribute)": [[11, "tritondse.types.Architecture.AARCH64"]], "android (tritondse.types.platform attribute)": [[11, "tritondse.types.Platform.ANDROID"]], "arm32 (tritondse.types.architecture attribute)": [[11, "tritondse.types.Architecture.ARM32"]], "addr (in module tritondse.types)": [[11, "tritondse.types.Addr"]], "astnode (class in tritondse.types)": [[11, "tritondse.types.AstNode"]], "big (tritondse.types.endian attribute)": [[11, "tritondse.types.Endian.BIG"]], "bitwuzla (tritondse.types.smtsolver attribute)": [[11, "tritondse.types.SmtSolver.BITWUZLA"]], "bitsize (in module tritondse.types)": [[11, "tritondse.types.BitSize"]], "bytesize (in module tritondse.types)": [[11, "tritondse.types.ByteSize"]], "conditional_jmp (tritondse.types.symextype attribute)": [[11, "tritondse.types.SymExType.CONDITIONAL_JMP"]], "dynamic_jmp (tritondse.types.symextype attribute)": [[11, "tritondse.types.SymExType.DYNAMIC_JMP"]], "edge (in module tritondse.types)": [[11, "tritondse.types.Edge"]], "expression (class in tritondse.types)": [[11, "tritondse.types.Expression"]], "filedesc (class in tritondse.types)": [[11, "tritondse.types.FileDesc"]], "ios (tritondse.types.platform attribute)": [[11, "tritondse.types.Platform.IOS"]], "input (in module tritondse.types)": [[11, "tritondse.types.Input"]], "linux (tritondse.types.platform attribute)": [[11, "tritondse.types.Platform.LINUX"]], "little (tritondse.types.endian attribute)": [[11, "tritondse.types.Endian.LITTLE"]], "macos (tritondse.types.platform attribute)": [[11, "tritondse.types.Platform.MACOS"]], "model (class in tritondse.types)": [[11, "tritondse.types.Model"]], "pathbranch (class in tritondse.types)": [[11, "tritondse.types.PathBranch"]], "pathconstraint (class in tritondse.types)": [[11, "tritondse.types.PathConstraint"]], "pathhash (in module tritondse.types)": [[11, "tritondse.types.PathHash"]], "pathlike (in module tritondse.types)": [[11, "tritondse.types.PathLike"]], "r (tritondse.types.perm attribute)": [[11, "tritondse.types.Perm.R"]], "register (class in tritondse.types)": [[11, "tritondse.types.Register"]], "registers (class in tritondse.types)": [[11, "tritondse.types.Registers"]], "sat (tritondse.types.solverstatus attribute)": [[11, "tritondse.types.SolverStatus.SAT"]], "symbolic_read (tritondse.types.symextype attribute)": [[11, "tritondse.types.SymExType.SYMBOLIC_READ"]], "symbolic_write (tritondse.types.symextype attribute)": [[11, "tritondse.types.SymExType.SYMBOLIC_WRITE"]], "symbolicvariable (class in tritondse.types)": [[11, "tritondse.types.SymbolicVariable"]], "thumb (tritondse.types.archmode attribute)": [[11, "tritondse.types.ArchMode.THUMB"]], "timeout (tritondse.types.solverstatus attribute)": [[11, "tritondse.types.SolverStatus.TIMEOUT"]], "unknown (tritondse.types.solverstatus attribute)": [[11, "tritondse.types.SolverStatus.UNKNOWN"]], "unsat (tritondse.types.solverstatus attribute)": [[11, "tritondse.types.SolverStatus.UNSAT"]], "w (tritondse.types.perm attribute)": [[11, "tritondse.types.Perm.W"]], "windows (tritondse.types.platform attribute)": [[11, "tritondse.types.Platform.WINDOWS"]], "x (tritondse.types.perm attribute)": [[11, "tritondse.types.Perm.X"]], "x86 (tritondse.types.architecture attribute)": [[11, "tritondse.types.Architecture.X86"]], "x86_64 (tritondse.types.architecture attribute)": [[11, "tritondse.types.Architecture.X86_64"]], "z3 (tritondse.types.smtsolver attribute)": [[11, "tritondse.types.SmtSolver.Z3"]], "constraint (tritondse.types.pathbranch attribute)": [[11, "tritondse.types.PathBranch.constraint"]], "dstaddr (tritondse.types.pathbranch attribute)": [[11, "tritondse.types.PathBranch.dstAddr"]], "fd (tritondse.types.filedesc attribute)": [[11, "tritondse.types.FileDesc.fd"]], "fgets() (tritondse.types.filedesc method)": [[11, "tritondse.types.FileDesc.fgets"]], "id (tritondse.types.filedesc attribute)": [[11, "tritondse.types.FileDesc.id"]], "istaken (tritondse.types.pathbranch attribute)": [[11, "tritondse.types.PathBranch.isTaken"]], "is_input_fd() (tritondse.types.filedesc method)": [[11, "tritondse.types.FileDesc.is_input_fd"]], "is_real_fd() (tritondse.types.filedesc method)": [[11, "tritondse.types.FileDesc.is_real_fd"]], "name (tritondse.types.filedesc attribute)": [[11, "tritondse.types.FileDesc.name"]], "offset (tritondse.types.filedesc property)": [[11, "tritondse.types.FileDesc.offset"]], "raddr (in module tritondse.types)": [[11, "tritondse.types.rAddr"]], "read() (tritondse.types.filedesc method)": [[11, "tritondse.types.FileDesc.read"]], "srcaddr (tritondse.types.pathbranch attribute)": [[11, "tritondse.types.PathBranch.srcAddr"]], "tritondse.types": [[11, "module-tritondse.types"]], "bin_dir (tritondse.workspace.workspace attribute)": [[12, "tritondse.workspace.Workspace.BIN_DIR"]], "corpus_dir (tritondse.workspace.workspace attribute)": [[12, "tritondse.workspace.Workspace.CORPUS_DIR"]], "crash_dir (tritondse.workspace.workspace attribute)": [[12, "tritondse.workspace.Workspace.CRASH_DIR"]], "default_workspace (tritondse.workspace.workspace attribute)": [[12, "tritondse.workspace.Workspace.DEFAULT_WORKSPACE"]], "hang_dir (tritondse.workspace.workspace attribute)": [[12, "tritondse.workspace.Workspace.HANG_DIR"]], "log_file (tritondse.workspace.workspace attribute)": [[12, "tritondse.workspace.Workspace.LOG_FILE"]], "metadata_dir (tritondse.workspace.workspace attribute)": [[12, "tritondse.workspace.Workspace.METADATA_DIR"]], "worklist_dir (tritondse.workspace.workspace attribute)": [[12, "tritondse.workspace.Workspace.WORKLIST_DIR"]], "workspace (class in tritondse.workspace)": [[12, "tritondse.workspace.Workspace"]], "get_binary_directory() (tritondse.workspace.workspace method)": [[12, "tritondse.workspace.Workspace.get_binary_directory"]], "get_metadata_file() (tritondse.workspace.workspace method)": [[12, "tritondse.workspace.Workspace.get_metadata_file"]], "get_metadata_file_path() (tritondse.workspace.workspace method)": [[12, "tritondse.workspace.Workspace.get_metadata_file_path"]], "initialize() (tritondse.workspace.workspace method)": [[12, "tritondse.workspace.Workspace.initialize"]], "iter_corpus() (tritondse.workspace.workspace method)": [[12, "tritondse.workspace.Workspace.iter_corpus"]], "iter_crashes() (tritondse.workspace.workspace method)": [[12, "tritondse.workspace.Workspace.iter_crashes"]], "iter_hangs() (tritondse.workspace.workspace method)": [[12, "tritondse.workspace.Workspace.iter_hangs"]], "iter_worklist() (tritondse.workspace.workspace method)": [[12, "tritondse.workspace.Workspace.iter_worklist"]], "logfile_path (tritondse.workspace.workspace property)": [[12, "tritondse.workspace.Workspace.logfile_path"]], "root_dir (tritondse.workspace.workspace attribute)": [[12, "tritondse.workspace.Workspace.root_dir"]], "save_file() (tritondse.workspace.workspace method)": [[12, "tritondse.workspace.Workspace.save_file"]], "save_metadata_file() (tritondse.workspace.workspace method)": [[12, "tritondse.workspace.Workspace.save_metadata_file"]], "save_seed() (tritondse.workspace.workspace method)": [[12, "tritondse.workspace.Workspace.save_seed"]], "update_seed_location() (tritondse.workspace.workspace method)": [[12, "tritondse.workspace.Workspace.update_seed_location"]], "rtn___fprintf_chk() (in module tritondse.routines)": [[13, "tritondse.routines.rtn___fprintf_chk"]], "rtn__setjmp() (in module tritondse.routines)": [[13, "tritondse.routines.rtn__setjmp"]], "rtn_abort() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_abort"]], "rtn_assert_fail() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_assert_fail"]], "rtn_atexit() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_atexit"]], "rtn_atoi() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_atoi"]], "rtn_calloc() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_calloc"]], "rtn_clock_gettime() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_clock_gettime"]], "rtn_ctype_b_loc() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_ctype_b_loc"]], "rtn_ctype_toupper_loc() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_ctype_toupper_loc"]], "rtn_errno_location() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_errno_location"]], "rtn_exit() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_exit"]], "rtn_fclose() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_fclose"]], "rtn_fgets() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_fgets"]], "rtn_fopen() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_fopen"]], "rtn_fprintf() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_fprintf"]], "rtn_fputc() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_fputc"]], "rtn_fputs() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_fputs"]], "rtn_fread() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_fread"]], "rtn_free() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_free"]], "rtn_fseek() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_fseek"]], "rtn_ftell() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_ftell"]], "rtn_fwrite() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_fwrite"]], "rtn_getchar() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_getchar"]], "rtn_getenv() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_getenv"]], "rtn_gettimeofday() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_gettimeofday"]], "rtn_isspace() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_isspace"]], "rtn_libc_start_main() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_libc_start_main"]], "rtn_longjmp() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_longjmp"]], "rtn_malloc() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_malloc"]], "rtn_memcmp() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_memcmp"]], "rtn_memcpy() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_memcpy"]], "rtn_memmem() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_memmem"]], "rtn_memmove() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_memmove"]], "rtn_mempcpy() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_mempcpy"]], "rtn_memset() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_memset"]], "rtn_open() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_open"]], "rtn_printf() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_printf"]], "rtn_pthread_create() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_pthread_create"]], "rtn_pthread_exit() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_pthread_exit"]], "rtn_pthread_join() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_pthread_join"]], "rtn_pthread_mutex_destroy() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_pthread_mutex_destroy"]], "rtn_pthread_mutex_init() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_pthread_mutex_init"]], "rtn_pthread_mutex_lock() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_pthread_mutex_lock"]], "rtn_pthread_mutex_unlock() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_pthread_mutex_unlock"]], "rtn_puts() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_puts"]], "rtn_rand() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_rand"]], "rtn_read() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_read"]], "rtn_realloc() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_realloc"]], "rtn_sem_destroy() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_sem_destroy"]], "rtn_sem_getvalue() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_sem_getvalue"]], "rtn_sem_init() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_sem_init"]], "rtn_sem_post() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_sem_post"]], "rtn_sem_timedwait() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_sem_timedwait"]], "rtn_sem_trywait() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_sem_trywait"]], "rtn_sem_wait() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_sem_wait"]], "rtn_setlocale() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_setlocale"]], "rtn_sleep() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_sleep"]], "rtn_sprintf() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_sprintf"]], "rtn_stack_chk_fail() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_stack_chk_fail"]], "rtn_strcasecmp() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strcasecmp"]], "rtn_strchr() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strchr"]], "rtn_strcmp() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strcmp"]], "rtn_strcpy() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strcpy"]], "rtn_strdup() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strdup"]], "rtn_strerror() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strerror"]], "rtn_strlen() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strlen"]], "rtn_strncasecmp() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strncasecmp"]], "rtn_strncmp() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strncmp"]], "rtn_strncpy() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strncpy"]], "rtn_strtok_r() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strtok_r"]], "rtn_strtoul() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_strtoul"]], "rtn_write() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_write"]], "rtn_xstat() (in module tritondse.routines)": [[13, "tritondse.routines.rtn_xstat"]], "tritondse.routines": [[13, "module-tritondse.routines"]], "freshseedprioritizerworklist (class in tritondse.worklist)": [[14, "tritondse.worklist.FreshSeedPrioritizerWorklist"]], "seedscheduler (class in tritondse.worklist)": [[14, "tritondse.worklist.SeedScheduler"]], "worklistaddresstoset (class in tritondse.worklist)": [[14, "tritondse.worklist.WorklistAddressToSet"]], "worklistrand (class in tritondse.worklist)": [[14, "tritondse.worklist.WorklistRand"]], "__len__() (tritondse.worklist.freshseedprioritizerworklist method)": [[14, "tritondse.worklist.FreshSeedPrioritizerWorklist.__len__"]], "__len__() (tritondse.worklist.worklistaddresstoset method)": [[14, "tritondse.worklist.WorklistAddressToSet.__len__"]], "__len__() (tritondse.worklist.worklistrand method)": [[14, "tritondse.worklist.WorklistRand.__len__"]], "add() (tritondse.worklist.freshseedprioritizerworklist method)": [[14, "tritondse.worklist.FreshSeedPrioritizerWorklist.add"]], "add() (tritondse.worklist.seedscheduler method)": [[14, "tritondse.worklist.SeedScheduler.add"]], "add() (tritondse.worklist.worklistaddresstoset method)": [[14, "tritondse.worklist.WorklistAddressToSet.add"]], "add() (tritondse.worklist.worklistrand method)": [[14, "tritondse.worklist.WorklistRand.add"]], "can_solve_models() (tritondse.worklist.freshseedprioritizerworklist method)": [[14, "tritondse.worklist.FreshSeedPrioritizerWorklist.can_solve_models"]], "can_solve_models() (tritondse.worklist.seedscheduler method)": [[14, "tritondse.worklist.SeedScheduler.can_solve_models"]], "can_solve_models() (tritondse.worklist.worklistaddresstoset method)": [[14, "tritondse.worklist.WorklistAddressToSet.can_solve_models"]], "can_solve_models() (tritondse.worklist.worklistrand method)": [[14, "tritondse.worklist.WorklistRand.can_solve_models"]], "has_seed_remaining() (tritondse.worklist.freshseedprioritizerworklist method)": [[14, "tritondse.worklist.FreshSeedPrioritizerWorklist.has_seed_remaining"]], "has_seed_remaining() (tritondse.worklist.seedscheduler method)": [[14, "tritondse.worklist.SeedScheduler.has_seed_remaining"]], "has_seed_remaining() (tritondse.worklist.worklistaddresstoset method)": [[14, "tritondse.worklist.WorklistAddressToSet.has_seed_remaining"]], "has_seed_remaining() (tritondse.worklist.worklistrand method)": [[14, "tritondse.worklist.WorklistRand.has_seed_remaining"]], "pick() (tritondse.worklist.freshseedprioritizerworklist method)": [[14, "tritondse.worklist.FreshSeedPrioritizerWorklist.pick"]], "pick() (tritondse.worklist.seedscheduler method)": [[14, "tritondse.worklist.SeedScheduler.pick"]], "pick() (tritondse.worklist.worklistaddresstoset method)": [[14, "tritondse.worklist.WorklistAddressToSet.pick"]], "pick() (tritondse.worklist.worklistrand method)": [[14, "tritondse.worklist.WorklistRand.pick"]], "post_execution() (tritondse.worklist.freshseedprioritizerworklist method)": [[14, "tritondse.worklist.FreshSeedPrioritizerWorklist.post_execution"]], "post_execution() (tritondse.worklist.seedscheduler method)": [[14, "tritondse.worklist.SeedScheduler.post_execution"]], "post_execution() (tritondse.worklist.worklistaddresstoset method)": [[14, "tritondse.worklist.WorklistAddressToSet.post_execution"]], "post_execution() (tritondse.worklist.worklistrand method)": [[14, "tritondse.worklist.WorklistRand.post_execution"]], "post_exploration() (tritondse.worklist.freshseedprioritizerworklist method)": [[14, "tritondse.worklist.FreshSeedPrioritizerWorklist.post_exploration"]], "post_exploration() (tritondse.worklist.seedscheduler method)": [[14, "tritondse.worklist.SeedScheduler.post_exploration"]], "post_exploration() (tritondse.worklist.worklistaddresstoset method)": [[14, "tritondse.worklist.WorklistAddressToSet.post_exploration"]], "post_exploration() (tritondse.worklist.worklistrand method)": [[14, "tritondse.worklist.WorklistRand.post_exploration"]], "tritondse.worklist": [[14, "module-tritondse.worklist"]], "update_worklist() (tritondse.worklist.freshseedprioritizerworklist method)": [[14, "tritondse.worklist.FreshSeedPrioritizerWorklist.update_worklist"]], "update_worklist() (tritondse.worklist.seedscheduler method)": [[14, "tritondse.worklist.SeedScheduler.update_worklist"]], "update_worklist() (tritondse.worklist.worklistaddresstoset method)": [[14, "tritondse.worklist.WorklistAddressToSet.update_worklist"]], "update_worklist() (tritondse.worklist.worklistrand method)": [[14, "tritondse.worklist.WorklistRand.update_worklist"]]}})